bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  i.set(buffer,  childSettings,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(buffer,  childSettings,  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(buffer,  childSettings,  separator);	  i.set(buffer,    childSettings);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  i.set(childSettings,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(childSettings,  buffer);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(childSettings,  buffer);	  i.set(buffer,    childSettings);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  i.set(buffer,  childSettings.length);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(buffer,  childSettings.length);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(buffer,  childSettings.length);	  i.set(buffer,    childSettings);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  i.remove(childSettings.toArray(new  Option[childSettings.size()  ]));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(childSettings.toArray(new  Option[childSettings.size()  ]));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(childSettings.toArray(new  Option[childSettings.size()  ]));	  i.remove(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
11	[BUG]  [BUGGY]  i.remove(childSettings.getName());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(childSettings.getName());  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(childSettings.getName());	  i.remove(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  i.remove(childSettings.toArray(new  Prefixes[childSettings.size()  ]));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(childSettings.toArray(new  Prefixes[childSettings.size()  ]));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(childSettings.toArray(new  Prefixes[childSettings.size()  ]));	  i.remove(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.remove();  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.re  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.re  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  i.re	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
16	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  buffer);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings);	  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
22	[BUG]  [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);	  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
23	[BUG]  [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED  +  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED  +  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED  +  separator);	  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
24	[BUG]  [BUGGY]  buffer.append( "none ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append( "none ");  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append( "none ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  buffer.append( "null ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append( "null ");  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append( "null ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  buffer.append( "None ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append( "None ");  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append( "None ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent,  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent,  separator);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
30	[BUG]  [BUGGY]  buffer.append('  ').append(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append('  ').append(separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append('  ').append(separator);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  buffer.append(''+  separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(''+  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(''+  separator);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  buffer.append('  ').append(childSettings);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append('  ').append(childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append('  ').append(childSettings);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  buffer.append(childSettings).append('n');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(childSettings).append('n');  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(childSettings).append('n');	  buffer.append(separator).append('n');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
37	[BUG]  [BUGGY]  buffer.append(separator).append('n',  childSettings);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(separator).append('n',  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(separator).append('n',  childSettings);	  buffer.append(separator).append('n');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.size()    >=    maximum);    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);	  Preconditions.checkState(childSettings.size()!=    maximum);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);	  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
41	[BUG]  [BUGGY]  children.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  false);	  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
44	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  else  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  else  {  buffer.append( ",   ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  else  {  buffer.append( ",   ");  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
45	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  buffer.append( ", ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  buffer.append( ", ");  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  <  minimum);	  Preconditions.checkState(childSettings.size()    >    minimum);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  2);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
52	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP,  separator);	  childSettings.add(DisplaySetting.DISPLAY_GROUP);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  2);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum,  childSettings.size());  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_E    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_E    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GRO  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GRO  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GRO	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_E    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_OPTIONAL));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_OPTIONAL));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_OPTIONAL));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  buffer.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append( ",n ");  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append( ",n ");	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
67	[BUG]  [BUGGY]  buffer.append(',');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(',');  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(',');	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
69	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >  minimum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.size()    ==    minimum);    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.removeAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(prefixes);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(prefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(prefixes);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.removeAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  -  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  -  1);	  Preconditions.checkState(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  -  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  -  1);	  Preconditions.checkState(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  separator);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  buffer.append(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  outer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer,  outer);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);	  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);	  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
85	[BUG]  [BUGGY]  i.set(buffer,  separator,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(buffer,  separator,  newAnonymous);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(buffer,  separator,  newAnonymous);	  i.set(buffer,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
86	[BUG]  [BUGGY]  i.set(buffer,  newAnonymous,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(buffer,  newAnonymous,  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(buffer,  newAnonymous,  separator);	  i.set(buffer,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
87	[BUG]  [BUGGY]  i.set(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.set(buffer,  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.set(buffer,  separator);	  i.set(buffer,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
88	[BUG]  [BUGGY]  i.removeChild(childSettings);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.removeChild(childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.removeChild(childSettings);	  i.remove(appendUsage);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
89	[BUG]  [BUGGY]  i.remove(appendSeparator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(appendSeparator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(appendSeparator);	  i.remove(appendUsage);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  <  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.size()    >    maximum);    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
91	[BUG]  [BUGGY]  buffer.append('n','-');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append('n','-');  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append('n','-');	  buffer.append('n');    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  }	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  outer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator,  outer);	  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
97	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_E  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_E  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_E	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPAND  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPAND  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPAND	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
104	[BUG]  [BUGGY]  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  null);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  null);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,  null);	  childSettings.put(DisplaySetting.DISPLAY_GROUP_EXPANDED,    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  buffer.append( "  - ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append( "  - ");  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append( "  - ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
107	[BUG]  [BUGGY]  i.remove(appendPrefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(appendPrefix);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(appendPrefix);	  i.remove(appendUsage);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  i.remove(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(separator);	  i.remove(appendUsage);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
109	[BUG]  [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator);	  children.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.set(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.set(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.set(DisplaySetting.DISPLAY_OPTIONAL);	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
112	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.addAll(prefixes);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.addAll(prefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.addAll(prefixes);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
113	[BUG]  [BUGGY]  ChildSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  ChildSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	ChildSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
114	[BUG]  [BUGGY]  children.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  children.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	children.add(DisplaySetting.DISPLAY_OPTIONAL);	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
115	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.removeAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.removeAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.removeAll(newPrefixes);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.removeAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  -  1);	  Preconditions.checkState(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  separator));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  separator));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  separator));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
122	[BUG]  [BUGGY]  buffer.append(separator).append('/');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(separator).append('/');  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(separator).append('/');	  buffer.append(separator).append('n');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
123	[BUG]  [BUGGY]  buffer.append('  ',  childSettings);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append('  ',  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append('  ',  childSettings);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings!=  null)  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_E	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
125	[BUG]  [BUGGY]  i.remove(buffer,  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(buffer,  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(buffer,  childSettings);	  i.set(buffer,    childSettings);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
126	[BUG]  [BUGGY]  i.remove(buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(buffer);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(buffer);	  i.set(buffer,    childSettings);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
127	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
128	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.removeAll(newPrefixes);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.removeAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  outer);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  outer);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
134	[BUG]  [BUGGY]  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  childSettings  =  DisplaySetting.NONE;  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	childSettings  =  DisplaySetting.NONE;	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL,  separator);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL,  separator);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
136	[BUG]  [BUGGY]  if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >=  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >=  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >=  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }	  Preconditions.checkState(childSettings.size()    >=    maximum);    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator),  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator),  childSettings);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator),  childSettings);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
140	[BUG]  [BUGGY]  if(!childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
141	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
142	[BUG]  [BUGGY]  if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings  ==  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }	  if(childSettings!=    null)    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
143	[BUG]  [BUGGY]  buffer.append(separator).append(',');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  buffer.append(separator).append(',');  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	buffer.append(separator).append(',');	  buffer.append(separator).append('n');    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
144	[BUG]  [BUGGY]  i.remove(0);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  i.remove(0);  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	i.remove(0);	  i.remove(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
145	[BUG]  [BUGGY]  pairSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  pairSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	pairSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
146	[BUG]  [BUGGY]  if(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(newPrefixes);  }	  Preconditions.checkArgument(childSettings.containsAll(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
147	[BUG]  [BUGGY]  if(!prefixes.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(!prefixes.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(!prefixes.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addAll(prefixes);  }	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);      [BUGGY]  if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }  [BUGGY]      childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	if(childSettings.size()  >  maximum)  {  Preconditions.checkState(childSettings.size()  >  maximum);  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  }	  Preconditions.checkState(childSettings.size()    >    maximum);    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
