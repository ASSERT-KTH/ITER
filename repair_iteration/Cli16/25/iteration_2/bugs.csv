bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(display);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(display);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(display);	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(DisplaySetting.DISPLAY_GROUP_EXPANDED);	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  childSettings  =  new  HashSet(childSettings.size());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(childSettings.size());  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(childSettings.size());	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  1);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  >  minimum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  1);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  <  maximum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  -  1);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  -  1);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  childSettings  =  new  HashSet(parent,  buffer);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(parent,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(parent,  buffer);	  childSettings    =    new    HashSet(parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(parent);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(parent);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(parent);	  childSettings    =    new    HashSet(parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  new  HashSet(helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  new  HashSet(helpSettingsCopy);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  new  HashSet(helpSettingsCopy);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.addChangeListener(this);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.addChangeListener(this);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer);	  childSettings    =    new    HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  helpSettings);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  helpSettings);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  helpSettings);	  childSettings    =    new    HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  >  minimum);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  <  maximum);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(this.prefixes,  buffer);	  childSettings    =    new    HashSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  this.maximum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  this.maximum);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(this.prefixes,  this.maximum);	  childSettings    =    new    HashSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  this.prefixes);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(this.prefixes,  this.prefixes);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(this.prefixes,  this.prefixes);	  childSettings    =    new    HashSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(this.prefixes);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(this.prefixes);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(this.prefixes);	  childSettings    =    new    HashSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_OPTIONAL);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.NONE));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  buffer);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(Separator.NONE,  buffer);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  childSettings);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  childSettings);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(Separator.NONE,  childSettings);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(Separator.NONE,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionsMap.getOption(Separator.NONE,  separator);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionsMap.getOption(Separator.NONE,  separator);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  >=  maximum);	      Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()!=  maximum);	      Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(removed);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(removed);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(removed);	  childSettings    =    new    HashSet(removed);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  childSettings  =  new  HashSet(removed,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(removed,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(removed,  buffer);	  childSettings    =    new    HashSet(removed);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  childSettings  =  new  HashSet(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(prefixes,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(prefixes,  buffer);	  childSettings    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  childSettings  =  new  HashSet(prefixes.size());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(prefixes.size());  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(prefixes.size());	  childSettings    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  childSettings  =  new  HashSet  <  String>(prefixes);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet  <  String>(prefixes);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet  <  String>(prefixes);	  childSettings    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  ==  minimum);	      Preconditions.checkArgument(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.size()  >=  minimum);	      Preconditions.checkArgument(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  childSettings  =  new  HashSet(childSettings,  buffer);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(childSettings,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(childSettings,  buffer);	  childSettings    =    new    HashSet(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  childSettings  =  new  HashSet(childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(childSettings.size()  -  1);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(childSettings.size()  -  1);	  childSettings    =    new    HashSet(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  childSettings  =  new  HashSet(childSettings.length);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(childSettings.length);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(childSettings.length);	  childSettings    =    new    HashSet(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  helpSettings.remove();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  helpSettings.remove();  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	helpSettings.remove();	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
54	[BUG]  [BUGGY]  childSettings.remove();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings.remove();  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings.remove();	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  i.set(buffer,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.set(buffer,  newAnonymous);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.set(buffer,  newAnonymous);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(Separator.NONE,  separator);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(Separator.NONE,  separator);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(DisplaySetting.NONE);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(DisplaySetting.NONE);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(DisplaySetting.NONE);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  childSettings  =  new  HashSet();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet();  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet();	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  }  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  }	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings.addChangeListener(this);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  childSettings  =  new  HashSet(child);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(child);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(child);	  childSettings    =    new    HashSet(parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_ERROR);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_ERROR);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.remove(DisplaySetting.DISPLAY_GROUP_ERROR);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_FAILED);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.remove(DisplaySetting.DISPLAY_GROUP_FAILED);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.remove(DisplaySetting.DISPLAY_GROUP_FAILED);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  i.removeChild(childSettings);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.removeChild(childSettings);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.removeChild(childSettings);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  i.prepend(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.prepend(separator);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.prepend(separator);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  i.removeChild(buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  i.removeChild(buffer);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	i.removeChild(buffer);	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()!=  minimum);	      Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  childSettings  =  new  HashSet(appendPrefixes);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(appendPrefixes);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(appendPrefixes);	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  childSettings  =  new  HashSet(display,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(display,  buffer);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(display,  buffer);	  childSettings    =    new    HashSet(display);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  childSettings  =  new  HashSet(this.parent);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(this.parent);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(this.parent);	  childSettings    =    new    HashSet(parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  Option  option  =  optionMap.getOption(separator);  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	Option  option  =  optionMap.getOption(separator);	      Option    option    =    optionMap.getOption(Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
80	[BUG]  [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  supportSettings);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  supportSettings);  [BUGGY]    childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	childSettings  =  new  HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED,  supportSettings);	  childSettings    =    new    HashSet(DisplaySetting.DISPLAY_GROUP_EXPANDED);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {    [BUGGY]  if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }  [BUGGY]    childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	if(childSettings!=  null)  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
