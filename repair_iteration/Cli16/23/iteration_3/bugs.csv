bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buffer.append( ",null ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ",null ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ",null ");	  buffer.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  buffer.append( ",none ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ",none ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ",none ");	  buffer.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  buffer.append('['  +  name  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('['  +  name  +  1);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('['  +  name  +  1);	  buffer.append('['    +    name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  buffer.append(separator).append('n');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append('n');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append('n');	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  buffer.append(separator).append('  ');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append('  ');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append('  ');	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
6	[BUG]  [BUGGY]  buffer.append( "  ( ").append(separator).append(outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  ( ").append(separator).append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  ( ").append(separator).append(outer);	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
7	[BUG]  [BUGGY]  buffer.append(separator).append(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append(option);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append(option);	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
8	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  both);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  both);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "option ",  both);	  Option    option    =    optionMap.getOption(   "option   ",    outer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  buffer.append('[').append(expanded);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(expanded);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(expanded);	  buffer.append('[').append(second);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  buffer.append('[').append(description);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(description);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(description);	  buffer.append('[').append(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  buffer.append('[').append(prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(prefix);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(prefix);	  buffer.append('[').append(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  if(separator.equals( "- "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  if(separator.equals( "- "))  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	if(separator.equals( "- "))  {  buffer.append('[');  }	  if(separator.equals(   ".   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  paint.append( "[ ").append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  paint.append( "[ ").append(separator).append('[');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	paint.append( "[ ").append(separator).append('[');	  paint.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  paint.append(separator).append( "[ ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  paint.append(separator).append( "[ ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	paint.append(separator).append( "[ ");	  paint.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  buffer.append( "null ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "null ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "null ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  buffer.append( "  (null) ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  (null) ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  (null) ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  buffer.append( "[ ").append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "[ ").append(separator).append('[');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "[ ").append(separator).append('[');	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  buffer.append( ", ").append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ", ").append(separator).append('[');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ", ").append(separator).append('[');	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
19	[BUG]  [BUGGY]  buffer.append( "[ ").append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "[ ").append(separator).append(']');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "[ ").append(separator).append(']');	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
20	[BUG]  [BUGGY]  buffer.append( ",' ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ",' ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ",' ");	  buffer.append(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
21	[BUG]  [BUGGY]  buffer.append( "  - ").append(arguments);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  - ").append(arguments);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  - ").append(arguments);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  buffer.append( "  - "  +  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  - "  +  separator);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  - "  +  separator);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  buffer.append( "  - ").append(separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  - ").append(separator);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  - ").append(separator);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(separator,  outer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
25	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  arg);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(separator,  arg);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(separator,  both);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(arg,  outer);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
30	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(separator,  arg);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "optional ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption( "optional ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption( "optional ");	  Option    option    =    optionMap.getOption(   "optional   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "opt ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "opt ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "opt ");	  Option    option    =    optionMap.getOption(   "optional   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption( "optional ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption( "optional ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption( "optional ");	  Option    option    =    optionMap.getOption(   "optional   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  buffer.append( ";n ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ";n ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ";n ");	  buffer.append(   ";   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  buffer.append(']',  both);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']',  both);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']',  both);	  buffer.append(']',    outer);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  buffer.append(']',  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']',  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']',  separator);	  buffer.append(']',    outer);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
37	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ", "optional ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "option ", "optional ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "option ", "optional ");	  Option    option    =    optionMap.getOption(   "option   ",    separator);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "option ",  separator,  outer);	  Option    option    =    optionMap.getOption(   "option   ",    separator);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(arg);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(comp,  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(comp,  separator);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(separator,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(separator,  outer);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(comp);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(comp);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(name);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(separator.equals( "* ")||  separator.equals( "* "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  if(separator.equals( "* ")||  separator.equals( "* "))  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	if(separator.equals( "* ")||  separator.equals( "* "))  {  buffer.append('[');  }	  if(separator.equals(   "*   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  if(separator.equals( "* ")&&  outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  if(separator.equals( "* ")&&  outer)  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	if(separator.equals( "* ")&&  outer)  {  buffer.append('[');  }	  if(separator.equals(   "*   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  if(separator.equals( "* ")||  separator.equals( "*))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  if(separator.equals( "* ")||  separator.equals( "*))  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	if(separator.equals( "* ")||  separator.equals( "*))  {  buffer.append('[');  }	  if(separator.equals(   "*   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append( ",   ");  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append( ",   ");  }	  Option    option    =    options.getOption(separator);    if(optional)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption( "option ",  separator);	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
50	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "options ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption( "options ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption( "options ");	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
51	[BUG]  [BUGGY]  buffer.append( "  (default: ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  (default: ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  (default: ");	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(optional);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(optional);	  Option    option    =    optionMap.getOption(expanded);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
53	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.expanded);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this.expanded);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this.expanded);	  Option    option    =    optionMap.getOption(expanded);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
54	[BUG]  [BUGGY]  buffer.append('['  +  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('['  +  arg);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('['  +  arg);	  buffer.append('['    +    separated);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  outer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
56	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  name);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
57	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(this,  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
59	[BUG]  [BUGGY]  buffer.append( "  ' ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  ' ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  ' ");	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(prefix);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(prefix);	  Option    option    =    options.getOption(separator);    if(optional)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  buffer.append(']').append(expanded);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']').append(expanded);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']').append(expanded);	  buffer.append(']').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
62	[BUG]  [BUGGY]  buffer.append(']').append(outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']').append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']').append(outer);	  buffer.append(']').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  buffer.append(']').append(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']').append(arg);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']').append(arg);	  buffer.append(']').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  if(optional)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  if(optional)  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(arg,  outer);  if(optional)  {  buffer.append('[');  }	  Option    option    =    optionMap.getOption(arg);    if(optional)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  buffer.append('[').append(extent);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(extent);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(extent);	  buffer.append('[').append(previous);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
66	[BUG]  [BUGGY]  buffer.append( "  if(outside)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  if(outside)  {  buffer.append( "  ( ");  }  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  if(outside)  {  buffer.append( "  ( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  buffer.append( "  if(other)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  if(other)  {  buffer.append( "  ( ");  }  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  if(other)  {  buffer.append( "  ( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  buffer.append(';');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(';');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(';');	  buffer.append(   ";   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(optional);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(optional);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
70	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
71	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(this,  separator,  outer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
72	[BUG]  [BUGGY]  buffer.append('[').append(second  +  ']');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(second  +  ']');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(second  +  ']');	  buffer.append('[').append(second);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
73	[BUG]  [BUGGY]  paint.append(separator).append('['  +  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  paint.append(separator).append('['  +  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	paint.append(separator).append('['  +  outer);	  paint.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  paint.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  paint.append(separator).append(']');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	paint.append(separator).append(']');	  paint.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  buffer.append(']'  +  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']'  +  outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']'  +  outer);	  buffer.append('['    +    separated);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  buffer.append( "['  +  outer] ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "['  +  outer] ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "['  +  outer] ");	  buffer.append('['    +    separated);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  buffer.append(separator).append(')');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append(')');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append(')');	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
78	[BUG]  [BUGGY]  buffer.append( "   ").append(outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "   ").append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "   ").append(outer);	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
79	[BUG]  [BUGGY]  buffer.append( "] ").append(outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "] ").append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "] ").append(outer);	  buffer.append(']').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
80	[BUG]  [BUGGY]  buffer.append( "  - ").append(outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "  - ").append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "  - ").append(outer);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "opt ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption( "opt ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption( "opt ");	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  buffer.append( ". ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ". ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ". ");	  if(separator.equals(   ".   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(expanded);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(expanded);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(expanded);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  buffer.append( ",outside ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ",outside ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ",outside ");	  buffer.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  buffer.append( ",outer ",  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ",outer ",  outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ",outer ",  outer);	  buffer.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  outer);  if(optional)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  outer);  if(optional)  {  buffer.append( ",   ");  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  outer);  if(optional)  {  buffer.append( ",   ");  }	  Option    option    =    optionMap.getOption(this,    separator);    if(optional)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
88	[BUG]  [BUGGY]  buffer.append( "* ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "* ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "* ");	  if(separator.equals(   "*   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  options.getOption(arg);  if(optional)  {  buffer.append('[');  }	  Option    option    =    options.getOption(separator);    if(optional)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  buffer.append(',').append(outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(',').append(outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(',').append(outer);	  buffer.append(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
91	[BUG]  [BUGGY]  buffer.append(','  +  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(','  +  separator);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(','  +  separator);	  buffer.append(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  buffer.append(']',  separated);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']',  separated);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']',  separated);	  buffer.append(']',    outer);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
93	[BUG]  [BUGGY]  buffer.append( "[] "  +  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( "[] "  +  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( "[] "  +  separator);	  buffer.append(   "[]   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
94	[BUG]  [BUGGY]  buffer.append(''+  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(''+  outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(''+  outer);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
95	[BUG]  [BUGGY]  buffer.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append(']');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append(']');	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
96	[BUG]  [BUGGY]  buffer.append('[').append(outer));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('[').append(outer));  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('[').append(outer));	  buffer.append('[').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
97	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(expanded,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(expanded,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(expanded,  outer);	  Option    option    =    optionMap.getOption(expanded);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
98	[BUG]  [BUGGY]  buffer.append( ": ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append( ": ");  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append( ": ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  if(optional)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  if(optional)  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  separator);  if(optional)  {  buffer.append('[');  }	  Option    option    =    optionMap.getOption(arg);    if(optional)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  if(optional)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionsMap.getOption(separator);  if(optional)  {  buffer.append('[');  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionsMap.getOption(separator);  if(optional)  {  buffer.append('[');  }	  Option    option    =    optionMap.getOption(arg);    if(optional)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
101	[BUG]  [BUGGY]  bucket.append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  bucket.append(separator).append('[');  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	bucket.append(separator).append('[');	  if(separator.equals(   ".   "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
102	[BUG]  [BUGGY]  buffer.append(separator).append('/');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append('/');  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append('/');	  buffer.append(separator).append(outer);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
103	[BUG]  [BUGGY]  buffer.append('['  +  separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('['  +  separator  +  1);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('['  +  separator  +  1);	  buffer.append('['    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
104	[BUG]  [BUGGY]  buffer.append(separator).append('['  +  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append('['  +  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append('['  +  outer);	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  buffer.append(separator).append('[',  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator).append('[',  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator).append('[',  outer);	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator,  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  separator,  outer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
107	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  if(optional)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  if(optional)  {  buffer.append( ",   ");  }  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption(this,  description);  if(optional)  {  buffer.append( ",   ");  }	  Option    option    =    optionMap.getOption(this,    separator);    if(optional)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
108	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "optional ",  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "optional ",  separator);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "optional ",  separator);	  Option    option    =    optionMap.getOption(   "optional   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "optional ", "outer ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  Option  option  =  optionMap.getOption( "optional ", "outer ");  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	Option  option  =  optionMap.getOption( "optional ", "outer ");	  Option    option    =    optionMap.getOption(   "option   ",    outer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
110	[BUG]  [BUGGY]  buffer.append(separator  +  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(separator  +  separator);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(separator  +  separator);	  buffer.append('['    +    separated);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  paint.append(separator).append('[',  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  paint.append(separator).append('[',  outer);  [BUGGY]      buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	paint.append(separator).append('[',  outer);	  paint.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
112	[BUG]  [BUGGY]  buffer.append(']').append(external);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append(']').append(external);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append(']').append(external);	  buffer.append(']').append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
113	[BUG]  [BUGGY]  buffer.append('  ',  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {      [BUGGY]  buffer.append('  ',  outer);  [BUGGY]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	buffer.append('  ',  outer);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
