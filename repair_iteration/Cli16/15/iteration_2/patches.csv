bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(arg  ||  optionMap.containsKey(optional))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(arg  ||  optionMap.containsKey(optional))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(arg  ||  optionMap.containsKey(optional))  {	  if(optional    ||    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  if(args.containsKey(optional)||  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(args.containsKey(optional)||  optionMap.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(args.containsKey(optional)||  optionMap.containsKey(arg))  {	  if(optional    ||    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  if(optional  ||  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.containsKey(arg))  {	  if(optional    ||    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  options.containsKey(separator))  {	  if(optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
5	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {	  if(optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
6	[BUG]  [BUGGY]  if(!optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optionMap.containsKey(separator))  {	  if(optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
7	[BUG]  [BUGGY]  if(!double  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
8	[BUG]  [BUGGY]  if(!double  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
9	[BUG]  [BUGGY]  if(!double  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
10	[BUG]  [BUGGY]  if(comp.length()  >  maximum  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(comp.length()  >  maximum  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(comp.length()  >  maximum  &&  childSettings.contains(separator))  {	  if(both    &&    buffer.length()    >    maximum    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
11	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  minimum  &&  childSettings.contains(separator))  {	  if(both    &&    buffer.length()    >    maximum    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
12	[BUG]  [BUGGY]  if(previous  ||  both.length()  >  maximum  ||  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  ||  both.length()  >  maximum  ||  childSettings.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  ||  both.length()  >  maximum  ||  childSettings.contains(separator))  {	  if(both    &&    buffer.length()    >    maximum    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
13	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this,  buffer);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
14	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this,  arg);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  null);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this,  null);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  if(!optionals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optionals.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optionals.isEmpty())  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
17	[BUG]  [BUGGY]  if(optionals.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  if(optionals.isEmpty()  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.isEmpty()  ||  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.isEmpty()  ||  options.isEmpty())  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  if(optional.isEmpty()  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional.isEmpty()  ||  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional.isEmpty()  ||  options.isEmpty())  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
20	[BUG]  [BUGGY]  if(optional  &&  options.contains(separator)||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.contains(separator)||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.contains(separator)||  options.contains(separator))  {	  if(optionals    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(optionals  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  ||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  ||  options.contains(separator))  {	  if(optionals    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  if(optionals  &&  options.contains(separator)||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.contains(separator)||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.contains(separator)||  options.contains(separator))  {	  if(optionals    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  if(optionals.contains(separator)||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.contains(separator)||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.contains(separator)||  options.contains(separator))  {	  if(options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
24	[BUG]  [BUGGY]  if(options.contains(separator)||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options.contains(separator)||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options.contains(separator)||  options.contains(separator))  {	  if(options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
25	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  args);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
27	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  arg);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
28	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  null);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  null);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
29	[BUG]  [BUGGY]  if(optional  &&  bothExtended  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  bothExtended  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  bothExtended  &&  options)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
30	[BUG]  [BUGGY]  if(optionals  &&  bothExtended  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  bothExtended  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  bothExtended  &&  options)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
31	[BUG]  [BUGGY]  if(optional  &&  bothExtended)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  bothExtended)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  bothExtended)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
32	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg)||  options.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
33	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg)||  options.containsKey(arg))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
34	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
35	[BUG]  [BUGGY]  if(buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
36	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
37	[BUG]  [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
38	[BUG]  [BUGGY]  Option  option  =  comp.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(arg);	  Option    option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  Option  option  =  comp.getOption(arguments);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(arguments);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(arguments);	  Option    option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
40	[BUG]  [BUGGY]  Option  option  =  comp.getOption(option,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(option,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(option,  buffer);	  Option    option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  if(optional  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  outer)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
42	[BUG]  [BUGGY]  if(exceptional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
43	[BUG]  [BUGGY]  if(outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(outer)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
44	[BUG]  [BUGGY]  if(!outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!outer)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
45	[BUG]  [BUGGY]  if(separator)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
46	[BUG]  [BUGGY]  if(!separator  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!separator  &&  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!separator  &&  outer)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
47	[BUG]  [BUGGY]  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append( "[ ");  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append( "[ ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  buffer.append('[',  i.next());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append('[',  i.next());  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append('[',  i.next());	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  buffer.append('['  +  i.next());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append('['  +  i.next());  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append('['  +  i.next());	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.prefixes);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
51	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  this.optionMap.getOption(this.prefix);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  this.optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this.prefix);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this.prefix);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
53	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  description);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  description);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  buffer);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arguments);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arguments);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(arguments);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  if(expanded  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length())!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length())!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(prefixes.length())!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
58	[BUG]  [BUGGY]  if(prefixes!=  null  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(prefixes!=  null  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(prefixes!=  null  ||  buffer.charAt(prefixes.length()  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
59	[BUG]  [BUGGY]  Option  option  =  buffer.getOption(prefixes,  option);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  buffer.getOption(prefixes,  option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  buffer.getOption(prefixes,  option);	  Option    option    =    option.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(prefixes,  buffer);	  Option    option    =    option.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  Option  option  =  buffer.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  buffer.getOption(prefixes);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  buffer.getOption(prefixes);	  Option    option    =    option.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  if(optional  &&  optionMap.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  optionMap.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  optionMap.containsKey(arg,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
63	[BUG]  [BUGGY]  if(optionals  &&  optionMap.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  optionMap.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  optionMap.containsKey(arg,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
64	[BUG]  [BUGGY]  if(arguments  &&  optionMap.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(arguments  &&  optionMap.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(arguments  &&  optionMap.containsKey(arg,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
65	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.containsKey(arg,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
66	[BUG]  [BUGGY]  if(optional  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  if(optional  &&  options  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options  &&  buffer.length()  >  maximum)  {	  if(optional    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(arg);	  Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
69	[BUG]  [BUGGY]  if(optionals  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  outer)  {	  if(optionals    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  if(arguments  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(arguments  &&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(arguments  &&  both)  {	  if(optionals    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  if(expanded  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  both)  {	  if(optionals    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(arg,  description);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(name);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
75	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(comp,  separator);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
76	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefix,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
77	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefix,  separator);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
78	[BUG]  [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)  ==  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)  ==  ')')  {	  if(optional    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
80	[BUG]  [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.isEmpty()  ||  buffer.length()  ==  0)  {	  if(optional    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  if(optional  ||  options.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  if(expanded  &&  options.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  options.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  options.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  if(optionals  &&  options.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  null,  buffer);	  Option    option    =    optionMap.getOption(this,    null);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
85	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  comp);	  Option    option    =    optionMap.getOption(this,    null);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
86	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  this);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  this);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  this);	  Option    option    =    optionMap.getOption(this,    null);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
87	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.containsKey(separator))  {	  if(optional    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.containsKey(separator))  {	  if(optional    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(prefixes,  buffer);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(args);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(args);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(prefix);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(prefix);	  Option    option    =    options.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(comp,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(comp,  buffer);	  Option    option    =    options.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  if(optionals  &&  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.containsKey(arg))  {	  if(both    &&    options.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
95	[BUG]  [BUGGY]  if(arguments  &&  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(arguments  &&  options.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(arguments  &&  options.containsKey(arg))  {	  if(both    &&    options.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
96	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
97	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  args);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(args);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(args);	  Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  if(expanded  ||  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  buffer!=  null)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  buffer!=  null)  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
100	[BUG]  [BUGGY]  if(optional  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer!=  null)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer!=  null)  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
101	[BUG]  [BUGGY]  if(exceptional  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional  &&  buffer!=  null)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional  &&  buffer!=  null)  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
102	[BUG]  [BUGGY]  if(expanded  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  options.contains(separator))  {	  if(expanded    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
103	[BUG]  [BUGGY]  if(expanded  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(expanded    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
104	[BUG]  [BUGGY]  if(exceptional  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional  &&  options.contains(separator))  {	  if(expanded    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
105	[BUG]  [BUGGY]  if(!both  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!both  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!both  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(!both    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
106	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  expr,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  expr,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  expr,  buffer);	  Option    option    =    optionMap.getOption(this,    expr);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  expr);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this,  expr);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this,  expr);	  Option    option    =    optionMap.getOption(this,    expr);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
108	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  buffer.length()  >  maximum)  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
109	[BUG]  [BUGGY]  if(!expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
110	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
112	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  options,  buffer);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
113	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  optionMap);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this,  optionMap);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this,  optionMap);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(optionMap);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(optionMap);	  Option    option    =    option.getOption(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
115	[BUG]  [BUGGY]  option  =  options.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  option  =  options.getOption(this,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	option  =  options.getOption(this,  buffer);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
116	[BUG]  [BUGGY]  if(both  ||  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  ||  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  ||  buffer.length()  >  minimum)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
117	[BUG]  [BUGGY]  if(offset  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(offset  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(offset  &&  buffer.length()  >  maximum)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
118	[BUG]  [BUGGY]  if(both  &&  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  <  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  <  maximum)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
119	[BUG]  [BUGGY]  if(optionals  ||  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  ||  optionMap.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  ||  optionMap.containsKey(arg))  {	  if(optionals    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
120	[BUG]  [BUGGY]  if(expanded  &&  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  options.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  options.containsKey(arg))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
121	[BUG]  [BUGGY]  if(expanded  ||  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  optionMap.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  optionMap.containsKey(arg))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
122	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  optionMap.containsKey(arg,  description))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
123	[BUG]  [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
124	[BUG]  [BUGGY]  if(optionals  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
125	[BUG]  [BUGGY]  if(optional  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
126	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(prefix);	  Option    option    =    optionMap.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
127	[BUG]  [BUGGY]  Option  option  =  comp.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(optionMap);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(optionMap);	  Option    option    =    comp.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
128	[BUG]  [BUGGY]  Option  option  =  comp.getOption(this);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(this);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(this);	  Option    option    =    comp.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
129	[BUG]  [BUGGY]  if(anonymous  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(anonymous  &&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(anonymous  &&  both)  {	  if(optional    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
130	[BUG]  [BUGGY]  if(expanded  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
131	[BUG]  [BUGGY]  if(prefixes.length  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(prefixes.length  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(prefixes.length  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
132	[BUG]  [BUGGY]  if(exceptional  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
133	[BUG]  [BUGGY]  if(optional  &&  bothExtended  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  bothExtended  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  bothExtended  &&  options.isEmpty())  {	  if(bothExtended    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
134	[BUG]  [BUGGY]  if(!bothExtended  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothExtended  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothExtended  &&  options.isEmpty())  {	  if(bothExtended    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
135	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(buffer);	  Option    option    =    option.getOption(buffer);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.getOption(buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(buffer);	  Option    option    =    option.getOption(buffer);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
137	[BUG]  [BUGGY]  Option  option  =  buffer.getOption(option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  buffer.getOption(option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  buffer.getOption(option);	  Option    option    =    option.getOption(buffer);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(optional,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(optional,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(optional,  buffer);	  Option    option    =    optionMap.getOption(optional);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
139	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(prefixes,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
140	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  maximum);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  maximum);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
141	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  comp);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
142	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
143	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(separator,  comp);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
144	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  buffer.length()  >  maximum)  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
145	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.length()  >  minimum)  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
146	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional  &&  buffer.length()  >  maximum)  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
147	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.length()  <  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.length()  <  maximum)  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
148	[BUG]  [BUGGY]  if(!expanded  &&!both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&!both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&!both)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
149	[BUG]  [BUGGY]  if(!expanded  ||!outer)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  ||!outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  ||!outer)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
150	[BUG]  [BUGGY]  if(!expanded  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  both)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
151	[BUG]  [BUGGY]  if(!expanded  ||!comp.both)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  ||!comp.both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  ||!comp.both)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
152	[BUG]  [BUGGY]  if(optionals  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.containsKey(separator))  {	  if(both    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
153	[BUG]  [BUGGY]  if(optional  ||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.containsKey(separator))  {	  if(both    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
154	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(separator)||  both.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.containsKey(separator)||  both.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.containsKey(separator)||  both.containsKey(separator))  {	  if(both    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
155	[BUG]  [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
156	[BUG]  [BUGGY]  if(optional  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
157	[BUG]  [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
158	[BUG]  [BUGGY]  if(separator  ||  options.contains(optional))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator  ||  options.contains(optional))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator  ||  options.contains(optional))  {	  if(optional    ||    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
159	[BUG]  [BUGGY]  if(optional  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {	  if(optionals    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
160	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.containsKey(arg))  {	  if(optional    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
161	[BUG]  [BUGGY]  if(expanded  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  options.containsKey(separator))  {	  if(expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
162	[BUG]  [BUGGY]  if(expanded  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  optionMap.containsKey(separator))  {	  if(expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
163	[BUG]  [BUGGY]  if(exceptional  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(exceptional  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(exceptional  &&  optionMap.containsKey(separator))  {	  if(expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
164	[BUG]  [BUGGY]  option  =  comp.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  option  =  comp.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	option  =  comp.getOption(arg);	  option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
165	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(true);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(true);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(true);	  Option    option    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  if(!optional  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optional  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optional  &&  options.contains(separator))  {	  if(!both    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
167	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
168	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  minimum  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  minimum  &&  options.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
169	[BUG]  [BUGGY]  if(offsets.length()  >  maximum  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(offsets.length()  >  maximum  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(offsets.length()  >  maximum  &&  options.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(true);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(true);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(true);	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
171	[BUG]  [BUGGY]  Option  option  =  this.optional.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  this.optional.getOption(optionMap);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  this.optional.getOption(optionMap);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
172	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.optional,  buffer);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this.optional);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this.optional);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this.optional);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
174	[BUG]  [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  both.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
175	[BUG]  [BUGGY]  if(arguments  &&  both.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(arguments  &&  both.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(arguments  &&  both.isEmpty())  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
176	[BUG]  [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  both.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
177	[BUG]  [BUGGY]  if(optionals  ||  both.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  ||  both.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  ||  both.isEmpty())  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  if(expanded  ||  buffer.charAt(i.next()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||  buffer.charAt(i.next()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||  buffer.charAt(i.next()  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(i.next()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
179	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(i.next())!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(i.next())!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(i.next())!=  ')')  {	  if(expanded    &&    buffer.charAt(i.next()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
180	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(i.next()  +  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(i.next()  +  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(i.next()  +  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(i.next()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
181	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  outer)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
182	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)&&  both)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
183	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  other)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  other)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  other)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
184	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  external)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  external)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  external)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
185	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(maximum  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(maximum  &&  buffer.length()  >  maximum)  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
186	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.length()  >  minimum)  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
187	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(buffer,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(buffer,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(buffer,  comp);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
188	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(comp,  buffer,  args);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
189	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  null);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(comp,  buffer,  null);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
190	[BUG]  [BUGGY]  Option  option  =  option.getOption(args,  description);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  option.getOption(args,  description);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  option.getOption(args,  description);	  Option    option    =    option.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
191	[BUG]  [BUGGY]  Option  option  =  option.getOption(args,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  option.getOption(args,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  option.getOption(args,  buffer);	  Option    option    =    option.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
192	[BUG]  [BUGGY]  if(optionals  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
193	[BUG]  [BUGGY]  if(optionals  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  ||  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  ||  options.isEmpty())  {	  if(optionals    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
194	[BUG]  [BUGGY]  if(optionals  &&  options.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(optionals    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
195	[BUG]  [BUGGY]  if(!optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optionMap.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optionMap.isEmpty())  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
196	[BUG]  [BUGGY]  if(optionMap.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
197	[BUG]  [BUGGY]  if(optionMap.isEmpty()  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  ||  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
198	[BUG]  [BUGGY]  if(optionMap.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
199	[BUG]  [BUGGY]  if(!optional  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optional  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optional  &&  options.isEmpty())  {	  if(options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
200	[BUG]  [BUGGY]  if(!options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!options.isEmpty())  {	  if(options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
201	[BUG]  [BUGGY]  if(both  &&  buffer.length()  ==  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  ==  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  ==  minimum)  {	  if(both    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
202	[BUG]  [BUGGY]  if(both  &&  buffer.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  ==  1)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  ==  1)  {	  if(both    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
203	[BUG]  [BUGGY]  if(both  ||  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  ||  buffer.length()  ==  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  ||  buffer.length()  ==  maximum)  {	  if(both    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
204	[BUG]  [BUGGY]  if(optional  ||  options  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options  &&  buffer.length()  >  maximum)  {	  if(both    &&    options    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
205	[BUG]  [BUGGY]  if(optionals  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  buffer.length()  >  maximum)  {	  if(both    &&    options    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
206	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {	  if(both    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
207	[BUG]  [BUGGY]  if(optionals  &&  both.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  both.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  both.containsKey(separator)||  options.containsKey(separator))  {	  if(both    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
208	[BUG]  [BUGGY]  if(optional  &&  options.contains(separator)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.contains(separator)||  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.contains(separator)||  both)  {	  if(options.contains(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
209	[BUG]  [BUGGY]  if(options.contains(separator)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options.contains(separator)||  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options.contains(separator)||  outer)  {	  if(options.contains(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
210	[BUG]  [BUGGY]  if(options.contains(separator)&&  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options.contains(separator)&&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options.contains(separator)&&  both)  {	  if(options.contains(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
211	[BUG]  [BUGGY]  if(optional  ||  options.contains(separator)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.contains(separator)||  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.contains(separator)||  both)  {	  if(options.contains(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
212	[BUG]  [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator  ||  optionMap.containsKey(separator))  {	  if(optional    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
213	[BUG]  [BUGGY]  if(outer  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(outer  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(outer  ||  optionMap.containsKey(separator))  {	  if(optional    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
214	[BUG]  [BUGGY]  if(optional  &&  buffer.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.contains(separator))  {	  if(optional    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
215	[BUG]  [BUGGY]  if(optional  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
216	[BUG]  [BUGGY]  if(previous  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  ||  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  ||  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
217	[BUG]  [BUGGY]  if(previous  >  maximum  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  >  maximum  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  >  maximum  &&  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
218	[BUG]  [BUGGY]  if(previous  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
219	[BUG]  [BUGGY]  if(previous  &&  buffer.length()  >  maximum  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  &&  buffer.length()  >  maximum  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  &&  buffer.length()  >  maximum  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
220	[BUG]  [BUGGY]  optionMap.put(buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  optionMap.put(buffer,  arg);  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	optionMap.put(buffer,  arg);	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
221	[BUG]  [BUGGY]  optionMap.put(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  optionMap.put(separator,  buffer);  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	optionMap.put(separator,  buffer);	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
222	[BUG]  [BUGGY]  optionMap.put(optional,  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  optionMap.put(optional,  buffer);  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	optionMap.put(optional,  buffer);	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
223	[BUG]  [BUGGY]  optionMap.put(arg,  buffer.toString());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  optionMap.put(arg,  buffer.toString());  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	optionMap.put(arg,  buffer.toString());	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
224	[BUG]  [BUGGY]  if(separator!=  null  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator!=  null  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator!=  null  ||  optionMap.containsKey(separator))  {	  if(separator!=    null    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
225	[BUG]  [BUGGY]  if(both  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  options.containsKey(separator)||  options.containsKey(separator))  {	  if(both    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
226	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {	  if(both    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
227	[BUG]  [BUGGY]  if(optionals  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options)  {	  if(optionals    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
228	[BUG]  [BUGGY]  if(optionals  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
229	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
230	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(arg,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
231	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
232	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  null);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  null);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
233	[BUG]  [BUGGY]  if(optional.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional.isEmpty())  {	  if(options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
234	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.length()  ==  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.length()  ==  maximum)  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
235	[BUG]  [BUGGY]  if(maximum  &&  optional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(maximum  &&  optional)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(maximum  &&  optional)  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
236	[BUG]  [BUGGY]  if(optionals  &&  optionMap.containsKey(arg)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  optionMap.containsKey(arg)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  optionMap.containsKey(arg)||  options.containsKey(separator))  {	  if(optionals    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
237	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  option.getOption(arg,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  option.getOption(arg,  buffer);	  Option    option    =    option.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
238	[BUG]  [BUGGY]  if(both  &&  options  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  options  &&  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  options  &&  buffer.length()  >  minimum)  {	  if(both    &&    options    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
239	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.prefix,  this.maximum);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
240	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.prefix  +  separator);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
241	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  i);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  i);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  i);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
242	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  false);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  false);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  false);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
243	[BUG]  [BUGGY]  if(both  &&  buffer.length()!=  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()!=  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()!=  minimum)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
244	[BUG]  [BUGGY]  if(optionMap!=  null  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap!=  null  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap!=  null  &&  optionMap.containsKey(separator))  {	  if(separator!=    null    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
245	[BUG]  [BUGGY]  if(optionMap!=  null  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap!=  null  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap!=  null  ||  optionMap.containsKey(separator))  {	  if(separator!=    null    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
246	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.length()  ==  maximum)  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
247	[BUG]  [BUGGY]  if(optionals  &&  both.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  both.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  both.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
248	[BUG]  [BUGGY]  if(optional  &&  both.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  both.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  both.isEmpty())  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
249	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
250	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
251	[BUG]  [BUGGY]  if(options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
252	[BUG]  [BUGGY]  if(optionMap  &&  both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap  &&  both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap  &&  both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
253	[BUG]  [BUGGY]  if(optional  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionals    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
254	[BUG]  [BUGGY]  if(optionals  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  options.contains(separator)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
255	[BUG]  [BUGGY]  if(expanded  &&  buffer  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer  ==  null)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer  ==  null)  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
256	[BUG]  [BUGGY]  if(expanded  &&!both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&!both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&!both)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
257	[BUG]  [BUGGY]  if(expanded  ||!outer)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  ||!outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  ||!outer)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
258	[BUG]  [BUGGY]  if(optional  &&  buffer.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.isEmpty())  {	  if(optional    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
259	[BUG]  [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.isEmpty()  &&  buffer.length()  >  maximum)  {	  if(optional    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
260	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
261	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(buffer,  option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(buffer,  option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(buffer,  option);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
262	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(option,  buffer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(option,  buffer);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
263	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)&&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg)&&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg)&&  buffer.length()  >  maximum)  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
264	[BUG]  [BUGGY]  if(optionMap.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg,  description))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
265	[BUG]  [BUGGY]  if(optionals  &&  bothExtended)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  bothExtended)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  bothExtended)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
266	[BUG]  [BUGGY]  if(bothExtended  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  outer)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
267	[BUG]  [BUGGY]  if(options.containsKey(separator)||  both)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options.containsKey(separator)||  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options.containsKey(separator)||  both)  {	  if(both    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
268	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length  -  1)  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length  -  1)  ==  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(prefixes.length  -  1)  ==  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
269	[BUG]  [BUGGY]  if(prefixes!=  null  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(prefixes!=  null  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(prefixes!=  null  &&  buffer.charAt(prefixes.length  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
270	[BUG]  [BUGGY]  if(optionals.contains(separator)&&  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.contains(separator)&&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.contains(separator)&&  both)  {	  if(options.contains(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
271	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  arg);	  Option    option    =    optionMap.getOption(this,    expr);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
272	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  args);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this,  args);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
273	[BUG]  [BUGGY]  if(optionals.isEmpty()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.isEmpty()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.isEmpty()  &&  buffer.length()  >  maximum)  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
274	[BUG]  [BUGGY]  optionMap.put(option,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  optionMap.put(option,  buffer);  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	optionMap.put(option,  buffer);	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
275	[BUG]  [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  ==  maximum  &&  options.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
276	[BUG]  [BUGGY]  if(offset  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(offset  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(offset  &&  buffer.length()  >  maximum  &&  options.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
277	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  i);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  i);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  i);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
278	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  options);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  options);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  options);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
279	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append( "] ");  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append( "] ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
280	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append( ", ");  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append( ", ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
281	[BUG]  [BUGGY]  if(optionals.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.contains(separator))  {	  if(expanded    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
282	[BUG]  [BUGGY]  if(optional  &&  newOptionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  newOptionMap.containsKey(arg))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  newOptionMap.containsKey(arg))  {	  if(optional    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
283	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  options.contains(separator))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
284	[BUG]  [BUGGY]  if(!expanded  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  options.isEmpty())  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
285	[BUG]  [BUGGY]  if(!expanded  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  options)  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
286	[BUG]  [BUGGY]  if(opt  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(opt  &&  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(opt  &&  both)  {	  if(optional    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
287	[BUG]  [BUGGY]  if(optional  &&  separator.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  separator.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  separator.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
288	[BUG]  [BUGGY]  if(optional  &&  other.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  other.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  other.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
289	[BUG]  [BUGGY]  if(optional  &&  buffer.contains(separator)||  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.contains(separator)||  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.contains(separator)||  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
290	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(prefix,  outer);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
291	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
292	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length()  -  1)  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length()  -  1)  ==  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(prefixes.length()  -  1)  ==  ')')  {	  if(expanded    &&    buffer.charAt(prefixes.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
293	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this,  null);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this,  null);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
294	[BUG]  [BUGGY]  if(both  &&  childSettings.length()  >  maximum  &&  buffer.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  childSettings.length()  >  maximum  &&  buffer.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  childSettings.length()  >  maximum  &&  buffer.contains(separator))  {	  if(both    &&    buffer.length()    >    maximum    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
295	[BUG]  [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  ==  maximum  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  ==  maximum  &&  childSettings.contains(separator))  {	  if(both    &&    buffer.length()    >    maximum    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
296	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)&&  buffer.length()  >  maximum)  {	  if(optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
297	[BUG]  [BUGGY]  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  option  =  optionMap.getOption(option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	option  =  optionMap.getOption(option);	  option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
298	[BUG]  [BUGGY]  option  =  comp.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  option  =  comp.getOption(optionMap);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	option  =  comp.getOption(optionMap);	  option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
299	[BUG]  [BUGGY]  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  option  =  options.getOption(option);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	option  =  options.getOption(option);	  option    =    comp.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
300	[BUG]  [BUGGY]  if(!double  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  options.contains(separator))  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
301	[BUG]  [BUGGY]  if(!double  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  buffer.length()  >  maximum)  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
302	[BUG]  [BUGGY]  if(!double  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!double  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!double  &&  options.isEmpty())  {	  if(!double)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
303	[BUG]  [BUGGY]  if(options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(options.containsKey(separator))  {	  if(options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
304	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
305	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
306	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(arg,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
307	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  args);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  args);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  args);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
308	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  beide)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  beide)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)&&  beide)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
309	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(arg)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.containsKey(arg)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.containsKey(arg)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    options.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
310	[BUG]  [BUGGY]  if(optionals  &&!both  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&!both  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&!both  &&  options)  {	  if(!both    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
311	[BUG]  [BUGGY]  if(!both  &&  options  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!both  &&  options  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!both  &&  options  &&  buffer.length()  >  maximum)  {	  if(!both    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
312	[BUG]  [BUGGY]  if(both  &&  options.containsKey(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  options.containsKey(arg,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  options.containsKey(arg,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
313	[BUG]  [BUGGY]  if(both  &&  optionMap.containsKey(arg,  description)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  optionMap.containsKey(arg,  description)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  optionMap.containsKey(arg,  description)||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
314	[BUG]  [BUGGY]  if(optionMap.containsKey(arg,  description)||  both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg,  description)||  both)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg,  description)||  both)  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
315	[BUG]  [BUGGY]  if(optionMap.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
316	[BUG]  [BUGGY]  if(optionMap.isEmpty()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  &&  buffer.length()  >  maximum)  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
317	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(i.next()  -  1)  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(i.next()  -  1)  ==  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(i.next()  -  1)  ==  ')')  {	  if(expanded    &&    buffer.charAt(i.next()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
318	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(buffer.next()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.charAt(buffer.next()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.charAt(buffer.next()  -  1)!=  ')')  {	  if(expanded    &&    buffer.charAt(i.next()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
319	[BUG]  [BUGGY]  if(previous  >  maximum  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(previous  >  maximum  ||  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(previous  >  maximum  ||  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
320	[BUG]  [BUGGY]  if(optionMap.isEmpty()  ||  optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.isEmpty()  ||  optionMap.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.isEmpty()  ||  optionMap.isEmpty())  {	  if(optionMap.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
321	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(args,  separator);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
322	[BUG]  [BUGGY]  if(separator!=  null  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator!=  null  &&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator!=  null  &&  options.containsKey(separator))  {	  if(separator!=    null    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
323	[BUG]  [BUGGY]  if(!bothAnonymous  &&  options)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothAnonymous  &&  options)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothAnonymous  &&  options)  {	  if(!both    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
324	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this,    expr);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
325	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    expr);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
326	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  optionMap.containsKey(separator))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
327	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  outer)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  optionMap.containsKey(separator)||  outer)  {	  if(expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
328	[BUG]  [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  both.isEmpty()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  both.isEmpty()  &&  buffer.length()  >  maximum)  {	  if(optionals    &&    both.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
329	[BUG]  [BUGGY]  if(bothExtended  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(bothExtended    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
330	[BUG]  [BUGGY]  if(bothExtended  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  options.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(bothExtended    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
331	[BUG]  [BUGGY]  if(optionals  &&  bothExtended  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  bothExtended  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  bothExtended  &&  options.isEmpty())  {	  if(bothExtended    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
332	[BUG]  [BUGGY]  if(optionals  &&  optionMap)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals  &&  optionMap)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals  &&  optionMap)  {	  if(optionals    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
333	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(previous,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(previous,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(previous,  separator);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
334	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  outer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
335	[BUG]  [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  ||  options.isEmpty()  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(optional    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
336	[BUG]  [BUGGY]  Option  option  =  options.getOption(exclude);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(exclude);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(exclude);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
337	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  null,  outer);	  Option    option    =    optionMap.getOption(this,    null);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
338	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  null,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  null,  separator);	  Option    option    =    optionMap.getOption(this,    null);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
339	[BUG]  [BUGGY]  if(optional  &&  options.contains(separator)&&  both.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  options.contains(separator)&&  both.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  options.contains(separator)&&  both.contains(separator))  {	  if(optional    &&    options.contains(separator)||    both.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
340	[BUG]  [BUGGY]  buffer.append('[').append( "] ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  buffer.append('[').append( "] ");  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	buffer.append('[').append( "] ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
341	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(comp,  outer);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
342	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.minimum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.minimum);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.prefix,  this.minimum);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
343	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  separator);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
344	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)&&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(arg)&&  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(arg)&&  options.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
345	[BUG]  [BUGGY]  if(!optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!optional)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!optional)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
346	[BUG]  [BUGGY]  Option  option  =  option.getOption(buffer,  childSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  option.getOption(buffer,  childSettings);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  option.getOption(buffer,  childSettings);	  Option    option    =    option.getOption(buffer);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
347	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  expr);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  expr);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  options,  expr);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
348	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  arg);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this,  options,  arg);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
349	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(this,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(this,  comp);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
350	[BUG]  [BUGGY]  if(bothExtended  &&  options  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  options  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  options  &&  buffer.length()  >  maximum)  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
351	[BUG]  [BUGGY]  if(bothExtended  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(bothExtended    &&    options)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
352	[BUG]  [BUGGY]  if(both  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
353	[BUG]  [BUGGY]  if(both  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
354	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  options);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  options);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionsMap.getOption(this,  options);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
355	[BUG]  [BUGGY]  if(both  &&  arguments  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  arguments  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  arguments  &&  buffer.length()  >  maximum)  {	  if(both    &&    options    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
356	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)&&  separator.length()  >  maximum)  {	  if(optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
357	[BUG]  [BUGGY]  if(!bothAnonymous  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothAnonymous  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothAnonymous  &&  options.isEmpty())  {	  if(!both    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
358	[BUG]  [BUGGY]  if(!bothExternal  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothExternal  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothExternal  &&  options.isEmpty())  {	  if(!both    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
359	[BUG]  [BUGGY]  if(!both.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!both.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!both.isEmpty())  {	  if(!both    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
360	[BUG]  [BUGGY]  if(optionals.contains(separator)&&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.contains(separator)&&  separator.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.contains(separator)&&  separator.length()  >  maximum)  {	  if(options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
361	[BUG]  [BUGGY]  if(both  &&  optionMap.containsKey(separator,  description))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  optionMap.containsKey(separator,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  optionMap.containsKey(separator,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
362	[BUG]  [BUGGY]  if(both  &&  options.containsKey(separator,  description))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  options.containsKey(separator,  description))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  options.containsKey(separator,  description))  {	  if(both    &&    optionMap.containsKey(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
363	[BUG]  [BUGGY]  if(bothExtended  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(bothExtended  &&  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(bothExtended  &&  buffer.length()  >  minimum)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
364	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  maximal)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  maximal)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  maximal)  {	  if(both    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
365	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefixes,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  option.getOption(prefixes,  buffer,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  option.getOption(prefixes,  buffer,  outer);	  Option    option    =    option.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
366	[BUG]  [BUGGY]  if(optionals.isEmpty()  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionals.isEmpty()  &&  options.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionals.isEmpty()  &&  options.isEmpty())  {	  if(optionals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
367	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(prefixes,  outer);	  Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
368	[BUG]  [BUGGY]  if(both  &&  buffer.length()  >  maximum  &&  optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.length()  >  maximum  &&  optionMap.isEmpty())  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.length()  >  maximum  &&  optionMap.isEmpty())  {	  if(both    &&    buffer.length()    >    maximum    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
369	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  this.maximum);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.optional,  this.maximum);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
370	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  comp);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.optional,  comp);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
371	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  this.prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.optional,  this.prefix);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(this.optional,  this.prefix);	  Option    option    =    optionMap.getOption(this.optional);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
372	[BUG]  [BUGGY]  if(separator  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(separator  ||  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(separator  ||  options.contains(separator))  {	  if(optional    ||    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
373	[BUG]  [BUGGY]  if(!exceptional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!exceptional)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!exceptional)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
374	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  optionMap.containsKey(separator)||  options.containsKey(separator))  {	  if(both    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
375	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  buffer,  separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(comp,  buffer,  separator);	  Option    option    =    optionMap.getOption(comp,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
376	[BUG]  [BUGGY]  if(both  &&  arguments  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  arguments  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  arguments  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
377	[BUG]  [BUGGY]  if(both  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  ||  options  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
378	[BUG]  [BUGGY]  if(both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(both  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(both    &&    options    &&    buffer.charAt(buffer.length()    -    1)!=    ')')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
379	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
380	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optional  &&  buffer.length()  >  maximum  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optional  &&  buffer.length()  >  maximum  &&  optionMap.containsKey(separator))  {	  if(optional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
381	[BUG]  [BUGGY]  if(expanded  &&  optional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  optional)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  optional)  {	  if(optional    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
382	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ')')  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
383	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ')')  {	  if(expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
384	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(opt);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(opt);	  Option    option    =    comp.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
385	[BUG]  [BUGGY]  Option  option  =  comp.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  comp.getOption(separator);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  comp.getOption(separator);	  Option    option    =    comp.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
386	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  options.getOption(opt);	  Option    option    =    comp.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
387	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  outer);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
388	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  i);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  i);  [BUGGY]      if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  i);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
389	[BUG]  [BUGGY]  if(!bothAnonymous  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothAnonymous  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothAnonymous  &&  options.contains(separator))  {	  if(!both    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
390	[BUG]  [BUGGY]  if(!bothExternal  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!bothExternal  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!bothExternal  &&  options.contains(separator))  {	  if(!both    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
391	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  separator)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(optionMap.containsKey(separator)||  separator)  {	  if(optionMap.containsKey(separator)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
392	[BUG]  [BUGGY]  if(!expanded  &&  all)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(!expanded  &&  all)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(!expanded  &&  all)  {	  if(!expanded    ||!both)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
393	[BUG]  [BUGGY]  if(expanded  &&  buffer!=  null  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer!=  null  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer!=  null  &&  optionMap.containsKey(separator))  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
394	[BUG]  [BUGGY]  if(expanded  &&  buffer!=  null  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer!=  null  &&  options.contains(separator))  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer!=  null  &&  options.contains(separator))  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
395	[BUG]  [BUGGY]  if(expanded  &&  buffer!=  null  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]        option.appendUsage(buffer,  childSettings,  comp);  if  (i.hasNext())  {  buffer.append(separator);  }  }  }      [BUGGY]  if(expanded  &&  buffer!=  null  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	if(expanded  &&  buffer!=  null  &&  buffer.length()  >  maximum)  {	  if(expanded    &&    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
