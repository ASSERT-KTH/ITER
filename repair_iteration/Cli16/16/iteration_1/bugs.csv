bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  Option  option  =(Option)comp.next();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    final  Option  option  =(Option)comp.next();  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    final  Option  option  =(Option)comp.next();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
2	[BUG]  [BUGGY]    Option  option  =(Option)comp.next();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =(Option)comp.next();  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =(Option)comp.next();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
3	[BUG]  [BUGGY]    AnonymousOption  option  =(Annotation)comp.next();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    AnonymousOption  option  =(Annotation)comp.next();  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    AnonymousOption  option  =(Annotation)comp.next();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
4	[BUG]  [BUGGY]    final  Option  option  =(Option)comp.next();  buffer.append(option);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    final  Option  option  =(Option)comp.next();  buffer.append(option);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    final  Option  option  =(Option)comp.next();  buffer.append(option);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
5	[BUG]  [BUGGY]    Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  options.getOption(prefixes);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  options.getOption(prefixes);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
6	[BUG]  [BUGGY]  if  (optional  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]  if  (optional  ||  outer)  {  [BUGGY]  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  outer)  {	if  (optional  &&  outer)  {  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  if  (optional  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]  if  (optional  &&  buffer.length()  >  maximum)  {  [BUGGY]  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  buffer.length()  >  maximum)  {	if  (optional  &&  outer)  {  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]    Option  option  =  optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  optionMap.get(separator);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  optionMap.get(separator);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
9	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  optionMap.getOption(separator);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
10	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  optionMap.getOption(prefixes);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  optionMap.getOption(prefixes);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
11	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  optionMap.getOption(this);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  optionMap.getOption(this);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
12	[BUG]  [BUGGY]  if  (optional)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]  if  (optional)  {  [BUGGY]  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional)  {	if  (optional  &&  outer)  {  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
13	[BUG]  [BUGGY]  if  (optional  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]  if  (optional  &&  optionMap.containsKey(separator))  {  [BUGGY]  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  optionMap.containsKey(separator))  {	if  (optional  &&  outer)  {  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
14	[BUG]  [BUGGY]  if  (optional  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]  if  (optional  &&  options.size()  >  maximum)  {  [BUGGY]  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  options.size()  >  maximum)  {	if  (optional  &&  outer)  {  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
15	[BUG]  [BUGGY]    Option  option  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  options.getOption(separator);  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  options.getOption(separator);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
16	[BUG]  [BUGGY]    Option  option  =  optionMap.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }  [BUGGY]    Option  option  =  optionMap.get(separator).getOption();  [BUGGY]  if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	    Option  option  =  optionMap.get(separator).getOption();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
