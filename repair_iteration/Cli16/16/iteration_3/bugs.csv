bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(separator)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  if(arguments  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(arguments  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(arguments  ||  buffer.length()  ==  0)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  if(both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(both)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(both)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(comp,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(comp,  separator);	  Option    option    =    options.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefix,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefix,  buffer);	  Option    option    =    options.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(separator,  buffer,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(separator,  buffer,  arg);	  Option    option    =    options.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(prefixes,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
8	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  null);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
9	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  offset,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  offset,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  offset,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(separator  -  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(separator  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
12	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(prefix  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
13	[BUG]  [BUGGY]  if(separator  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ||  buffer.length()  ==  0)  {	  if(optional    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  if(optional  ||  buffer.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  buffer.length()!=  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  buffer.length()!=  0)  {	  if(optional    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
15	[BUG]  [BUGGY]  if(optional  ||  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  optionMap.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if    (optional    &&    optionMap.containsKey(separator)||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
16	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if    (optional    &&    optionMap.containsKey(separator)||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
17	[BUG]  [BUGGY]  Annotation  option  =(Annotation)comp.clone();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Annotation  option  =(Annotation)comp.clone();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Annotation  option  =(Annotation)comp.clone();	  AnonymousOption    option    =(Annotation)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
18	[BUG]  [BUGGY]  AnnotatedOption  option  =(Annotation)comp.clone();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnnotatedOption  option  =(Annotation)comp.clone();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnnotatedOption  option  =(Annotation)comp.clone();	  AnonymousOption    option    =(Annotation)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  separator);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefix,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefix,  separator);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(separator,  comp);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
22	[BUG]  [BUGGY]  if(optional  ||  buffer.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  buffer.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  buffer.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
23	[BUG]  [BUGGY]  if(exceptional  &&  buffer.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(exceptional  &&  buffer.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(exceptional  &&  buffer.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
24	[BUG]  [BUGGY]  if(arguments  &&  buffer.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(arguments  &&  buffer.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(arguments  &&  buffer.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.containsKey(arg))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.containsKey(arg))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
26	[BUG]  [BUGGY]  if  (optional  ||  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  ||  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  buffer.length()  >  minimum)  {	  if    (optional    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  Annotation  option  =(Annotation)comp.getObject();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Annotation  option  =(Annotation)comp.getObject();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Annotation  option  =(Annotation)comp.getObject();	  Annotation    option    =(Annotation)comp.next();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
28	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  args);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
30	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  this.optionMap.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  this.optionMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
32	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.getAnonymousOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.getAnonymousOption();	  AnonymousOption    option    =(Annotation)comp.getObject();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
33	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.getOption();	  AnonymousOption    option    =(Annotation)comp.getObject();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(this,  null);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
35	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(this,  arg);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  null);	  Option    option    =    options.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  offset,  outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  offset,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  offset,  outer);	  Option    option    =    options.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  suffix);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  suffix);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  suffix);	  Option    option    =    options.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(prefix);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(prefix);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(separator  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(separator  +  1);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(separator,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(separator,  buffer);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  final  Option  option  =(Option)comp.get(1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  final  Option  option  =(Option)comp.get(1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	final  Option  option  =(Option)comp.get(1);	  final    Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
43	[BUG]  [BUGGY]  if(optional  ||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  options.containsKey(separator))  {	  if    (optional    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  options.containsKey(separator)||  options.containsKey(separator))  {	  if    (optional    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)comp.next();  buffer.append(option,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =(Option)comp.next();  buffer.append(option,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =(Option)comp.next();  buffer.append(option,  separator);	  final    Option    option    =(Option)comp.next();    buffer.append(option,    separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  buffer.append(option,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  buffer.append(option,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	buffer.append(option,  separator);	  final    Option    option    =(Option)comp.next();    buffer.append(option,    separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  if(comp.hasNext())  {  final  Option  option  =(Option)comp.next();  buffer.append(option,  separator);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(comp.hasNext())  {  final  Option  option  =(Option)comp.next();  buffer.append(option,  separator);  }  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(comp.hasNext())  {  final  Option  option  =(Option)comp.next();  buffer.append(option,  separator);  }	  final    Option    option    =(Option)comp.next();    buffer.append(option,    separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefix  +  1);	  Option    option    =    optionMap.getOption(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
49	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes  +  1);	  Option    option    =    optionMap.getOption(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
50	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
51	[BUG]  [BUGGY]  if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  option  =  options.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =  options.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =  options.getOption(this,  buffer);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
54	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(prefix);	  Option    option    =    optionMap.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
56	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  separator);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
57	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefix,  separator);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
58	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
59	[BUG]  [BUGGY]  if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(buffer.length()!=  0  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  if(binary  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(binary  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(binary  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
61	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(prefixes,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(prefixes,  buffer);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(args);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(args);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.get(i).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(i).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(i).getOption();	  Option    option    =    optionMap.get(i).getOption();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(i).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(i).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(i).getOption();	  Option    option    =    optionMap.get(i).getOption();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  Option  option  =  optionMap.get(0).getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(0).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(0).getOption();	  Option    option    =    optionMap.get(i).getOption();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  if  (exceptional  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (exceptional  &&  outer)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (exceptional  &&  outer)  {	  if    (exceptional    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  if  (exceptionals  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (exceptionals  &&  outer)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (exceptionals  &&  outer)  {	  if    (exceptional    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(expanded  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
70	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(expanded  &&  buffer.length()  >  maximum)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
71	[BUG]  [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(expanded  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(expanded  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options().get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options().get(separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
73	[BUG]  [BUGGY]  Option  option  =  optionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap().get(separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(arg,  description);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(anonymous  &&  buffer.length()  >  maximum)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
77	[BUG]  [BUGGY]  if(anonymous  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(anonymous  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(anonymous  ||  buffer.length()  ==  0)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
78	[BUG]  [BUGGY]  if(this.anonymous)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(this.anonymous)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(this.anonymous)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
79	[BUG]  [BUGGY]  if  (optional  ||  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  ||  buffer.length()  <  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  buffer.length()  <  maximum)  {	  if    (optional    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(args,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(args,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(args,  buffer);	  Option    option    =    options.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(args,  description);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(args,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(args,  description);	  Option    option    =    options.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(previous).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(previous).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(previous).getOption();	  Option    option    =    optionsMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
83	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(parser).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(parser).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(parser).getOption();	  Option    option    =    optionsMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
84	[BUG]  [BUGGY]  option  =(Option)comp.get();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =(Option)comp.get();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =(Option)comp.get();	  option    =(Option)comp.next();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  Option  option  =  options.get(prefix).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(prefix).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(prefix).getOption();	  Option    option    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.get(parser).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(parser).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(parser).getOption();	  Option    option    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(previous  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(prefix  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
89	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
90	[BUG]  [BUGGY]  Annotation  option  =(Annotation)comp.get();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Annotation  option  =(Annotation)comp.get();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Annotation  option  =(Annotation)comp.get();	  AnonymousOption    option    =(Annotation)comp.get();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
91	[BUG]  [BUGGY]  anonymousOption  option  =(Annotation)comp.get();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  anonymousOption  option  =(Annotation)comp.get();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	anonymousOption  option  =(Annotation)comp.get();	  AnonymousOption    option    =(Annotation)comp.get();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
92	[BUG]  [BUGGY]  if  (optional  ||  options.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  ||  options.size()  >  minimum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  options.size()  >  minimum)  {	  if    (optional    &&    options.size()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
93	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(args,  buffer);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(args,  description);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(separator,  buffer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  option  =(Option)comp.clone();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =(Option)comp.clone();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =(Option)comp.clone();	  Option    option    =(Option)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)comp.cloneTree();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =(Option)comp.cloneTree();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =(Option)comp.cloneTree();	  Option    option    =(Option)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
98	[BUG]  [BUGGY]  if(optional  ||  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  options.containsKey(separator)||  options.containsKey(separator))  {	  if    (optional    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
99	[BUG]  [BUGGY]  if(optional  ||  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  optionMap.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  optionMap.containsKey(separator)||  options.containsKey(separator))  {	  if    (optional    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  buffer,  outer);	  Option    option    =    options.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  maximum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  maximum);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  buffer,  maximum);	  Option    option    =    options.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  buffer,  arg);	  Option    option    =    options.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  len);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  len);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  buffer,  len);	  Option    option    =    options.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
104	[BUG]  [BUGGY]  if  (optional  ||  buffer.length()  ==  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  ||  buffer.length()  ==  minimum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  buffer.length()  ==  minimum)  {	  if    (optional    ||    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
105	[BUG]  [BUGGY]  if  (exceptional  ||  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (exceptional  ||  buffer.length()  ==  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (exceptional  ||  buffer.length()  ==  maximum)  {	  if    (optional    ||    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
106	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(exceptional  &&  buffer.length()  >  maximum)  {	  if(exceptional)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
107	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(exceptional)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
108	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(maximum)!=  ']')  {	  if(exceptional)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
109	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  outer);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  maximum);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
111	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer,  args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer,  args);	  Option    option    =    optionMap.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
112	[BUG]  [BUGGY]  Option  option  =(Option)comp.get(1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =(Option)comp.get(1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =(Option)comp.get(1);	  Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
113	[BUG]  [BUGGY]  option  =(Option)comp.get(0);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =(Option)comp.get(0);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =(Option)comp.get(0);	  Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
114	[BUG]  [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ||  optionMap.containsKey(separator))  {	  if(optional    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
115	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator,  buffer);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
116	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(prefix);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(prefix);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
117	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(comp,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(comp,  buffer);	  Option    option    =    options.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(arg,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(arg,  buffer);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(arg,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(arg,  description);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  options,  buffer);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  optionMap);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  optionMap);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  optionMap);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
122	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  option);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  option);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
123	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefix,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
124	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  arg);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
125	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  outer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
126	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  comp);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
127	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
128	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
129	[BUG]  [BUGGY]  if  (optional  &&  both)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  &&  both)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  both)  {	  if    (optional    ||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
130	[BUG]  [BUGGY]  if  (optional  ||  multiple)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  ||  multiple)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  ||  multiple)  {	  if    (optional    ||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
131	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(buffer.length()  ==  0  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)    ==    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
132	[BUG]  [BUGGY]  if(separator  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)    ==    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
133	[BUG]  [BUGGY]  if(optional  &&  buffer.size()  >  maximum  &&  options.charAt(maximum  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.size()  >  maximum  &&  options.charAt(maximum  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.size()  >  maximum  &&  options.charAt(maximum  -  1)!=  ']')  {	  if    (optional    &&    options.size()    >    maximum    &&    buffer.charAt(maximum    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
134	[BUG]  [BUGGY]  if(optional  &&  options.size()  >  minimum  &&  buffer.charAt(maximum  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  options.size()  >  minimum  &&  buffer.charAt(maximum  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  options.size()  >  minimum  &&  buffer.charAt(maximum  -  1)!=  ']')  {	  if    (optional    &&    options.size()    >    maximum    &&    buffer.charAt(maximum    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.get(previous).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(previous).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(previous).getOption();	  Option    option    =    optionMap.get(previous).getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  Option  option  =  optionMap.get(current).getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(current).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(current).getOption();	  Option    option    =    optionMap.get(previous).getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
137	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.containsKey(separator)||  options.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
138	[BUG]  [BUGGY]  if(!anonymous)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(!anonymous)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(!anonymous)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
139	[BUG]  [BUGGY]  if(anonymous  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(anonymous  &&  options.size()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(anonymous  &&  options.size()  >  maximum)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
140	[BUG]  [BUGGY]  annotations  =(Annotation)comp.next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  annotations  =(Annotation)comp.next();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	annotations  =(Annotation)comp.next();	  Annotation    option    =(Annotation)comp.next();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
141	[BUG]  [BUGGY]  if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if    (optional    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
142	[BUG]  [BUGGY]  if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  options.containsKey(separator)||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {	  if    (optional    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
143	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(arg,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(arg,  outer);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(comp,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(comp,  outer);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
145	[BUG]  [BUGGY]  if(optional  &&  buffer.size()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.size()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.size()  >  maximum  &&  buffer.charAt(maximum  -  1)!=  ']')  {	  if    (optional    &&    options.size()    >    maximum    &&    buffer.charAt(maximum    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  if(optional  &&  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.length()  ==  0)  {	  if(optional    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
147	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  null);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
148	[BUG]  [BUGGY]  Option  option  =  options.getOption(true);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(true);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(true);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
149	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  args);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefixes,  buffer,  args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefixes,  buffer,  args);	  Option    option    =    options.getOption(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
150	[BUG]  [BUGGY]  Option  option  =  options.get(separator).getOptionMap();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(separator).getOptionMap();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(separator).getOptionMap();	  Option    option    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption(option);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.getOption(option);	  AnonymousOption    option    =(Annotation)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
152	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.create();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.create();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.create();	  AnonymousOption    option    =(Annotation)comp.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
153	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(partial).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(partial).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(partial).getOption();	  Option    option    =    optionsMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
154	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(previous  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
155	[BUG]  [BUGGY]  Option  option  =(Option)comp.get(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =(Option)comp.get(option);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =(Option)comp.get(option);	  Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
156	[BUG]  [BUGGY]  if(optional  ||  buffer.charAt(buffer.length()  -  1)  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  ||  buffer.charAt(buffer.length()  -  1)  ==  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  ||  buffer.charAt(buffer.length()  -  1)  ==  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
157	[BUG]  [BUGGY]  option  =(Option)comp.next();  buffer.append(option,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =(Option)comp.next();  buffer.append(option,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =(Option)comp.next();  buffer.append(option,  separator);	  option    =(Option)comp.next();    buffer.append(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(separator,  buffer,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(separator,  buffer,  outer);	  Option    option    =    options.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
159	[BUG]  [BUGGY]  Option  option  =  optionMap.get(i).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(i).getAnonymousOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(i).getAnonymousOption();	  Option    option    =    optionMap.get(i).getOption();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
160	[BUG]  [BUGGY]  if  (optional  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optional  &&  buffer.length()  ==  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optional  &&  buffer.length()  ==  maximum)  {	  if    (optional    ||    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
161	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.get(0);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.get(0);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.get(0);	  AnonymousOption    option    =(Annotation)comp.get();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
162	[BUG]  [BUGGY]  if(exceptionals  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(exceptionals  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(exceptionals  &&  buffer.length()  >  maximum)  {	  if(exceptional)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
163	[BUG]  [BUGGY]  if(!exceptional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(!exceptional)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(!exceptional)  {	  if(exceptional)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  args);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  args);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
165	[BUG]  [BUGGY]  if  (optionals  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (optionals  &&  options.size()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (optionals  &&  options.size()  >  maximum)  {	  if    (optional    &&    options.size()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
166	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer.length);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer.length);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  buffer.length);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
167	[BUG]  [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  AnonymousOption  option  =(Annotation)comp.getOption(optionMap);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	AnonymousOption  option  =(Annotation)comp.getOption(optionMap);	  AnonymousOption    option    =(Annotation)comp.getObject();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
168	[BUG]  [BUGGY]  if(optionals  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optionals  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optionals  &&  optionMap.containsKey(separator))  {	  if(optional    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
169	[BUG]  [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(args,  outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(args,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(args,  outer);	  Option    option    =    options.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(prefix,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(prefix,  outer);	  Option    option    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
172	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(optionMap);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(optionMap);	  Option    option    =    options.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(arg,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
174	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(args,  outer);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
175	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
176	[BUG]  [BUGGY]  Option  option  =  options.getOption(default);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(default);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(default);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
177	[BUG]  [BUGGY]  Option  option  =  options.get(previous);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(previous);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(previous);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
178	[BUG]  [BUGGY]  options  =(Option)comp.next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  options  =(Option)comp.next();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	options  =(Option)comp.next();	  option    =(Option)comp.next();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
179	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  null);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
180	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  outer);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.charAt(buffer.length()  -  1)  ==  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)    ==    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
182	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(arguments  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(arguments  &&  buffer.length()  >  maximum)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
183	[BUG]  [BUGGY]  if(arguments  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(arguments  &&  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(arguments  &&  options.isEmpty())  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
184	[BUG]  [BUGGY]  if(arguments  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(arguments  &&  options.size()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(arguments  &&  options.size()  >  maximum)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
185	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this,  args);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(this,  args);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(this,  args);	  Option    option    =    optionsMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
186	[BUG]  [BUGGY]  final  Option  option  =(Option)comp.get(option);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  final  Option  option  =(Option)comp.get(option);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	final  Option  option  =(Option)comp.get(option);	  final    Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
187	[BUG]  [BUGGY]  if(optionals  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optionals  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optionals  &&  options.containsKey(separator)||  options.containsKey(separator))  {	  if    (optional    &&    optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
188	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  null);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  null);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
189	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  arg);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
190	[BUG]  [BUGGY]  if(!expanded)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(!expanded)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(!expanded)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
191	[BUG]  [BUGGY]  if(expanded  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(expanded  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(expanded  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
192	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator).getAnonymousOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator).getAnonymousOption();	  Option    option    =    optionsMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
193	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator).appendOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator).appendOption(optionMap);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator).appendOption(optionMap);	  Option    option    =    optionsMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
194	[BUG]  [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
195	[BUG]  [BUGGY]  if(separator!=  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator!=  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator!=  null  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
196	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(separator  -  2);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
197	[BUG]  [BUGGY]  Option  option  =  options.get(0).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(0).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(0).getOption();	  Option    option    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
198	[BUG]  [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
199	[BUG]  [BUGGY]  if(separator!=  null  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator!=  null  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator!=  null  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)!=    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
200	[BUG]  [BUGGY]  option  =(Option)comp.next();  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  option  =(Option)comp.next();  buffer.append(separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	option  =(Option)comp.next();  buffer.append(separator);	  option    =(Option)comp.next();    buffer.append(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
201	[BUG]  [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ==  null  ||  buffer.charAt(buffer.length()  -  1)  ==  ']')  {	  if(optional    ||    buffer.charAt(buffer.length()    -    1)    ==    ']')    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
202	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  options,  outer);	  Option    option    =    optionMap.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
203	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator  /  separator  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator  /  separator  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator  /  separator  +  1);	  Option    option    =    optionMap.getOption(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
204	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator  /  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator  /  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator  /  1);	  Option    option    =    optionMap.getOption(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
205	[BUG]  [BUGGY]  Option  option  =(Option)comp.get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =(Option)comp.get(separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =(Option)comp.get(separator);	  Option    option    =(Option)comp.get(0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
206	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.get(separator,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.get(separator,  outer);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
207	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  separator,  outer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
208	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(args,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(args,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(args,  separator);	  Option    option    =    optionMap.getOption(args);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  arg);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
210	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(this,  description);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(this,  description);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
211	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  /  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(separator  /  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(separator  /  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
212	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(arg).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(arg).getOption();	  Option    option    =    optionMap.get(previous).getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
213	[BUG]  [BUGGY]  Option  option  =  optionMap.get(optional).getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.get(optional).getOption();  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.get(optional).getOption();	  Option    option    =    optionMap.get(previous).getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
214	[BUG]  [BUGGY]  if(separator  ==  null  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator  ==  null  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator  ==  null  ||  buffer.length()  ==  0)  {	  if(optional    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
215	[BUG]  [BUGGY]  if(this.expanded)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(this.expanded)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(this.expanded)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
216	[BUG]  [BUGGY]  Annotation  option  =(Annotation)comp.get(0);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Annotation  option  =(Annotation)comp.get(0);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Annotation  option  =(Annotation)comp.get(0);	  Annotation    option    =(Annotation)comp.next();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
217	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  both);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  both);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(prefixes,  both);	  Option    option    =    optionMap.getOption(prefixes,    outer);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
218	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.get(separator,  outer);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
219	[BUG]  [BUGGY]  if(separator!=  null  &&  option.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(separator!=  null  &&  option.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(separator!=  null  &&  option.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
220	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  buffer.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(optional  &&  buffer.containsKey(separator)||  buffer.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(optional  &&  buffer.containsKey(separator)||  buffer.containsKey(separator))  {	  if(optional    &&    buffer.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
221	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(separator,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(separator,  arg);	  Option    option    =    options.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
222	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(separator,  outer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
223	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator  +  1);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionsMap.getOption(separator  +  1);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
224	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  both);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
225	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  offset);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  offset);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(separator,  offset);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
226	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(name);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
227	[BUG]  [BUGGY]  if  (exceptional  ||  both)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if  (exceptional  ||  both)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if  (exceptional  ||  both)  {	  if    (exceptional    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
228	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  separator);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  separator);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
229	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer,  arg);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  optionMap.getOption(this,  buffer,  arg);	  Option    option    =    optionMap.getOption(this,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
230	[BUG]  [BUGGY]  if(!both)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  if(!both)  {  [BUGGY]      buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	if(!both)  {	  if(arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
231	[BUG]  [BUGGY]  Option  option  =  options.getOption(exclude);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(exclude);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(exclude);	  Option    option    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
232	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (i.hasNext())  {  buffer.append(separator);  }  }  }  if  (both)  {  buffer.append(')');  }      [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]      if  (optional  &&  outer)  {  buffer.append(']');  }  if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	Option  option  =  options.getOption(name);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
