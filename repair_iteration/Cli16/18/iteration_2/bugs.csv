bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  options.getOption(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(separator);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(separator);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(arg);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(arg);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(comp);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(comp);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  if(expanded)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(expanded)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  if(separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  if(!optional)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  if(separator  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&  option.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  option.isSeparator())  {	  if(outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  if(expanded  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(expanded  &&  option.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isSeparator())  {	  if(outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  if(!outer  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!outer  &&  option.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isSeparator())  {	  if(outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  if(option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(option.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator())  {	  if(outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  if(separator)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator)  {  buffer.append(']');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator)  {  buffer.append(']');  }	      if(!separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  if(!separator)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!separator)  {  buffer.append( "] ");  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!separator)  {  buffer.append( "] ");  }	      if(!separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  pendency.append(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  pendency.append(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append(separator);	      if(!separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  if(separator  &&!optional)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&!optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&!optional)  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  if(expanded  &&!separator)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(expanded  &&!separator)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&!separator)  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  if(separator  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  option.isOptional())  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  if(separator  &&  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&  options.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  options.isOptional())  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null)  {  buffer.append( "[ ");  }	      if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next());  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i.next());	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  option  =(Option)i.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =(Option)i.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =(Option)this.optionMap.get(i);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i);	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  if(option.optional  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(option.optional  &&  outer)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  &&  outer)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(expanded  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(expanded  &&  option.optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.optional)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(separator  ||  outer  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  ||  outer  &&  option.optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  outer  &&  option.optional)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(outer  ||  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer  ||  option.optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  ||  option.optional)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  options.get(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(separator);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionsMap.get(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(separator);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.get(separator,  buffer);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  buffer);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)i.next();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)i.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)i.next();	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(separator.length()  ==  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator.length()  ==  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()  ==  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!outer  &&  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  if(expanded  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(expanded  &&  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  optionMap.getOption();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption();	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(),  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(),  buffer);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(),  buffer);	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  options.getOption(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(separator);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  Option  option  =  i.getOption(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  i.getOption(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  i.getOption(separator);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.getOption(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(separator);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  option.getOption(prefix);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(prefix);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  options.getOption();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.getOption();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  option  =  option.getOption();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =  option.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  if(separator)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator)  {  buffer.append('[');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator)  {  buffer.append('[');  }	      if(!separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  buffer.append('[');  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append('[');	      if(!separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  parent.append(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  parent.append(separator);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append(separator);	      if(!separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  if(outer  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer  ||  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  ||  option.isOptional())  {	  if    (optional    ||!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  if(outer  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer  ||  option.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  ||  option.isSeparator())  {	  if    (optional    ||!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  Option  option  =  option.getOption(this);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  option.getOption(this);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(this);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(optional  ||  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optional  ||  buffer!=  null)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||  buffer!=  null)  {	  if(optional)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  option.getOption(arg);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(arg);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator  +  1);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(prefix);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(prefix);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  if(optionMap  &&  outer  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optionMap  &&  outer  &&  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  &&  outer  &&  option.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  if(optionMap  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optionMap  &&  option.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  &&  option.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =(Option)optionMap.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)optionMap.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  final  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  options.getOption();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption();	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  buffer.append(separator);  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(separator);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  if(optional  ||!separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optional  ||!separator)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||!separator)  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)in.next();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)in.next();  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)in.next();	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  1);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  1);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!outer)  {  buffer.append(']');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer)  {  buffer.append(']');  }	      if(!separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  buffer.append(']');  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(']');	      if(!separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  if(!outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!outer)  {  buffer.append('[');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer)  {  buffer.append('[');  }	      if(!separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  if(optionMap  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optionMap  &&  outer)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  &&  outer)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  if(separator  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&  option.optional)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  option.optional)  {	  if(outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  if(outer)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer)  {	  if    (optional    ||!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  if(!outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(!outer)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer)  {	  if    (optional    ||!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
84	[BUG]  [BUGGY]  if(outer  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(outer  ||  options.isEmpty())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  ||  options.isEmpty())  {	  if    (optional    ||!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
85	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  option.getOption(separator,  comp);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(separator,  comp);	      Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  if(separator  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator  &&  options.isEmpty())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  options.isEmpty())  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  if(optional  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optional  &&  separator)  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  &&  separator)  {	  if(optional    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  if(optionMap.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optionMap.isSeparator())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator())  {	  if(outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  +  1);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  +  1);	      SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.get(separator,  comp);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  comp);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.get(separator  -  1);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator  -  1);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.getOption(this);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  Option  option  =  optionMap.getOption(option);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(option);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  if(separator.length()  >  maximum)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator.length()  >  maximum)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()  >  maximum)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  if(separator.length()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator.length()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  optionMap.getOption(option);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(option);	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
97	[BUG]  [BUGGY]  if(optionMap.isOptional())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(optionMap.isOptional())  {  [BUGGY]    buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional())  {	  if(outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  final  Option  option  =  option.getOption(separator,  comp);  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator,  comp);	      final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
99	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [BUGGY]    if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }	      if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
