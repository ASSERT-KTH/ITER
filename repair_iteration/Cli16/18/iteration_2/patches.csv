bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Option  option  =  buffer.getOption(),  option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  buffer.getOption(),  option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  buffer.getOption(),  option);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
2	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(),  buffer,  separator);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(),  buffer);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(),  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(),  buffer);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  comp);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(),  buffer,  comp);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
5	[BUG]  [BUGGY]  option  =  option.getOption(),  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  option  =  option.getOption(),  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =  option.getOption(),  buffer);	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
6	[BUG]  [BUGGY]  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append( "[ ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append( "[ ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
7	[BUG]  [BUGGY]  buffer.append('[').append(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append('[').append(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append('[').append(separator);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
8	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(this);	  final    Option    option    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(true);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(true);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(true);	  final    Option    option    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(prefix  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
11	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(separator  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
12	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(separator,  buffer);	  Option    option    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.get(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(separator,  buffer);	  Option    option    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
14	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  buffer,  prefix);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator,  buffer,  prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  buffer,  prefix);	  Option    option    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
15	[BUG]  [BUGGY]  parent.append('[');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append('[');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append('[');	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
16	[BUG]  [BUGGY]  parent.append(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append(this,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append(this,  separator);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
17	[BUG]  [BUGGY]  parent.append(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append(separator,  buffer);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
18	[BUG]  [BUGGY]  pendency.append('[');  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append('[');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append('[');	  pendency.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  pendency.append(']');  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append(']');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append(']');	  pendency.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  pendency.append( ", ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append( ", ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append( ", ");	  pendency.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  paint.append( "] ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  paint.append( "] ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	paint.append( "] ");	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append( "] ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append( "] ");	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  pendency.append( "] ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append( "] ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append( "] ");	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  parent.append( "] ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append( "] ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append( "] ");	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]  if(!optionMap.isOptional())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optionMap.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optionMap.isOptional())  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
26	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
27	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
28	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
29	[BUG]  [BUGGY]  buffer.append(']',  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append(']',  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(']',  separator);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
30	[BUG]  [BUGGY]  if(expanded  ||  outer  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  outer  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  outer  &&  option.optional)  {	  if(separator    ||    outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
31	[BUG]  [BUGGY]  if(outer  &&  separator  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  separator  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  separator  &&  option.optional)  {	  if(separator    ||    outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
32	[BUG]  [BUGGY]  if(outer  ||  separator  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  ||  separator  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  ||  separator  &&  option.optional)  {	  if(separator    ||    outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  outer)  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
34	[BUG]  [BUGGY]  if(output  &&  optionMap)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(output  &&  optionMap)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(output  &&  optionMap)  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
35	[BUG]  [BUGGY]  if(optionMap.contains(separator)&&  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.contains(separator)&&  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.contains(separator)&&  outer)  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
36	[BUG]  [BUGGY]  if(expanded  &&  optionMap.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  optionMap.contains(separator))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  optionMap.contains(separator))  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
37	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[null] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[null] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null)  {  buffer.append( "[null] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  final  Option  option  =  comp.getOption(option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  comp.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  comp.getOption(option);	  final    Option    option    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(comp);	  final    Option    option    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  Option  option  =  comp.getOption(option);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  comp.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  comp.getOption(option);	  final    Option    option    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append(']');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefix);  if(option!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(prefix);  if(option!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(prefix);  if(option!=  null)  {  buffer.append(']');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
45	[BUG]  [BUGGY]  pendency.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append(separator).append(']');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append(separator).append(']');	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
46	[BUG]  [BUGGY]  if(!outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer)  {  buffer.append( "] ");  }	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
47	[BUG]  [BUGGY]  if(!optionMap.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optionMap.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optionMap.isSeparator())  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
48	[BUG]  [BUGGY]  if(separator.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.isSeparator())  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
49	[BUG]  [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
50	[BUG]  [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
51	[BUG]  [BUGGY]  if(options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(options.isOptional())  {	  if(separator    &&    options.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
52	[BUG]  [BUGGY]  if(separator!=  null  &&  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  options.isOptional())  {	  if(separator    &&    options.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  if(separator  ||  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  options.isOptional())  {	  if(separator    &&    options.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  if(separator.length()!=  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.length()!=  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()!=  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	  if(separator.length()    ==    0)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  if(separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator.length()    ==    0)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
56	[BUG]  [BUGGY]  if(separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	  if(separator.length()    ==    0)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
58	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(arg);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
59	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "[ ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "[ ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
60	[BUG]  [BUGGY]  if(separator.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.equals( " "))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.equals( " "))  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  if(!separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!separator)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  if(separator.equals( "] "))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.equals( "] "))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.equals( "] "))  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  this.optionMap.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  this.optionMap.getOption(separator);	  Option    option    =    i.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  if(separator  ||!optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||!optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||!optional)  {	  if(optional    ||!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
65	[BUG]  [BUGGY]  if(optional  ||!separator  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  ||!separator  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||!separator  ||  buffer.length()  ==  0)  {	  if(optional    ||!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
66	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
67	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  buffer);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
68	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(arg);	  final    Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(default);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(default);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(default);	  final    Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
72	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
73	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(arg);	  final    Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
74	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(this.option);	  final    Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
75	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(this);	  Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
77	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.getOption(this);	  Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
78	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null)  {  buffer.append( "[ ");  }	  if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
79	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.clone();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.clone();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.clone();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
80	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.next();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
81	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
82	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
83	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.next();	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
84	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)optionMap.get(i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)optionMap.get(i);	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
85	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)optionMap.get(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)optionMap.get(option);	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
86	[BUG]  [BUGGY]  pendency.append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append(separator).append('[');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append(separator).append('[');	  if(!outer)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
87	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
88	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(prefix  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
89	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i.next(),  buffer);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
90	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next()  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next()  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i.next()  -  1);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
91	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i.next(),  separator);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
92	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
93	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(arg);  if(option!=  null)  {  buffer.append('[');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
95	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
97	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(limit  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(limit  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(limit  -  1)!=  ']')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
98	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(separator,  buffer);	  Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
99	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(prefix);	  Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
100	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.getOption(separator);	  Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  outer)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
102	[BUG]  [BUGGY]  if(offset)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(offset)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(offset)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
103	[BUG]  [BUGGY]  if(expanded  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  option.isOptional())  {	  if(expanded    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
104	[BUG]  [BUGGY]  if(!expanded  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expanded  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expanded  &&  option.isOptional())  {	  if(expanded    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
105	[BUG]  [BUGGY]  if(expanded  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {	  if(expanded    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
106	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.in.next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.in.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.in.next();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)in.next();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
107	[BUG]  [BUGGY]  if(option.optional  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  &&  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  &&  separator)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
108	[BUG]  [BUGGY]  if(separator  ||  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  option.optional)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
109	[BUG]  [BUGGY]  if(separator!=  null  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  option.optional)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
110	[BUG]  [BUGGY]  if(separator  ==  null  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  option.optional)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
111	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(i);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
112	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)allOptionMap.get(i);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)allOptionMap.get(i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)allOptionMap.get(i);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
113	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.get(i);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.get(i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.get(i);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
114	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(prefix  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
115	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(separator  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
116	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  outer  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  outer  &&  option.isOptional())  {	  if(optionMap    &&    outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
117	[BUG]  [BUGGY]  if(expanded  &&  optionMap  &&  outer  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  optionMap  &&  outer  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  optionMap  &&  outer  &&  option.isOptional())  {	  if(optionMap    &&    outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
118	[BUG]  [BUGGY]  if(outer  &&  optionMap.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  optionMap.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  optionMap.isOptional())  {	  if(optionMap    &&    outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
119	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(this);	  final    Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
120	[BUG]  [BUGGY]  parent  ||  separator)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent  ||  separator)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent  ||  separator)  {  buffer.append('[');  }	  if(separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
121	[BUG]  [BUGGY]  bucket.append('[');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  bucket.append('[');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	bucket.append('[');	  if(separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  parent)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent)  {  buffer.append('[');  }	  if(separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
123	[BUG]  [BUGGY]  bucket.append(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  bucket.append(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	bucket.append(separator);	  if(separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
124	[BUG]  [BUGGY]  if(separator  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  option.isSeparator())  {	  if(outer    ||    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
125	[BUG]  [BUGGY]  if(expanded  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  option.isSeparator())  {	  if(outer    ||    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
126	[BUG]  [BUGGY]  if(option.isSeparator()  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  ||  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  ||  option.isSeparator())  {	  if(outer    ||    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
127	[BUG]  [BUGGY]  final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }	  if(separator.length()    >    maximum)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
128	[BUG]  [BUGGY]  final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  int  separatorLength()  >  maximum)  {  buffer.append(']');  }	  if(separator.length()    >    maximum)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
129	[BUG]  [BUGGY]  final  int  separatorLength  =  separator.length();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  int  separatorLength  =  separator.length();  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  int  separatorLength  =  separator.length();	  if(separator.length()    >    maximum)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
130	[BUG]  [BUGGY]  if(!option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!option.isOptional())  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
131	[BUG]  [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
132	[BUG]  [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
133	[BUG]  [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
134	[BUG]  [BUGGY]  if(expanded  ||  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  option.optional)  {	  if(expanded    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
135	[BUG]  [BUGGY]  if(!expanded  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expanded  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expanded  &&  option.optional)  {	  if(expanded    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
136	[BUG]  [BUGGY]  if(expanded  &&  options.optional)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  options.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  options.optional)  {	  if(expanded    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
137	[BUG]  [BUGGY]  if(options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(options.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
138	[BUG]  [BUGGY]  if(separator!=  null  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  options.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
139	[BUG]  [BUGGY]  if(separator  ==  null  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  options.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
140	[BUG]  [BUGGY]  if(separator  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  options.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
141	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.next();	  final    SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
142	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)arguments.next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)arguments.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)arguments.next();	  final    SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
143	[BUG]  [BUGGY]  if(!expanded)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expanded)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expanded)  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
144	[BUG]  [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
145	[BUG]  [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
146	[BUG]  [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
147	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(this,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(this,  buffer);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
148	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  this.optionMap.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
149	[BUG]  [BUGGY]  Option  option  =  i.getOption(this);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  i.getOption(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  i.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
150	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.get(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(prefix);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
151	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(0);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
152	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(separator);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
153	[BUG]  [BUGGY]  if(optionMap.isEmpty()  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isEmpty()  ||  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isEmpty()  ||  options.isEmpty())  {	  if(outer    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
154	[BUG]  [BUGGY]  if(optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isEmpty())  {	  if(outer    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
155	[BUG]  [BUGGY]  if(separator  ||  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  buffer!=  null)  {	  if(optional    ||    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
156	[BUG]  [BUGGY]  if(optional  ||  buffer.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  ||  buffer.length()!=  0)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||  buffer.length()!=  0)  {	  if(optional    ||    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
157	[BUG]  [BUGGY]  if(optional  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  &&  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  &&  buffer!=  null)  {	  if(optional    ||    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
158	[BUG]  [BUGGY]  bucket.append(']');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  bucket.append(']');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	bucket.append(']');	  if(separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
159	[BUG]  [BUGGY]  if(separator)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator)  {  buffer.append( "] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator)  {  buffer.append( "] ");  }	  if(separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
160	[BUG]  [BUGGY]  if(expanded  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  separator)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
161	[BUG]  [BUGGY]  if(separator  &&  option)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  &&  option)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  &&  option)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
162	[BUG]  [BUGGY]  if(optional  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  ||  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||  separator)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
163	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
164	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  buffer.length()  >  maximum)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
165	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(prefixes.length  -  1)!=  ']')  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
166	[BUG]  [BUGGY]  if(expanded  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  buffer!=  null)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
167	[BUG]  [BUGGY]  if(!expanded  &&!separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expanded  &&!separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expanded  &&!separator)  {	  if(expanded    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  if(expanded  ||!separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||!separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||!separator)  {	  if(expanded    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  if(!expanded  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expanded  &&  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expanded  &&  option.isSeparator())  {	  if(expanded    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
170	[BUG]  [BUGGY]  if(expanded  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
171	[BUG]  [BUGGY]  if(expanded  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {	  if(expanded    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
172	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(prefix);	  final    Option    option    =    option.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
173	[BUG]  [BUGGY]  if(separator!=  null  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  option.isOptional())  {	  if(separator    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  if(separator  ==  null  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  option.isOptional())  {	  if(separator    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
175	[BUG]  [BUGGY]  if(separator  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  option.isOptional())  {	  if(separator    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  buffer.length()  >  maximum)  {	  if(outer    &&    option.isOptional()    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
177	[BUG]  [BUGGY]  if(outer  &&  option.isOptional()  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  option.isOptional()  &&  buffer.length()  >  minimum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  option.isOptional()  &&  buffer.length()  >  minimum)  {	  if(outer    &&    option.isOptional()    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
178	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  option  =(Option)option.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(arg);	  Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
180	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.get(separator,  comp);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
181	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.get(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(separator,  comp);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
182	[BUG]  [BUGGY]  if(separator!=  null  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  option.isSeparator())  {	  if(separator    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
183	[BUG]  [BUGGY]  if(separator  ==  null  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  option.isSeparator())  {	  if(separator    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
184	[BUG]  [BUGGY]  Option  option  =(Option)option.getValue();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)option.getValue();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)option.getValue();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
185	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
186	[BUG]  [BUGGY]  buffer.append(option.getName());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append(option.getName());  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(option.getName());	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
187	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(arg);  buffer.append(option.getName());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(arg);  buffer.append(option.getName());  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(arg);  buffer.append(option.getName());	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
188	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this);  buffer.append(option.getName());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(this);  buffer.append(option.getName());  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(this);  buffer.append(option.getName());	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
189	[BUG]  [BUGGY]  Option  option  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.get(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(prefix);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
190	[BUG]  [BUGGY]  Option  option  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.get(separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(separator  +  1);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
191	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
192	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
193	[BUG]  [BUGGY]  if(!outer  &&  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  options.isOptional())  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
194	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator!=    null    ||    separator.length()    ==    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
195	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator!=    null    ||    separator.length()    ==    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
196	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(prefix);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
197	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(separator,  buffer);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
198	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(this,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(this,  separator);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append( ", ");  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append( ", ");	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
200	[BUG]  [BUGGY]  Option  option  =  options.getOption(true);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(true);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(true);	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
201	[BUG]  [BUGGY]  if(separator!=  null  &&!optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&!optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&!optional)  {	  if(separator    &&!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
202	[BUG]  [BUGGY]  if(separator  ==  null  &&!optional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&!optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&!optional)  {	  if(separator    &&!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
203	[BUG]  [BUGGY]  if(optionMap.contains(separator)&&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.contains(separator)&&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.contains(separator)&&  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
204	[BUG]  [BUGGY]  if(optionMap.contains(separator)||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.contains(separator)||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.contains(separator)||  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
205	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.containsKey(separator)&&  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
206	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption(option);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
207	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.clone();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.clone();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.clone();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
208	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
209	[BUG]  [BUGGY]  if(option  ||  outer  ||  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option  ||  outer  ||  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option  ||  outer  ||  option.optional)  {	  if(outer    ||    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
210	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(comp);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
211	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  buffer);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
212	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getObject(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getObject(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getObject(separator);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
213	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getValue(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getValue(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.getValue(separator);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
214	[BUG]  [BUGGY]  if(output  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(output  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(output  &&  option.optional)  {	  if(option.optional    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  if(option.optional  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  ||  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  ||  outer)  {	  if(option.optional    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  if(!option.optional  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!option.optional  &&  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!option.optional  &&  outer)  {	  if(option.optional    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
217	[BUG]  [BUGGY]  if(!option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!option.isSeparator())  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
218	[BUG]  [BUGGY]  if(option.isSeparator()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
219	[BUG]  [BUGGY]  if(option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
220	[BUG]  [BUGGY]  if(!outer  &&  options.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  options.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  options.isSeparator())  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
221	[BUG]  [BUGGY]  if(!outer  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
222	[BUG]  [BUGGY]  if(!outer  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isSeparator()  &&  buffer.charAt(i.next()  -  1)!=  ']')  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
223	[BUG]  [BUGGY]  final  Option  option  =  comp.getOption(separator,  options);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  comp.getOption(separator,  options);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  comp.getOption(separator,  options);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
224	[BUG]  [BUGGY]  final  Option  option  =  comp.getOption(separator,  option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  comp.getOption(separator,  option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  comp.getOption(separator,  option);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
225	[BUG]  [BUGGY]  final  Option  option  =  comp.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  comp.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  comp.getOption(separator,  comp);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
226	[BUG]  [BUGGY]  final  Option  option  =  comp.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  comp.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  comp.getOption(separator);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
227	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.next();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
228	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getValue();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getValue();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getValue();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
229	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(option);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
230	[BUG]  [BUGGY]  Option  option  =  comp.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  comp.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  comp.getOption(separator);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
231	[BUG]  [BUGGY]  Option  option  =  comp.getOption(separator,  options);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  comp.getOption(separator,  options);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  comp.getOption(separator,  options);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
232	[BUG]  [BUGGY]  Option  option  =  comp.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  comp.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  comp.getOption(separator,  comp);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
233	[BUG]  [BUGGY]  Option  option  =  i.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  i.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  i.getOption(separator,  comp);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
234	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(separator,  buffer);	  final    Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
235	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(prefix);	  final    Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
236	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(this,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(this,  separator);	  final    Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
237	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(separator,  buffer);	  final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
238	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp);	  final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
239	[BUG]  [BUGGY]  option  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  option  =  optionMap.getOption();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =  optionMap.getOption();	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
240	[BUG]  [BUGGY]  buffer.append('['  +  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append('['  +  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append('['  +  separator);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
241	[BUG]  [BUGGY]  buffer.append( "n ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append( "n ");  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append( "n ");	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
242	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(this.prefix);	  final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
243	[BUG]  [BUGGY]  if(optionMap  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap  ||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  ||  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
244	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.containsKey(separator)||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.containsKey(separator)||  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
245	[BUG]  [BUGGY]  if(expanded  &&  options.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  options.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  options.isSeparator())  {	  if(expanded    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
246	[BUG]  [BUGGY]  if(option.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
247	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i  -  1);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
248	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i  +  1);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
249	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(null);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(null);	  Option    option    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
250	[BUG]  [BUGGY]  if(expanded  &&  optionMap)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  optionMap)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  optionMap)  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
251	[BUG]  [BUGGY]  if(optionMap  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap  ||  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  ||  outer)  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
252	[BUG]  [BUGGY]  buffer.append( "[] ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append( "[] ");  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append( "[] ");	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
253	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.getOption(option);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)anonymous.getOption(option);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
254	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.clone();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.clone();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.clone();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
255	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
256	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)option.getOption(separator);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
257	[BUG]  [BUGGY]  if(outer  &&  separator  ||  outer  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  separator  ||  outer  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  separator  ||  outer  &&  option.optional)  {	  if(separator    ||    outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
258	[BUG]  [BUGGY]  if(option.isOptional()  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  buffer!=  null)  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
259	[BUG]  [BUGGY]  if(option.isOptional()  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  ||  buffer.length()  ==  0)  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
260	[BUG]  [BUGGY]  if(expand)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expand)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expand)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
261	[BUG]  [BUGGY]  if(option.optional  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  &&  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  &&  buffer!=  null)  {	  if(option.optional    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
262	[BUG]  [BUGGY]  parent!=  null  &&!separator)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent!=  null  &&!separator)  {  buffer.append( "] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent!=  null  &&!separator)  {  buffer.append( "] ");  }	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
263	[BUG]  [BUGGY]  nisipable)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  nisipable)  {  buffer.append( "] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	nisipable)  {  buffer.append( "] ");  }	  if(!separator)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
264	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.length()  >  maximum)  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
265	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
266	[BUG]  [BUGGY]  if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  '[')  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
267	[BUG]  [BUGGY]  if(optional  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  ||  buffer.length()  ==  0)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  ||  buffer.length()  ==  0)  {	  if(optional    ||    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
268	[BUG]  [BUGGY]  if(expanded  &&  option  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option  &&  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option  &&  separator)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
269	[BUG]  [BUGGY]  if(exceptional  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(exceptional  &&  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(exceptional  &&  separator)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
270	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&!optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.containsKey(separator)&&!optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.containsKey(separator)&&!optional)  {	  if(separator    &&!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
271	[BUG]  [BUGGY]  if(!separator  &&!optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!separator  &&!optionMap.containsKey(arg))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!separator  &&!optionMap.containsKey(arg))  {	  if(separator    &&!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
272	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
273	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(partial  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(partial  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(partial  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
274	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionsMap.getOption(option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
275	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this.option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
276	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  i);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator,  i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  i);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
277	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(prefix,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(prefix,  separator);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
278	[BUG]  [BUGGY]  parent.append(']');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append(']');  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append(']');	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
279	[BUG]  [BUGGY]  parent.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent.append( ", ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent.append( ", ");	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
280	[BUG]  [BUGGY]  if(!separator  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!separator  &&  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!separator  &&  option.isSeparator())  {	  if(separator    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
281	[BUG]  [BUGGY]  if(optionMap  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap  ||  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  ||  option.isSeparator())  {	  if(outer    ||    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
282	[BUG]  [BUGGY]  if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
283	[BUG]  [BUGGY]  if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  ||  option.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
284	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(separator,  buffer);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
285	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(separator,  comp);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
286	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(prefix,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(prefix,  separator);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
287	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
288	[BUG]  [BUGGY]  nisipable)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  nisipable)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	nisipable)  {  buffer.append('[');  }	  if(separator)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
289	[BUG]  [BUGGY]  pendency.append( "n ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  pendency.append( "n ");  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	pendency.append( "n ");	  pendency.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
290	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(arg,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(arg,  buffer);	  final    Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
291	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(true);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(true);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(true);	  final    Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
292	[BUG]  [BUGGY]  if(expanded  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isOptional()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
293	[BUG]  [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
294	[BUG]  [BUGGY]  if(!outer  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  options.contains(separator))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  options.contains(separator))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
295	[BUG]  [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
296	[BUG]  [BUGGY]  if(optionMap)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
297	[BUG]  [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
298	[BUG]  [BUGGY]  if(optionMap.isSeparator()  ||  optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  ||  optionMap.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  ||  optionMap.isEmpty())  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
299	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer)  {  buffer.append(separator);  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer)  {  buffer.append(separator);  }	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
300	[BUG]  [BUGGY]  if(outer  &&  optionMap  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  optionMap  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  optionMap  &&  option.isOptional())  {	  if(optionMap    &&    outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
301	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(i  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
302	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
303	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option!=  null)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
304	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator,  buffer.length);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  buffer.length);	  Option    option    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
305	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(option);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
306	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  -  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
307	[BUG]  [BUGGY]  if(option  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option  ||  outer)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option  ||  outer)  {	  if(outer    ||    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
308	[BUG]  [BUGGY]  if(option.optional  &&  expanded)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  &&  expanded)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  &&  expanded)  {	  if(expanded    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
309	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(previous  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
310	[BUG]  [BUGGY]  if(option  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option  ||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option  ||  option.isOptional())  {	  if(outer    ||    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
311	[BUG]  [BUGGY]  if(option  ||  outer.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option  ||  outer.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option  ||  outer.isOptional())  {	  if(outer    ||    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
312	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)optionMap.clone();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)optionMap.clone();	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
313	[BUG]  [BUGGY]  if(expanded  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  options.contains(separator))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  options.contains(separator))  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
314	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
315	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
316	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(separator,  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator,  buffer);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
317	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  options.getOption(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  options.getOption(separator,  comp);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
318	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(comp,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(comp,  separator);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
319	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(prefix,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(prefix,  separator);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
320	[BUG]  [BUGGY]  if(optionMap  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap  ||  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap  ||  options.isEmpty())  {	  if(outer    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
321	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)this.optionMap.get(i.next(),  options);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
322	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  null);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(),  buffer,  null);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
323	[BUG]  [BUGGY]  if(exception  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(exception  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(exception  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {	  if(outer    &&    option.isOptional()    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
324	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
325	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  options);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  options);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this,  options);	  Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
326	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null)  {  buffer.append( "[] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
327	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.getOption();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
328	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.get();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.get();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.get();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
329	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(option);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(option);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
330	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(this);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(this);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(this);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
331	[BUG]  [BUGGY]  if(outer!=  null  &&  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer!=  null  &&  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer!=  null  &&  option.isSeparator())  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
332	[BUG]  [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)instance.next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)instance.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  SimpleAnonymousOption  option  =(SimpleAnonymousOption)instance.next();	  final    SimpleAnonymousOption    option    =(SimpleAnonymousOption)i.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
333	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  &&  buffer.length()  >  maximum)  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
334	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
335	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append('[');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
336	[BUG]  [BUGGY]  nisipable)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  nisipable)  {  buffer.append(']');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	nisipable)  {  buffer.append(']');  }	  if(separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
337	[BUG]  [BUGGY]  if(option.optional  &  separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  &  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  &  separator)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
338	[BUG]  [BUGGY]  if(option.optional  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.optional  ||  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.optional  ||  separator)  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
339	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(comp);	  final    Option    option    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
340	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
341	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
342	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.optionMap.get(separator,  comp);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
343	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  [Delete]  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	[Delete]	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
344	[BUG]  [BUGGY]  if(separator  >=  null  &&  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  >=  null  &&  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  >=  null  &&  option.isOptional())  {	  if(separator    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
345	[BUG]  [BUGGY]  if(expanded  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  separator)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  separator)  {	  if(expanded    &&!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
346	[BUG]  [BUGGY]  if(separator  ==  null  ||  option.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  ||  option.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  ||  option.isSeparator())  {	  if(separator    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
347	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  escape);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(),  buffer,  escape);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(),  buffer,  escape);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
348	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(),  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  optionMap.getOption(),  buffer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  optionMap.getOption(),  buffer);	  final    Option    option    =    option.getOption(),    buffer);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
349	[BUG]  [BUGGY]  Option  option  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.get(separator  -  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.get(separator  -  1);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
350	[BUG]  [BUGGY]  Option  option  =  option.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(comp,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(comp,  separator);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
351	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(separator,  comp,  outer);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(separator,  comp,  outer);	  Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
352	[BUG]  [BUGGY]  ators.add(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  ators.add(buffer,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	ators.add(buffer,  separator);	  if(separator)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
353	[BUG]  [BUGGY]  if(expanded  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  options.isEmpty())  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
354	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  optionMap.containsKey(separator))  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
355	[BUG]  [BUGGY]  if(output  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(output  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(output  &&  optionMap.containsKey(separator))  {	  if(optionMap    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
356	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  /  separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  /  separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  /  separator  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
357	[BUG]  [BUGGY]  if(!separator  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!separator  &&  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!separator  &&  options.isEmpty())  {	  if(separator    &&    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
358	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  parent  ==  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	parent  ==  null)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
359	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.defaultValue);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.getOption(this.defaultValue);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.getOption(this.defaultValue);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
360	[BUG]  [BUGGY]  if(option  ||  outer.isSeparator())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option  ||  outer.isSeparator())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option  ||  outer.isSeparator())  {	  if(outer    ||    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
361	[BUG]  [BUGGY]  if(expanded  ||  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  buffer!=  null)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  buffer!=  null)  {	  if(optional    ||    buffer!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
362	[BUG]  [BUGGY]  if(optionMap.isOptional()  ||  option.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  ||  option.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  ||  option.isOptional())  {	  if(optionMap    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
363	[BUG]  [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
364	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  expr);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  expr);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)comp.get(separator,  expr);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)comp.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
365	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  /  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator  /  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator  /  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
366	[BUG]  [BUGGY]  if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
367	[BUG]  [BUGGY]  if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.getName()!=  separator)  {  final  Option  option  =  option.getOption(separator);  buffer.append(option.getName());  }  else  {  buffer.append( ", ");  }	  final    Option    option    =    option.getOption(separator);    buffer.append(option.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
368	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator,  arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator,  arg);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
369	[BUG]  [BUGGY]  if(optionMap.isSeparator()  ||  optionMap.isLocal())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  ||  optionMap.isLocal())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  ||  optionMap.isLocal())  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
370	[BUG]  [BUGGY]  if(optionMap.isSeparator()  ||  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isSeparator()  ||  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isSeparator()  ||  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(optionMap.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
371	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =(Option)optionMap.get(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =(Option)optionMap.get(separator);	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
372	[BUG]  [BUGGY]  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  option  =  optionMap.getOption(separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	option  =  optionMap.getOption(separator);	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
373	[BUG]  [BUGGY]  if(expanded  ||  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  ||  options.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  ||  options.isEmpty())  {	  if(outer    ||    options.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
374	[BUG]  [BUGGY]  if(outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer)  {  buffer.append('[');  }  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer)  {  buffer.append('[');  }	  if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
375	[BUG]  [BUGGY]  Option  option  =  separator.getOption(i);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  separator.getOption(i);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  separator.getOption(i);	  Option    option    =    i.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
376	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(this,  separator);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(this,  separator);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
377	[BUG]  [BUGGY]  if(separator  ==  null  &&  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ==  null  &&  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ==  null  &&  options.isOptional())  {	  if(separator    &&    options.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
378	[BUG]  [BUGGY]  if(separator.equals(option.getSeparator())&&  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.equals(option.getSeparator())&&  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.equals(option.getSeparator())&&  options.isOptional())  {	  if(separator    &&    options.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
379	[BUG]  [BUGGY]  if(option.isSeparator()  ||  separator.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  ||  separator.equals(option.getName()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  ||  separator.equals(option.getName()))  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
380	[BUG]  [BUGGY]  if(option.isSeparator()  ||  separator.equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isSeparator()  ||  separator.equals(option.getDescription()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isSeparator()  ||  separator.equals(option.getDescription()))  {	  if(option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
381	[BUG]  [BUGGY]  if(separator.equals(option.optional)&&  separator.equals(option.optional))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator.equals(option.optional)&&  separator.equals(option.optional))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator.equals(option.optional)&&  separator.equals(option.optional))  {	  if(separator    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
382	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  optionMap.get(separator  -  2);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
383	[BUG]  [BUGGY]  buffer.append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append(separator).append('[');  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(separator).append('[');	  if(separator.length()    ==    0)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
384	[BUG]  [BUGGY]  buffer.append(separator).append( "] ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  buffer.append(separator).append( "] ");  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	buffer.append(separator).append( "] ");	  if(separator.length()    ==    0)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
385	[BUG]  [BUGGY]  if(optionMap.isOptional()  ||  optionMap.isVarArgs())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  ||  optionMap.isVarArgs())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  ||  optionMap.isVarArgs())  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
386	[BUG]  [BUGGY]  if(optionMap.isOptional()  ||  options.isOptional())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  ||  options.isOptional())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  ||  options.isOptional())  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
387	[BUG]  [BUGGY]  if(optionMap.isOptional()  ||  optionMap.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optionMap.isOptional()  ||  optionMap.isEmpty())  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optionMap.isOptional()  ||  optionMap.isEmpty())  {	  if(optionMap.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
388	[BUG]  [BUGGY]  if(!enabled)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!enabled)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!enabled)  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
389	[BUG]  [BUGGY]  if(!expand)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!expand)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!expand)  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
390	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  comp);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator,  comp);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
391	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  +  1);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)compiler.get(separator  +  1);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)compiler.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
392	[BUG]  [BUGGY]  if(optional  &&  separator.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  &&  separator.equals( " "))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  &&  separator.equals( " "))  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
393	[BUG]  [BUGGY]  if(optional  &&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(optional  &&  separator.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(optional  &&  separator.length()  >  maximum)  {	  if(optional    &&    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
394	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  option.getOption(separator);  if(option!=  null)  {  buffer.append(']');  }	  final    Option    option    =    option.getOption(separator);    if(option!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
395	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
396	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
397	[BUG]  [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!optional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'n'  &&  buffer.charAt(buffer.length()  -  1)!=  'r')  {	  if(!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
398	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator,  comp,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  final  Option  option  =  option.getOption(separator,  comp,  arg);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	final  Option  option  =  option.getOption(separator,  comp,  arg);	  final    Option    option    =    option.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
399	[BUG]  [BUGGY]  if(outer  &&  option.isOptional()  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(outer  &&  option.isOptional()  ||  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(outer  &&  option.isOptional()  ||  buffer.length()  >  maximum)  {	  if(outer    &&    option.isOptional()    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
400	[BUG]  [BUGGY]  if(expanded  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(expanded    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
401	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  &&  separator.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  &&  separator.equals(option.getName()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  &&  separator.equals(option.getName()))  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
402	[BUG]  [BUGGY]  if(!outer  &&  option.isOptional()  ||  separator.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isOptional()  ||  separator.equals(option.getName()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isOptional()  ||  separator.equals(option.getName()))  {	  if(!outer    &&    option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
403	[BUG]  [BUGGY]  if(separator  ||  separator  &&  option.optional)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator  ||  separator  &&  option.optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator  ||  separator  &&  option.optional)  {	  if(separator    ||    outer    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
404	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  2);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.get(separator  -  2);	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
405	[BUG]  [BUGGY]  if(separator!=  null  &&  separator  &&!optional)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(separator!=  null  &&  separator  &&!optional)  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(separator!=  null  &&  separator  &&!optional)  {	  if(separator    &&!optional)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
406	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.next();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)optionMap.next();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)option.next();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
407	[BUG]  [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.peek();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.peek();  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	SimpleAnonymousOption  option  =(SimpleAnonymousOption)this.anonymous.peek();	  SimpleAnonymousOption    option    =(SimpleAnonymousOption)this.anonymous.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
408	[BUG]  [BUGGY]  if(expanded  &&  option.optional  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(expanded  &&  option.optional  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(expanded  &&  option.optional  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(expanded    &&    option.optional)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
409	[BUG]  [BUGGY]  if(!outer  &&  option.isSeparator()  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isSeparator()  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isSeparator()  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
410	[BUG]  [BUGGY]  if(!outer  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(!outer  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(!outer  &&  option.isSeparator()  ||  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(!outer    &&    option.isSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
411	[BUG]  [BUGGY]  if(option.isOptional()  &&  separator.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  separator.equals(option.getName()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  separator.equals(option.getName()))  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
412	[BUG]  [BUGGY]  if(option.isOptional()  ||  separator.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  ||  separator.equals(option.getName()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  ||  separator.equals(option.getName()))  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
413	[BUG]  [BUGGY]  if(option.isOptional()  &&  separator.equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  if(option.isOptional()  &&  separator.equals(option.getDescription()))  {  [BUGGY]      buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	if(option.isOptional()  &&  separator.equals(option.getDescription()))  {	  if(option.isOptional())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
414	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }      [BUGGY]  Option  option  =  options.getOption(null);  [BUGGY]      if  (optional  &&  !outer)  {  buffer.append(']');  }  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	Option  option  =  options.getOption(null);	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
