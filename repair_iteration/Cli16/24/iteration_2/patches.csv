bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings!=  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings!=  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
6	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  prefix);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  prefix);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
7	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(separator,  childSettings);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  childSettings);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
8	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefix,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
10	[BUG]  [BUGGY]  if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
11	[BUG]  [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  childSettings);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  parent);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()!=  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()!=  maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()!=  maximum);	  Preconditions.checkArgument(childSettings.size()    >=    minimum);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  i.clear();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.clear();  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.clear();	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "*   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains( "*   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains( "*   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "*   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( ".* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( ".* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( ".* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "*   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  2);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefixes);	  Option    option    =    optionMap.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
23	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  name))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  name))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  name))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    separator))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
24	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings.size()  >  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings.size()  >  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    separator))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
25	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  parent))  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  parent))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  parent))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    separator))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  ==  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  ==  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  <  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  <  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);	  Preconditions.checkState(childSettings.size()    >    minimum);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
34	[BUG]  [BUGGY]  if(childSettings!=  null  &&!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  &&!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  &&!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  children))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  children))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  children))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.size()  ==  maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null  ||  childSettings.size()  ==  maximum);	  Preconditions.checkState(childSettings!=    null);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(childSettings  >=  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings  >=  null);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings  >=  null);	  Preconditions.checkState(childSettings!=    null);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(prefix);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(prefix);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
40	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(separator,  buffer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
41	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this.prefixes);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(this.prefixes);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(this.prefixes);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings  ==  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)||  childSettings  ==  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
46	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefixes,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
47	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefix,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
48	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  minimum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    <    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
49	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
50	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
51	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  2);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null,  childSettings.size()  >  maximum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null,  childSettings.size()  >  maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null,  childSettings.size()  >  maximum);	  Preconditions.checkState(childSettings    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!children.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  buffer.append('  ');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append('  ');  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append('  ');	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
59	[BUG]  [BUGGY]  buffer.append( ": ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( ": ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( ": ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
61	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
62	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefixes);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
63	[BUG]  [BUGGY]  Option  option  =  this.prefixes.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  this.prefixes.getOption(optionMap);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  this.prefixes.getOption(optionMap);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefix,  this.maximum);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()!=  minimum);	  Preconditions.checkState(childSettings.size()!=    maximum);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  parent));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  name));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  name));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  name));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
70	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >=    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()!=  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()!=  minimum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()!=  minimum);	  Preconditions.checkArgument(childSettings.size()    >=    maximum);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
72	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
73	[BUG]  [BUGGY]  if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
74	[BUG]  [BUGGY]  if(children  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(children  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(children  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
75	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  ==  minimum  +  1);	  Preconditions.checkArgument(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  +  2);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  ==  maximum  +  2);	  Preconditions.checkArgument(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  -  1));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  -  1));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  -  1));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings.size()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  +  1));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  +  1));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()  +  1));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings.size()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
80	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption( "option ",  separator);	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
81	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "option ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption( "option ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption( "option ");	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  Separator.NONE);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  Separator.NONE);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption( "option ",  Separator.NONE);	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
83	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.size()  >  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.size()  >  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
84	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <  unknown> ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <  unknown> ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "  <  unknown> ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "    <       ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "    <       ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
88	[BUG]  [BUGGY]  buffer.append( "none ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "none ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "none ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
89	[BUG]  [BUGGY]  buffer.append( "  (null) ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  (null) ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  (null) ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "none ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "none ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "none ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "n   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "null ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "null ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "null ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "n   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "None ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "None ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "None ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "n   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
93	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  minimum  -  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  <  maximum  -  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    displaySettings.NONE;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.none;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.none;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.none;	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    displaySettings.NONE;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  <  minimum);	  Preconditions.checkState(childSettings.size()    <    maximum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
103	[BUG]  [BUGGY]  if(childSettings  ==  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(childSettings!=    null    &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
104	[BUG]  [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(childSettings!=    null    &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
105	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
106	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)||  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
107	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
108	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)&&  childSettings.size()  >  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL)&&  childSettings.size()  >  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  1);	  Preconditions.checkState(childSettings.size()    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  2);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  2);	  Preconditions.checkState(childSettings.size()    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()!=  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()!=  1);	  Preconditions.checkState(childSettings.size()    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
112	[BUG]  [BUGGY]  buffer.append( "  - ",  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  - ",  separator);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  - ",  separator);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings.contains(   "       ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
114	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
115	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  buffer)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  minimum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  minimum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  <  minimum);	  Preconditions.checkArgument(childSettings.size()    <    maximum);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  buffer.append( "  (none) ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  (none) ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  (none) ");	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  minimum  +  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum  +  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  <  maximum  +  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  2);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  maximum  +  2);	  Preconditions.checkArgument(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
121	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
122	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
123	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
124	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL)	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
125	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
126	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(parent);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(parent);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(parent);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
127	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
128	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  childSettings);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this,  childSettings);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  childSettings);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
129	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  parent);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this,  parent);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  parent);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
130	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  name);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  >>  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  >>  illegal  start  of  expression  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  >>  illegal  start  of  expression	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  ==  illegal  start  of  expression  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  ==  illegal  start  of  expression	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP!=  illegal  start  of  expression  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP!=  illegal  start  of  expression	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  -  1);	  Preconditions.checkState(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  -  1);	  Preconditions.checkState(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
137	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
138	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes,  buffer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefixes,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_EXPANDED));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_EXPANDED));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
140	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  DisplaySetting.NONE)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  DisplaySetting.NONE)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  DisplaySetting.NONE)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings  ==  null  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
143	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DIS	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
145	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefix  +  separator);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
146	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  ==  maximum  -  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  maximum  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >=  maximum  -  1);	  Preconditions.checkArgument(childSettings.size()    >    maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
148	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >=  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >=  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >=  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
149	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.option);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
150	[BUG]  [BUGGY]  buffer.append( "  - "  +  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  - "  +  separator);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  - "  +  separator);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
151	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
152	[BUG]  [BUGGY]  buffer.append( "  if(expanded)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  if(expanded)  {  buffer.append( "  ( ");  }  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  if(expanded)  {  buffer.append( "  ( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
154	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  ==  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  ==  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >=  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >=  maximum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >=  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
156	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(arg,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  outer));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator  +  1));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    separator));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null  &&  childSettings.size()  >  maximum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null  &&  childSettings.size()  >  maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null  &&  childSettings.size()  >  maximum);	  Preconditions.checkState(childSettings!=    null);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
160	[BUG]  [BUGGY]  if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
161	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [Delete]  illegal  start  of  expression  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [Delete]  illegal  start  of  expression	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
163	[BUG]  [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "- ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "- ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "- ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkArgument(childSettings.contains(   "n   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
165	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "opt ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption( "opt ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption( "opt ");	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
166	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings!=  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings!=  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    separator))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
167	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings  ==  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator)&&  childSettings  ==  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    separator))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
168	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  childSettings  =  DisplaySetting.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP));  childSettings  =  DisplaySetting.NONE;	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
169	[BUG]  [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {	  if(childSettings    ==    null    ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
170	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
171	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
172	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  childSettings  =  DisplaySetting.NONE;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  childSettings  =  DisplaySetting.NONE;	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(this.prefix);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(this.prefix);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
174	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
175	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_UNKNOWN))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_UNKNOWN))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_UNKNOWN))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
176	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator,  childSettings);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator!=  null);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator  ==  null);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
180	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
181	[BUG]  [BUGGY]  i.remove(childSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.remove(childSettings);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.remove(childSettings);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
182	[BUG]  [BUGGY]  i.set(buffer,  buffer.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.set(buffer,  buffer.length()  -  1);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.set(buffer,  buffer.length()  -  1);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  i.remove(childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.remove(childSettings.size()  -  1);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.remove(childSettings.size()  -  1);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
184	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
185	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
186	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    displaySettings.NONE;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
188	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  minimum)  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  <  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
189	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  expanded);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  expanded);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  expanded);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
190	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),    separator);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
191	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( ", ");  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( ", ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
192	[BUG]  [BUGGY]  i.set(prefix,  childSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.set(prefix,  childSettings);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.set(prefix,  childSettings);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
193	[BUG]  [BUGGY]  i.set(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.set(prefix,  separator);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.set(prefix,  separator);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
194	[BUG]  [BUGGY]  i.set(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  i.set(prefix,  buffer);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.set(prefix,  buffer);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
195	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(separator,  comp);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
196	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)  ==  'n')  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)  ==  'n')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings)||    buffer.charAt(buffer.length()    -    1)!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));	  Preconditions.checkArgument(childSettings.contains(   "    <       ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
198	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {	  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkState(childSettings  ==  null  ||  childSettings.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings  ==  null  ||  childSettings.size()  ==  maximum);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings  ==  null  ||  childSettings.size()  ==  maximum);	  Preconditions.checkState(childSettings    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
200	[BUG]  [BUGGY]  buffer.append( "  - ").append(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append( "  - ").append(separator);  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  - ").append(separator);	  buffer.append(   "    -   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings));	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
203	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
204	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefix,  separator);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
205	[BUG]  [BUGGY]  buffer.append(')');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  buffer.append(')');  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append(')');	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
206	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(comp,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
207	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  outer);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
208	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  arg);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings!=  null,  childSettings.size());  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null,  childSettings.size());	  Preconditions.checkState(childSettings!=    null);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
210	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
211	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
212	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL,  childSettings))  {  [BUGGY]      childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
213	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  }	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings;	  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));	  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
216	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
