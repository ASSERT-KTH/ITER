bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  minimum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  1);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  <  maximum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  -  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  -  1);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings!=  null  &&!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  maximum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)&&  childSettings.size()  >  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings!=  null);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings!=  null);	      Preconditions.checkNotNull(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(childSettings  ==  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings  ==  null);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings  ==  null);	      Preconditions.checkNotNull(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings  ==  null)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings  ==  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  minimum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  ==  minimum);	      Preconditions.checkArgument(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  minimum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >=  minimum);	      Preconditions.checkArgument(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  displaySettings.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  minimum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  minimum);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  <  maximum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  <  maximum);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  maximum  +  1);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >  maximum  -  1);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  buffer.append( "n ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  buffer.append( "n ");  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "n ");	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings.size()  >  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  separator))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE)&&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()!=  maximum);	      Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  >=  maximum);	      Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings!=  null)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings!=  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  minimum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  minimum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  maximum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  <  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  maximum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  ==  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "n ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(   "   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains( "* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "* ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(   "   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.contains( "   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains( "   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(   "   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings.size()));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  1);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(prefix);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  buffer);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionsMap.getOption(separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(arg);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  buffer.append( "  ( ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  buffer.append( "  ( ");  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  ( ");	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  buffer.append( "   ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  buffer.append( "   ");  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "   ");	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  buffer.append( "  - ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  buffer.append( "  - ");  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append( "  - ");	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  >=  null)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  >=  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings!=  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR)&&  childSettings  ==  null)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL));  childSettings  =  DisplaySetting.NONE;	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  maximum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  >=  maximum);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  >=  maximum);	      Preconditions.checkArgument(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  maximum)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  maximum)  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >=  maximum)  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.size()  ==  maximum  +  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.size()  ==  maximum  +  1);	      Preconditions.checkArgument(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains( "  <   ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	      Preconditions.checkArgument(childSettings.contains(   "   ")||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings)||  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this.prefix);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  1);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  1);	      Preconditions.checkNotNull(childSettings);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption(this,  separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  buffer.append(separator);  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	buffer.append(separator);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  i.remove();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  i.remove();  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	i.remove();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Option  option  =  optionMap.getOption( "option ");	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    childSettings.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  separator));	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED),  separator);	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]    childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(childSettings  ==  null  ||!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,    childSettings))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP  [BUGGY]    if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXP	      Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));    childSettings    =    DisplaySetting.NONE;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
