bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  maximum)  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings.size()  >  maximum)  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.NONE))  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	  	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
4	[BUG]  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  maximum);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkState(childSettings.size()  ==  maximum);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
5	[BUG]  [BUGGY]    Preconditions.checkState(childSettings.size()  >  maximum);  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkState(childSettings.size()  >  maximum);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkState(childSettings.size()  >  maximum);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
6	[BUG]  [BUGGY]    Preconditions.checkArgument(childSettings.size()  >  maximum);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkArgument(childSettings.size()  >  maximum);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkArgument(childSettings.size()  >  maximum);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
7	[BUG]  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  minimum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  minimum);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkState(childSettings.size()  ==  minimum);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
8	[BUG]  [BUGGY]    Preconditions.checkNotNull(childSettings);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkNotNull(childSettings);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkNotNull(childSettings);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
9	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings!=  null)  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings!=  null)  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
10	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  ==  null)  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  childSettings  ==  null)  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
11	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR))  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
12	[BUG]  [BUGGY]    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));		non-compiled	[CE]  illegal  start  of  expression	48	None	add
13	[BUG]  [BUGGY]    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkArgument(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  childSettings  =  DisplaySetting.NONE;		non-compiled	[CE]  illegal  start  of  expression	48	None	add
14	[BUG]  [BUGGY]    Preconditions.checkArgument(childSettings.contains( " ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkArgument(childSettings.contains( " ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkArgument(childSettings.contains( " ")||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));		non-compiled	[CE]  illegal  start  of  expression	48	None	add
15	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Option  option  =  optionMap.getOption(separator);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
16	[BUG]  [BUGGY]    Preconditions.checkArgument(childSettings.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]    Preconditions.checkArgument(childSettings.size()  ==  maximum);  [BUGGY]  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	    Preconditions.checkArgument(childSettings.size()  ==  maximum);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
17	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED,  childSettings))  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append(name);  }  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }  final  List  list;  if  (comp  ==  null)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  childSettings.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
