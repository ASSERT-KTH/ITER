bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); [FE] -h)]> [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	295	295	7	replace	
2	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { [BUGGY] [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	295	295	7	add	
3	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	296	296	7	replace	
4	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	296	296	7	add	
5	[BUG] [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); [FE] -h)]> [CONTEXT] final String separator) { [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY]  final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	302	302	7	replace	
6	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String separator) { [BUGGY] [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	302	302	7	add	
7	[BUG] [BUGGY] final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY] final boolean optional =   (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); [BUGGY] (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	304	305	7	replace	
8	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY] [BUGGY] final boolean optional =   (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	304	305	7	add	
9	[BUG] [BUGGY] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); [BUGGY] final boolean expanded =   (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	307	308	7	replace	
10	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); [BUGGY] [BUGGY] final boolean expanded =   (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	307	308	7	add	
11	[BUG] [BUGGY] final boolean named = !expanded ||  ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] final boolean named =   !expanded ||      ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	310	312	7	replace	
12	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] [BUGGY] final boolean named =   !expanded ||      ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	310	312	7	add	
13	[BUG] [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [FE] -h)]> [CONTEXT] final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY]  final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	314	314	7	replace	
14	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean optional = (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	314	314	7	add	
15	[BUG] [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [FE] -h)]> [CONTEXT] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY]  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	316	316	7	replace	
16	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY] [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	316	316	7	add	
17	[BUG] [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [FE] -h)]> [CONTEXT] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY]  final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	318	318	7	replace	
18	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	318	318	7	add	
19	[BUG] [BUGGY] final boolean both = named && expanded; [FE] -h)]> [CONTEXT] final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] final boolean both = named && expanded; [BUGGY]  if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	
20	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] [BUGGY] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	add	
21	[BUG] [BUGGY] if (optional) { [FE] -h)]> [CONTEXT] ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [BUGGY] if (optional) { [BUGGY] buffer.append('['); } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	322	322	7	replace	
22	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [BUGGY] [BUGGY] if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	322	322	7	add	
23	[BUG] [BUGGY] if (named) { [FE] -h)]> [CONTEXT] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [BUGGY] if (named) { [BUGGY] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings;  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	
24	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [BUGGY] [BUGGY] if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings;  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	add	
25	[BUG] [BUGGY] if (both) { [FE] -h)]> [CONTEXT] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [BUGGY] if (both) { [BUGGY] buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	
26	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [BUGGY] [BUGGY] if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	add	
27	[BUG] [BUGGY] if (expanded) { [FE] -h)]> [CONTEXT] } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [BUGGY] if (expanded) { [BUGGY] final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }   [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	
28	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [BUGGY] [BUGGY] if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }   [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	add	
29	[BUG] [BUGGY] if (both) { [FE] -h)]> [CONTEXT]  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [BUGGY] if (both) { [BUGGY] buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	replace	
30	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [BUGGY] [BUGGY] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	370	370	7	add	
31	[BUG] [BUGGY] if (optional && outer) { [FE] -h)]> [CONTEXT] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } [BUGGY] if (optional && outer) { [BUGGY] buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	replace	
32	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } [BUGGY] [BUGGY] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	374	374	7	add	
33	[BUG] [BUGGY] if (arguments) { [FE] -h)]> [CONTEXT] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } [BUGGY] if (arguments) { [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	
34	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } [BUGGY] [BUGGY] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	add	
35	[BUG] [BUGGY] if (optional && !outer) { [FE] -h)]> [CONTEXT] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [BUGGY] if (optional && !outer) { [BUGGY] buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	replace	
36	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [BUGGY] [BUGGY] if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	387	387	7	add	
37	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	
38	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	add	
39	[BUG] [BUGGY] final StringBuffer buffer = new StringBuffer(); [FE] -h)]> [CONTEXT] public String toString() { [BUGGY] final StringBuffer buffer = new StringBuffer(); [BUGGY] appendUsage(buffer, DisplaySetting.ALL, null); return buffer.toString(); } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	61	61	7	replace	
40	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public String toString() { [BUGGY] [BUGGY] final StringBuffer buffer = new StringBuffer(); appendUsage(buffer, DisplaySetting.ALL, null); return buffer.toString(); } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	61	61	7	add	
41	[BUG] [BUGGY] appendUsage(buffer, DisplaySetting.ALL, null); [FE] -h)]> [CONTEXT] public String toString() { final StringBuffer buffer = new StringBuffer(); [BUGGY] appendUsage(buffer, DisplaySetting.ALL, null); [BUGGY]  return buffer.toString(); } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	62	62	7	replace	
42	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public String toString() { final StringBuffer buffer = new StringBuffer(); [BUGGY] [BUGGY] appendUsage(buffer, DisplaySetting.ALL, null); return buffer.toString(); } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	62	62	7	add	
43	[BUG] [BUGGY] return buffer.toString(); [FE] -h)]> [CONTEXT] public String toString() { final StringBuffer buffer = new StringBuffer(); appendUsage(buffer, DisplaySetting.ALL, null); [BUGGY] return buffer.toString(); [BUGGY] } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	64	64	7	replace	
44	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public String toString() { final StringBuffer buffer = new StringBuffer(); appendUsage(buffer, DisplaySetting.ALL, null); [BUGGY] [BUGGY] return buffer.toString(); } [CLASS] OptionImpl [METHOD] toString [RETURN_TYPE] String  [VARIABLES] int id StringBuffer buffer boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.7559289460184544	64	64	7	add	
45	[BUG] [BUGGY] buffer.append('['); [FE] -h)]> [CONTEXT] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { [BUGGY] buffer.append('['); [BUGGY] } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	replace	
46	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { [BUGGY] [BUGGY] buffer.append('['); } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	323	323	7	add	
47	[BUG] [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [FE] -h)]> [CONTEXT] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [BUGGY] childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	replace	
48	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; [BUGGY] [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	337	337	7	add	
49	[BUG] [BUGGY] childSettings = new HashSet(helpSettingsCopy); [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { [BUGGY] childSettings = new HashSet(helpSettingsCopy); [BUGGY] childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	replace	
50	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { [BUGGY] [BUGGY] childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	340	340	7	add	
51	[BUG] [BUGGY] childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [BUGGY] childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	replace	
52	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [BUGGY] [BUGGY] childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	341	341	7	add	
53	[BUG] [BUGGY] if (comp == null) { [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; [BUGGY] if (comp == null) { [BUGGY]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	347	347	7	replace	
54	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; [BUGGY] [BUGGY] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	347	347	7	add	
55	[BUG] [BUGGY] list = options; [FE] -h)]> [CONTEXT] } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [BUGGY] list = options; [BUGGY] } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	349	349	7	replace	
56	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [BUGGY] [BUGGY] list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	349	349	7	add	
57	[BUG] [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	357	357	7	replace	
58	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  [BUGGY] [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	357	357	7	add	
59	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]   option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	358	358	7	replace	
60	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	358	358	7	add	
61	[BUG] [BUGGY] option.appendUsage(buffer, childSettings, comp); [FE] -h)]> [CONTEXT]  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] option.appendUsage(buffer, childSettings, comp); [BUGGY]   if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	361	361	7	replace	
62	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] [BUGGY] option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	361	361	7	add	
63	[BUG] [BUGGY] if (i.hasNext()) { [FE] -h)]> [CONTEXT] }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  [BUGGY] if (i.hasNext()) { [BUGGY] buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	364	364	7	replace	
64	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  [BUGGY] [BUGGY] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	364	364	7	add	
65	[BUG] [BUGGY] buffer.append(separator); [FE] -h)]> [CONTEXT]  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { [BUGGY] buffer.append(separator); [BUGGY] } } } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	365	365	7	replace	
66	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { [BUGGY] [BUGGY] buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	365	365	7	add	
67	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } [BUGGY] } [BUGGY] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	367	367	7	replace	
68	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } [BUGGY] [BUGGY] } } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	367	367	7	add	
69	[BUG] [BUGGY] buffer.append(']'); [FE] -h)]> [CONTEXT] buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [BUGGY] buffer.append(']'); [BUGGY] } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	375	375	7	replace	
70	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [BUGGY] [BUGGY] buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	375	375	7	add	
71	[BUG] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	379	379	7	replace	
72	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { [BUGGY] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	379	379	7	add	
73	[BUG] [BUGGY] buffer.append(' '); [FE] -h)]> [CONTEXT] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] buffer.append(' '); [BUGGY]  final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	380	380	7	replace	
74	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] [BUGGY] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	380	380	7	add	
75	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	382	382	7	replace	
76	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	382	382	7	add	
77	[BUG] [BUGGY] option.appendUsage(buffer, helpSettingsCopy, comp); [FE] -h)]> [CONTEXT] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); [BUGGY] option.appendUsage(buffer, helpSettingsCopy, comp); [BUGGY] } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	383	383	7	replace	
78	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	383	383	7	add	
79	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); [BUGGY] } [BUGGY] } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	384	384	7	replace	
80	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); [BUGGY] [BUGGY] } } if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.7559289460184544	384	384	7	add	
81	[BUG] [BUGGY] if (arguments.hasNext()) { [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { [BUGGY] if (arguments.hasNext()) { [BUGGY] final String argument = (String) arguments.next(); arguments.previous(); return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	50	50	7	replace	
82	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { [BUGGY] [BUGGY] if (arguments.hasNext()) { final String argument = (String) arguments.next(); arguments.previous(); return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	50	50	7	add	
83	[BUG] [BUGGY] final String argument = (String) arguments.next(); [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { [BUGGY] final String argument = (String) arguments.next(); [BUGGY] arguments.previous(); return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	51	51	7	replace	
84	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { [BUGGY] [BUGGY] final String argument = (String) arguments.next(); arguments.previous(); return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	51	51	7	add	
85	[BUG] [BUGGY] arguments.previous(); [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); [BUGGY] arguments.previous(); [BUGGY]  return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	52	52	7	replace	
86	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); [BUGGY] [BUGGY] arguments.previous(); return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	52	52	7	add	
87	[BUG] [BUGGY] return canProcess(commandLine, argument); [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); arguments.previous(); [BUGGY] return canProcess(commandLine, argument); [BUGGY] } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	54	54	7	replace	
88	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); arguments.previous(); [BUGGY] [BUGGY] return canProcess(commandLine, argument); } else { return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	54	54	7	add	
89	[BUG] [BUGGY] return false; [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); arguments.previous(); return canProcess(commandLine, argument); } else { [BUGGY] return false; [BUGGY] } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	56	56	7	replace	
90	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) { if (arguments.hasNext()) { final String argument = (String) arguments.next(); arguments.previous(); return canProcess(commandLine, argument); } else { [BUGGY] [BUGGY] return false; } } [CLASS] OptionImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] WriteableCommandLine commandLine boolean required String argument ListIterator arguments int id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	56	56	7	add	
91	[BUG] [BUGGY] return required; [FE] -h)]> [CONTEXT] public boolean isRequired() { [BUGGY] return required; [BUGGY] } [CLASS] OptionImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	121	121	7	replace	
92	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean isRequired() { [BUGGY] [BUGGY] return required; } [CLASS] OptionImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	121	121	7	add	
94	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return; } [BUGGY] } [BUGGY]  final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	155	155	7	replace	
95	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return; } [BUGGY] [BUGGY] } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.5916079783099616	155	155	7	add	
96	[BUG] [BUGGY] if (arg == null) { [FE] -h)]> [CONTEXT] final String arg) { [BUGGY] if (arg == null) { [BUGGY] return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	115	115	7	replace	
97	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String arg) { [BUGGY] [BUGGY] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	115	115	7	add	
98	[BUG] [BUGGY] if (optionMap.containsKey(arg)) { [FE] -h)]> [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] if (optionMap.containsKey(arg)) { [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	120	120	7	replace	
99	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] [BUGGY] if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	120	120	7	add	
100	[BUG] [BUGGY] return true; [FE] -h)]> [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] return true; [BUGGY] }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	121	121	7	replace	
101	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	121	121	7	add	
102	[BUG] [BUGGY] String previous = null; [FE] -h)]> [CONTEXT] throws OptionException { [BUGGY] String previous = null; [BUGGY]   while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	159	159	7	replace	
103	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException { [BUGGY] [BUGGY] String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	159	159	7	add	
104	[BUG] [BUGGY] while (arguments.hasNext()) { [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  [BUGGY] while (arguments.hasNext()) { [BUGGY]  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	162	162	7	replace	
105	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  [BUGGY] [BUGGY] while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	162	162	7	add	
106	[BUG] [BUGGY] final String arg = (String) arguments.next(); [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] final String arg = (String) arguments.next(); [BUGGY]   if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	164	164	7	replace	
107	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] [BUGGY] final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	164	164	7	add	
108	[BUG] [BUGGY] if (arg == previous) { [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] if (arg == previous) { [BUGGY]  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	167	167	7	replace	
109	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] [BUGGY] if (arg == previous) {  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	167	167	7	add	
110	[BUG] [BUGGY] previous = arg; [FE] -h)]> [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] previous = arg; [BUGGY]  final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	175	175	7	replace	
111	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] [BUGGY] previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	175	175	7	add	
112	[BUG] [BUGGY] final Option opt = (Option) optionMap.get(arg); [FE] -h)]> [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] final Option opt = (Option) optionMap.get(arg); [BUGGY]   if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	177	177	7	replace	
113	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] [BUGGY] final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	177	177	7	add	
114	[BUG] [BUGGY] if (opt != null) { [FE] -h)]> [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] if (opt != null) { [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	180	180	7	replace	
115	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] [BUGGY] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	180	180	7	add	
116	[BUG] [BUGGY] arguments.previous(); [FE] -h)]> [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] arguments.previous(); [BUGGY] opt.process(commandLine, arguments); }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	181	181	7	replace	
117	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	181	181	7	add	
118	[BUG] [BUGGY] opt.process(commandLine, arguments); [FE] -h)]> [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] opt.process(commandLine, arguments); [BUGGY] }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	182	182	7	replace	
119	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] [BUGGY] opt.process(commandLine, arguments); }  else {   if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	182	182	7	add	
122	[BUG] [BUGGY] int present = 0; [FE] -h)]> [CONTEXT] throws OptionException {  [BUGGY] int present = 0; [BUGGY]   Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	240	240	7	replace	
123	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException {  [BUGGY] [BUGGY] int present = 0;  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	240	240	7	add	
124	[BUG] [BUGGY] Option unexpected = null; [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  [BUGGY] Option unexpected = null; [BUGGY]  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	243	243	7	replace	
125	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  [BUGGY] [BUGGY] Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	243	243	7	add	
126	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  Option unexpected = null; [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option;  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	245	245	7	replace	
127	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  Option unexpected = null; [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option;  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	245	245	7	add	
128	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]   boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	246	246	7	replace	
129	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throws OptionException {  int present = 0;  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	246	246	7	add	
130	[BUG] [BUGGY] boolean validate = option.isRequired() || option instanceof Group; [FE] -h)]> [CONTEXT]  int present = 0;  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] boolean validate = option.isRequired() || option instanceof Group; [BUGGY]   if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	249	249	7	replace	
131	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  int present = 0;  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] [BUGGY] boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	249	249	7	add	
132	[BUG] [BUGGY] if (commandLine.hasOption(option)) { [FE] -h)]> [CONTEXT]  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  [BUGGY] if (commandLine.hasOption(option)) { [BUGGY] if (++present > maximum) { unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	252	252	7	replace	
133	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  [BUGGY] [BUGGY] if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	252	252	7	add	
134	[BUG] [BUGGY] if (++present > maximum) { [FE] -h)]> [CONTEXT] Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { [BUGGY] if (++present > maximum) { [BUGGY] unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	253	253	7	replace	
135	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] Option unexpected = null; for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next();  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { [BUGGY] [BUGGY] if (++present > maximum) { unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	253	253	7	add	
136	[BUG] [BUGGY] validate = true; [FE] -h)]> [CONTEXT]  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } [BUGGY] validate = true; [BUGGY] } if (validate) { option.validate(commandLine); } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	258	258	7	replace	
137	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  boolean validate = option.isRequired() || option instanceof Group;  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } [BUGGY] [BUGGY] validate = true; } if (validate) { option.validate(commandLine); } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	258	258	7	add	
138	[BUG] [BUGGY] if (validate) { [FE] -h)]> [CONTEXT]  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } [BUGGY] if (validate) { [BUGGY] option.validate(commandLine); } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	261	261	7	replace	
139	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } [BUGGY] [BUGGY] if (validate) { option.validate(commandLine); } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	261	261	7	add	
140	[BUG] [BUGGY] option.validate(commandLine); [FE] -h)]> [CONTEXT] if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } if (validate) { [BUGGY] option.validate(commandLine); [BUGGY] } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }   [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	262	262	7	replace	
141	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (commandLine.hasOption(option)) { if (++present > maximum) { unexpected = option; break; } validate = true; } if (validate) { [BUGGY] [BUGGY] option.validate(commandLine); } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }   [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	262	262	7	add	
142	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); } [BUGGY] } [BUGGY]   if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	264	264	7	replace	
143	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] unexpected = option; break; } validate = true; } if (validate) { option.validate(commandLine); } [BUGGY] [BUGGY] }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	264	264	7	add	
144	[BUG] [BUGGY] if (unexpected != null) { [FE] -h)]> [CONTEXT] } validate = true; } if (validate) { option.validate(commandLine); } }  [BUGGY] if (unexpected != null) { [BUGGY] throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }   [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	267	267	7	replace	
145	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } validate = true; } if (validate) { option.validate(commandLine); } }  [BUGGY] [BUGGY] if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }   [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	267	267	7	add	
146	[BUG] [BUGGY] if (present < minimum) { [FE] -h)]> [CONTEXT] } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  [BUGGY] if (present < minimum) { [BUGGY] throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	273	273	7	replace	
147	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  [BUGGY] [BUGGY] if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	273	273	7	add	
148	[BUG] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	278	278	7	replace	
149	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  [BUGGY] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	278	278	7	add	
150	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT]  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	282	282	7	replace	
151	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	282	282	7	add	
152	[BUG] [BUGGY] super.defaults(commandLine); [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { [BUGGY] super.defaults(commandLine); [BUGGY]  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	477	477	7	replace	
153	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { [BUGGY] [BUGGY] super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	477	477	7	add	
154	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	479	479	7	replace	
155	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	479	479	7	add	
156	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	480	480	7	replace	
157	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	480	480	7	add	
158	[BUG] [BUGGY] option.defaults(commandLine); [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); [BUGGY] } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	481	481	7	replace	
159	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	481	481	7	add	
160	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] } [BUGGY]  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	482	482	7	replace	
161	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] [BUGGY] } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	482	482	7	add	
162	[BUG] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	484	484	7	replace	
163	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	484	484	7	add	
164	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	488	488	7	replace	
165	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5916079783099616	488	488	7	add	
166	[BUG] [BUGGY] List valueList = (List) values.get(option); [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  [BUGGY] List valueList = (List) values.get(option); [BUGGY]   if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	145	145	7	replace	
167	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  [BUGGY] [BUGGY] List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	145	145	7	add	
168	[BUG] [BUGGY] if (valueList == null) { [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  [BUGGY] if (valueList == null) { [BUGGY] valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	148	148	7	replace	
169	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  [BUGGY] [BUGGY] if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	148	148	7	add	
170	[BUG] [BUGGY] valueList = Collections.EMPTY_LIST; [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { [BUGGY] valueList = Collections.EMPTY_LIST; [BUGGY] } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	149	149	7	replace	
171	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { [BUGGY] [BUGGY] valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	149	149	7	add	
172	[BUG] [BUGGY] return valueList; [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } [BUGGY] return valueList; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	152	152	7	replace	
173	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } [BUGGY] [BUGGY] return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	152	152	7	add	
174	[BUG] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	215	215	7	replace	
175	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { [BUGGY] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	215	215	7	add	
176	[BUG] [BUGGY] final String prefix = (String) i.next(); [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] final String prefix = (String) i.next(); [BUGGY]  if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	216	216	7	replace	
177	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	216	216	7	add	
178	[BUG] [BUGGY] if (trigger.startsWith(prefix)) { [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); [BUGGY] if (trigger.startsWith(prefix)) { [BUGGY] return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	218	218	7	replace	
179	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); [BUGGY] [BUGGY] if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	218	218	7	add	
180	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } [BUGGY] } [BUGGY]  return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	221	221	7	replace	
181	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } [BUGGY] [BUGGY] } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	221	221	7	add	
182	[BUG] [BUGGY] return false; [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } [BUGGY] return false; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	223	223	7	replace	
183	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } [BUGGY] [BUGGY] return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	223	223	7	add	
184	[BUG] [BUGGY] if (defaults == null) { [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { [BUGGY] if (defaults == null) { [BUGGY] defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	257	257	7	replace	
185	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { [BUGGY] [BUGGY] if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	257	257	7	add	
186	[BUG] [BUGGY] defaultValues.remove(option); [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { [BUGGY] defaultValues.remove(option); [BUGGY] } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	258	258	7	replace	
187	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { [BUGGY] [BUGGY] defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	258	258	7	add	
188	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	262	262	7	replace	
189	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5916079783099616	262	262	7	add	
190	[BUG] [BUGGY] return optionMap.keySet(); [FE] -h)]> [CONTEXT] public Set getTriggers() { [BUGGY] return optionMap.keySet(); [BUGGY] } [CLASS] GroupImpl [METHOD] getTriggers [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	153	153	7	replace	
191	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public Set getTriggers() { [BUGGY] [BUGGY] return optionMap.keySet(); } [CLASS] GroupImpl [METHOD] getTriggers [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	153	153	7	add	
192	[BUG] [BUGGY] return name; [FE] -h)]> [CONTEXT] public String getPreferredName() { [BUGGY] return name; [BUGGY] } [CLASS] GroupImpl [METHOD] getPreferredName [RETURN_TYPE] String  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name previous boolean int maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	285	285	7	replace	
193	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public String getPreferredName() { [BUGGY] [BUGGY] return name; } [CLASS] GroupImpl [METHOD] getPreferredName [RETURN_TYPE] String  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name previous boolean int maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	285	285	7	add	
194	[BUG] [BUGGY] return minimum; [FE] -h)]> [CONTEXT] public int getMinimum() { [BUGGY] return minimum; [BUGGY] } [CLASS] GroupImpl [METHOD] getMinimum [RETURN_TYPE] int  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	465	465	7	replace	
195	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int getMinimum() { [BUGGY] [BUGGY] return minimum; } [CLASS] GroupImpl [METHOD] getMinimum [RETURN_TYPE] int  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	465	465	7	add	
196	[BUG] [BUGGY] return getMinimum() > 0; [FE] -h)]> [CONTEXT] public boolean isRequired() { [BUGGY] return getMinimum() > 0; [BUGGY] } [CLASS] GroupImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	473	473	7	replace	
197	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean isRequired() { [BUGGY] [BUGGY] return getMinimum() > 0; } [CLASS] GroupImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5669467095138409	473	473	7	add	
198	[BUG] [BUGGY] throw new OptionException(this, ResourceConstants.MISSING_OPTION); [FE] -h)]> [CONTEXT] }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { [BUGGY] throw new OptionException(this, ResourceConstants.MISSING_OPTION); [BUGGY] }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5345224838248488	274	274	7	replace	
199	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }  if (unexpected != null) { throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN, unexpected.getPreferredName()); }  if (present < minimum) { [BUGGY] [BUGGY] throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5345224838248488	274	274	7	add	
200	[BUG] [BUGGY] buffer.append(name); [FE] -h)]> [CONTEXT] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [BUGGY] buffer.append(name); [BUGGY] } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5345224838248488	327	327	7	replace	
201	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [BUGGY] [BUGGY] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.5345224838248488	327	327	7	add	
202	[BUG] [BUGGY] return true; [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] return true; [BUGGY] } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5345224838248488	219	219	7	replace	
203	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean looksLikeOption(final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] [BUGGY] return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.5345224838248488	219	219	7	add	
204	[BUG] [BUGGY] final boolean present = options.contains(option); [FE] -h)]> [CONTEXT] public boolean hasOption(final Option option) { [BUGGY] final boolean present = options.contains(option); [BUGGY]  return present; } [CLASS] WriteableCommandLineImpl [METHOD] hasOption [RETURN_TYPE] boolean  Option option [VARIABLES] List arguments normalised options valueList Option option Set prefixes boolean present Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.47519096331149147	104	104	7	replace	
205	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean hasOption(final Option option) { [BUGGY] [BUGGY] final boolean present = options.contains(option); return present; } [CLASS] WriteableCommandLineImpl [METHOD] hasOption [RETURN_TYPE] boolean  Option option [VARIABLES] List arguments normalised options valueList Option option Set prefixes boolean present Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.47519096331149147	104	104	7	add	
206	[BUG] [BUGGY] return present; [FE] -h)]> [CONTEXT] public boolean hasOption(final Option option) { final boolean present = options.contains(option); [BUGGY] return present; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] hasOption [RETURN_TYPE] boolean  Option option [VARIABLES] List arguments normalised options valueList Option option Set prefixes boolean present Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.47519096331149147	106	106	7	replace	
207	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean hasOption(final Option option) { final boolean present = options.contains(option); [BUGGY] [BUGGY] return present; } [CLASS] WriteableCommandLineImpl [METHOD] hasOption [RETURN_TYPE] boolean  Option option [VARIABLES] List arguments normalised options valueList Option option Set prefixes boolean present Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.47519096331149147	106	106	7	add	
208	[BUG] [BUGGY] i.remove(); [FE] -h)]> [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { [BUGGY] i.remove(); [BUGGY] newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	94	94	7	replace	
209	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { [BUGGY] [BUGGY] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	94	94	7	add	
210	[BUG] [BUGGY] newAnonymous.add(option); [FE] -h)]> [CONTEXT]  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); [BUGGY] newAnonymous.add(option); [BUGGY] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	95	95	7	replace	
211	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); [BUGGY] [BUGGY] newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	95	95	7	add	
212	[BUG] [BUGGY] if (commandLine.looksLikeOption(arg)) { [FE] -h)]> [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] if (commandLine.looksLikeOption(arg)) { [BUGGY]  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	188	188	7	replace	
213	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] [BUGGY] if (commandLine.looksLikeOption(arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	188	188	7	add	
214	[BUG] [BUGGY] arguments.previous(); [FE] -h)]> [CONTEXT] if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous  else {  [BUGGY] arguments.previous(); [BUGGY]    if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	215	215	7	replace	
215	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous  else {  [BUGGY] [BUGGY] arguments.previous();   if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	215	215	7	add	
216	[BUG] [BUGGY] if (anonymous.isEmpty()) { [FE] -h)]> [CONTEXT] } } // [END argument may be anonymous  else {  arguments.previous();   [BUGGY] if (anonymous.isEmpty()) { [BUGGY] break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	219	219	7	replace	
217	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } } // [END argument may be anonymous  else {  arguments.previous();   [BUGGY] [BUGGY] if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	219	219	7	add	
218	[BUG] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] arguments.previous();   if (anonymous.isEmpty()) { break; }   [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	225	225	7	replace	
219	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] arguments.previous();   if (anonymous.isEmpty()) { break; }   [BUGGY] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	225	225	7	add	
220	[BUG] [BUGGY] final Argument argument = (Argument) i.next(); [FE] -h)]> [CONTEXT]   if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Argument argument = (Argument) i.next(); [BUGGY]  if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	226	226	7	replace	
221	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]   if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	226	226	7	add	
222	[BUG] [BUGGY] if (argument.canProcess(commandLine, arguments)) { [FE] -h)]> [CONTEXT]  if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); [BUGGY] if (argument.canProcess(commandLine, arguments)) { [BUGGY] argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	228	228	7	replace	
223	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); [BUGGY] [BUGGY] if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	228	228	7	add	
224	[BUG] [BUGGY] argument.process(commandLine, arguments); [FE] -h)]> [CONTEXT] if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { [BUGGY] argument.process(commandLine, arguments); [BUGGY] } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	229	229	7	replace	
225	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (anonymous.isEmpty()) { break; }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { [BUGGY] [BUGGY] argument.process(commandLine, arguments); } } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	229	229	7	add	
226	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } [BUGGY] } [BUGGY] } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	231	231	7	replace	
227	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }   for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Argument argument = (Argument) i.next(); if (argument.canProcess(commandLine, arguments)) { argument.process(commandLine, arguments); } [BUGGY] [BUGGY] } } // [END argument is NOT anonymous [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	231	231	7	add	
228	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	279	279	7	replace	
229	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] unexpected.getPreferredName()); }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	279	279	7	add	
230	[BUG] [BUGGY] option.validate(commandLine); [FE] -h)]> [CONTEXT] }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.validate(commandLine); [BUGGY] } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	280	280	7	replace	
231	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.validate(commandLine); } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	280	280	7	add	
232	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT]  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); [BUGGY] } [BUGGY] } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	281	281	7	replace	
233	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  if (present < minimum) { throw new OptionException(this, ResourceConstants.MISSING_OPTION); }  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.validate(commandLine); [BUGGY] [BUGGY] } } [CLASS] GroupImpl [METHOD] validate [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set newPrefixes prefixes triggers boolean validate SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous newAnonymous options Option option unexpected String arg description name previous int maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	281	281	7	add	
234	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	485	485	7	replace	
235	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	485	485	7	add	
236	[BUG] [BUGGY] option.defaults(commandLine); [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); [BUGGY] } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	486	486	7	replace	
237	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	486	486	7	add	
238	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] } [BUGGY] } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	487	487	7	replace	
239	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] [BUGGY] } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.4364357804719848	487	487	7	add	
240	[BUG] [BUGGY] addOption(option); [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { [BUGGY] addOption(option); [BUGGY] } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4193139346887673	79	79	7	replace	
241	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { [BUGGY] [BUGGY] addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4193139346887673	79	79	7	add	
242	[BUG] [BUGGY] List valueList = (List) values.get(option); [FE] -h)]> [CONTEXT] List defaultValues) {  [BUGGY] List valueList = (List) values.get(option); [BUGGY]   if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	116	116	7	replace	
243	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] List defaultValues) {  [BUGGY] [BUGGY] List valueList = (List) values.get(option);  if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	116	116	7	add	
244	[BUG] [BUGGY] if (defaultValues == null || defaultValues.isEmpty()) { [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  [BUGGY] if (defaultValues == null || defaultValues.isEmpty()) { [BUGGY] defaultValues = (List) this.defaultValues.get(option); }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	119	119	7	replace	
245	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  [BUGGY] [BUGGY] if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	119	119	7	add	
246	[BUG] [BUGGY] defaultValues = (List) this.defaultValues.get(option); [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  if (defaultValues == null || defaultValues.isEmpty()) { [BUGGY] defaultValues = (List) this.defaultValues.get(option); [BUGGY] }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   if (defaultValues.size() > valueList.size()) { [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	120	120	7	replace	
247	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  if (defaultValues == null || defaultValues.isEmpty()) { [BUGGY] [BUGGY] defaultValues = (List) this.defaultValues.get(option); }  if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   if (defaultValues.size() > valueList.size()) { [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	120	120	7	add	
248	[BUG] [BUGGY] if (defaultValues != null && !defaultValues.isEmpty()) { [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); }  [BUGGY] if (defaultValues != null && !defaultValues.isEmpty()) { [BUGGY] if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   if (defaultValues.size() > valueList.size()) {  valueList = new ArrayList(valueList); for (int i=valueList.size(); i<defaultValues.size(); i++) { valueList.add(defaultValues.get(i)); [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	124	124	7	replace	
249	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] List defaultValues) {  List valueList = (List) values.get(option);  if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); }  [BUGGY] [BUGGY] if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else {   if (defaultValues.size() > valueList.size()) {  valueList = new ArrayList(valueList); for (int i=valueList.size(); i<defaultValues.size(); i++) { valueList.add(defaultValues.get(i)); [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	124	124	7	add	
250	[BUG] [BUGGY] return valueList == null ? Collections.EMPTY_LIST : valueList; [FE] -h)]> [CONTEXT] if (defaultValues.size() > valueList.size()) {  valueList = new ArrayList(valueList); for (int i=valueList.size(); i<defaultValues.size(); i++) { valueList.add(defaultValues.get(i)); } } } } [BUGGY] return valueList == null ? Collections.EMPTY_LIST : valueList; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	140	140	7	replace	
251	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (defaultValues.size() > valueList.size()) {  valueList = new ArrayList(valueList); for (int i=valueList.size(); i<defaultValues.size(); i++) { valueList.add(defaultValues.get(i)); } } } } [BUGGY] [BUGGY] return valueList == null ? Collections.EMPTY_LIST : valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getValues [RETURN_TYPE] List  Option option List defaultValues [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values int i  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.4131969352706687	140	140	7	add	
252	[BUG] [BUGGY] return (Option) nameToOption.get(trigger); [FE] -h)]> [CONTEXT] public Option getOption(final String trigger) { [BUGGY] return (Option) nameToOption.get(trigger); [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] getOption [RETURN_TYPE] Option  String trigger [VARIABLES] List arguments normalised options valueList Set prefixes String trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.3741657386773941	110	110	7	replace	
253	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public Option getOption(final String trigger) { [BUGGY] [BUGGY] return (Option) nameToOption.get(trigger); } [CLASS] WriteableCommandLineImpl [METHOD] getOption [RETURN_TYPE] Option  String trigger [VARIABLES] List arguments normalised options valueList Set prefixes String trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.3741657386773941	110	110	7	add	
254	[BUG] [BUGGY] return Collections.unmodifiableList(options); [FE] -h)]> [CONTEXT] public List getOptions() { [BUGGY] return Collections.unmodifiableList(options); [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] getOptions [RETURN_TYPE] List  [VARIABLES] List arguments defaultValues normalised options valueList Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.3380617018914066	248	248	7	replace	
255	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public List getOptions() { [BUGGY] [BUGGY] return Collections.unmodifiableList(options); } [CLASS] WriteableCommandLineImpl [METHOD] getOptions [RETURN_TYPE] List  [VARIABLES] List arguments defaultValues normalised options valueList Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.3380617018914066	248	248	7	add	
256	[BUG] [BUGGY] if (thatObj instanceof OptionImpl) { [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { [BUGGY] if (thatObj instanceof OptionImpl) { [BUGGY] final OptionImpl that = (OptionImpl) thatObj; return (getId() == that.getId()) && equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	72	72	7	replace	
257	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { [BUGGY] [BUGGY] if (thatObj instanceof OptionImpl) { final OptionImpl that = (OptionImpl) thatObj; return (getId() == that.getId()) && equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	72	72	7	add	
258	[BUG] [BUGGY] final OptionImpl that = (OptionImpl) thatObj; [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { if (thatObj instanceof OptionImpl) { [BUGGY] final OptionImpl that = (OptionImpl) thatObj; [BUGGY]  return (getId() == that.getId()) && equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	73	73	7	replace	
259	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { if (thatObj instanceof OptionImpl) { [BUGGY] [BUGGY] final OptionImpl that = (OptionImpl) thatObj; return (getId() == that.getId()) && equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	73	73	7	add	
260	[BUG] [BUGGY] return (getId() == that.getId()) &&  equals(getPreferredName(), that.getPreferredName()) &&   equals(getDescription(), that.getDescription()) && [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { if (thatObj instanceof OptionImpl) { final OptionImpl that = (OptionImpl) thatObj; [BUGGY] return (getId() == that.getId()) &&     equals(getPreferredName(), that.getPreferredName()) &&          equals(getDescription(), that.getDescription()) && [BUGGY] equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	75	77	7	replace	
261	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public boolean equals(final Object thatObj) { if (thatObj instanceof OptionImpl) { final OptionImpl that = (OptionImpl) thatObj; [BUGGY] [BUGGY] return (getId() == that.getId()) &&     equals(getPreferredName(), that.getPreferredName()) &&          equals(getDescription(), that.getDescription()) && equals(getPreferredName(), that.getPreferredName()) && equals(getDescription(), that.getDescription()) && equals(getPrefixes(), that.getPrefixes()) && equals(getTriggers(), that.getTriggers()); } else { return false; } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object thatObj [VARIABLES] Object thatObj boolean required int id OptionImpl that  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	75	77	7	add	
262	[BUG] [BUGGY] if ((left == null) && (right == null)) { [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { [BUGGY] if ((left == null) && (right == null)) { [BUGGY] return true; } else if ((left == null) || (right == null)) { return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	87	87	7	replace	
263	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { [BUGGY] [BUGGY] if ((left == null) && (right == null)) { return true; } else if ((left == null) || (right == null)) { return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	87	87	7	add	
264	[BUG] [BUGGY] } else if ((left == null) || (right == null)) { [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { return true; [BUGGY] } else if ((left == null) || (right == null)) { [BUGGY] return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	89	89	7	replace	
265	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { return true; [BUGGY] [BUGGY] } else if ((left == null) || (right == null)) { return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	89	89	7	add	
266	[BUG] [BUGGY] return left.equals(right); [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { return true; } else if ((left == null) || (right == null)) { return false; } else { [BUGGY] return left.equals(right); [BUGGY] } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	92	92	7	replace	
267	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { return true; } else if ((left == null) || (right == null)) { return false; } else { [BUGGY] [BUGGY] return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.31622776601683794	92	92	7	add	
268	[BUG] [BUGGY] return prefixes; [FE] -h)]> [CONTEXT] public Set getPrefixes() { [BUGGY] return prefixes; [BUGGY] } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.28529870107872785	149	149	7	replace	
269	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public Set getPrefixes() { [BUGGY] [BUGGY] return prefixes; } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.28529870107872785	149	149	7	add	
270	[BUG] [BUGGY] if (option instanceof Argument) { [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { [BUGGY] if (option instanceof Argument) { [BUGGY] addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); }  [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	78	78	7	replace	
271	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { [BUGGY] [BUGGY] if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); }  [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	78	78	7	add	
272	[BUG] [BUGGY] List valueList = (List) values.get(option); [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } [BUGGY] List valueList = (List) values.get(option); [BUGGY]  if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	82	82	7	replace	
273	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } [BUGGY] [BUGGY] List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	82	82	7	add	
274	[BUG] [BUGGY] if (valueList == null) { [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); [BUGGY] if (valueList == null) { [BUGGY] valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	84	84	7	replace	
275	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); [BUGGY] [BUGGY] if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	84	84	7	add	
276	[BUG] [BUGGY] valueList = new ArrayList(); [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { [BUGGY] valueList = new ArrayList(); [BUGGY] values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	85	85	7	replace	
277	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { [BUGGY] [BUGGY] valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	85	85	7	add	
278	[BUG] [BUGGY] values.put(option, valueList); [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); [BUGGY] values.put(option, valueList); [BUGGY] } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	86	86	7	replace	
279	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addValue(final Option option, final Object value) { if (option instanceof Argument) { addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); [BUGGY] [BUGGY] values.put(option, valueList); } valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	86	86	7	add	
280	[BUG] [BUGGY] valueList.add(value); [FE] -h)]> [CONTEXT] addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } [BUGGY] valueList.add(value); [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	89	89	7	replace	
281	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] addOption(option); } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } [BUGGY] [BUGGY] valueList.add(value); } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	89	89	7	add	
282	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	90	90	7	replace	
283	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } List valueList = (List) values.get(option); if (valueList == null) { valueList = new ArrayList(); values.put(option, valueList); } valueList.add(value); [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] addValue [RETURN_TYPE] void  Option option Object value [VARIABLES] List arguments normalised options valueList Option option Object value Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2820380374088831	90	90	7	add	
284	[BUG] [BUGGY] int hashCode = getId(); [FE] -h)]> [CONTEXT] public int hashCode() { [BUGGY] int hashCode = getId(); [BUGGY] if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	97	97	7	replace	
285	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { [BUGGY] [BUGGY] int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	97	97	7	add	
286	[BUG] [BUGGY] if (getPreferredName() != null) { [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); [BUGGY] if (getPreferredName() != null) { [BUGGY] hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode();  [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	98	98	7	replace	
287	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); [BUGGY] [BUGGY] if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode();  [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	98	98	7	add	
288	[BUG] [BUGGY] hashCode = (hashCode * 37) + getPreferredName().hashCode(); [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { [BUGGY] hashCode = (hashCode * 37) + getPreferredName().hashCode(); [BUGGY] } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	99	99	7	replace	
289	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { [BUGGY] [BUGGY] hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	99	99	7	add	
290	[BUG] [BUGGY] if (getDescription() != null) { [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } [BUGGY] if (getDescription() != null) { [BUGGY] hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	102	102	7	replace	
291	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } [BUGGY] [BUGGY] if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	102	102	7	add	
292	[BUG] [BUGGY] hashCode = (hashCode * 37) + getPrefixes().hashCode(); [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } [BUGGY] hashCode = (hashCode * 37) + getPrefixes().hashCode(); [BUGGY] hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	106	106	7	replace	
293	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } [BUGGY] [BUGGY] hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	106	106	7	add	
294	[BUG] [BUGGY] hashCode = (hashCode * 37) + getTriggers().hashCode(); [FE] -h)]> [CONTEXT] int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); [BUGGY] hashCode = (hashCode * 37) + getTriggers().hashCode(); [BUGGY]  return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	107	107	7	replace	
295	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); [BUGGY] [BUGGY] hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	107	107	7	add	
296	[BUG] [BUGGY] return hashCode; [FE] -h)]> [CONTEXT] hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); [BUGGY] return hashCode; [BUGGY] } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	109	109	7	replace	
297	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); [BUGGY] [BUGGY] return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2700308624336608	109	109	7	add	
298	[BUG] [BUGGY] options.add(option); [FE] -h)]> [CONTEXT] public void addOption(Option option) { [BUGGY] options.add(option); [BUGGY] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	66	66	7	replace	
299	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addOption(Option option) { [BUGGY] [BUGGY] options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	66	66	7	add	
300	[BUG] [BUGGY] nameToOption.put(option.getPreferredName(), option); [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); [BUGGY] nameToOption.put(option.getPreferredName(), option); [BUGGY]  for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	67	67	7	replace	
301	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); [BUGGY] [BUGGY] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	67	67	7	add	
302	[BUG] [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	69	69	7	replace	
303	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); [BUGGY] [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	69	69	7	add	
304	[BUG] [BUGGY] nameToOption.put(i.next(), option); [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] nameToOption.put(i.next(), option); [BUGGY] }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	70	70	7	replace	
305	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] [BUGGY] nameToOption.put(i.next(), option); }  } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2700308624336608	70	70	7	add	
307	[BUG] [BUGGY] final List arguments) { [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, [BUGGY] final List arguments) { [BUGGY] this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	60	60	7	replace	
308	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, [BUGGY] [BUGGY] final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	60	60	7	add	
309	[BUG] [BUGGY] private final Map optionToProperties = new HashMap(); [FE] -h)]> [CONTEXT] [BUGGY] private final Map optionToProperties = new HashMap(); [BUGGY]  [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	41	41	7	replace	
310	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] [BUGGY] [BUGGY] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	41	41	7	add	
311	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	43	43	7	replace	
312	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	43	43	7	add	
313	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	44	44	7	replace	
314	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	44	44	7	add	
315	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	45	45	7	replace	
316	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	45	45	7	add	
317	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map nameToOption = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	46	46	7	replace	
318	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map nameToOption = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	46	46	7	add	
319	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map values = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	47	47	7	replace	
320	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map values = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	47	47	7	add	
321	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map switches = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	48	48	7	replace	
322	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private final Map switches = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	48	48	7	add	
323	[BUG] [BUGGY] this.prefixes = rootOption.getPrefixes(); [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { [BUGGY] this.prefixes = rootOption.getPrefixes(); [BUGGY] this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	61	61	7	replace	
324	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { [BUGGY] [BUGGY] this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	61	61	7	add	
325	[BUG] [BUGGY] this.normalised = arguments; [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); [BUGGY] this.normalised = arguments; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	62	62	7	replace	
326	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); [BUGGY] [BUGGY] this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	62	62	7	add	
327	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	63	63	7	replace	
328	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli16/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	0.2672612419124244	63	63	7	add	
329	[BUG] [BUGGY] return id; [FE] -h)]> [CONTEXT] public int getId() { [BUGGY] return id; [BUGGY] } [CLASS] OptionImpl [METHOD] getId [RETURN_TYPE] int  [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2619684159977919	68	68	7	replace	
330	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int getId() { [BUGGY] [BUGGY] return id; } [CLASS] OptionImpl [METHOD] getId [RETURN_TYPE] int  [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2619684159977919	68	68	7	add	
331	[BUG] [BUGGY] return true; [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { [BUGGY] return true; [BUGGY] } else if ((left == null) || (right == null)) { return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.24174688920761409	88	88	7	replace	
332	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private boolean equals(Object left, Object right) { if ((left == null) && (right == null)) { [BUGGY] [BUGGY] return true; } else if ((left == null) || (right == null)) { return false; } else { return left.equals(right); } } [CLASS] OptionImpl [METHOD] equals [RETURN_TYPE] boolean  Object left Object right [VARIABLES] int id Object left right boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.24174688920761409	88	88	7	add	
333	[BUG] [BUGGY] final boolean required) { [FE] -h)]> [CONTEXT] public OptionImpl(final int id, [BUGGY] final boolean required) { [BUGGY] this.id = id; this.required = required; } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	43	43	7	replace	
334	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public OptionImpl(final int id, [BUGGY] [BUGGY] final boolean required) { this.id = id; this.required = required; } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	43	43	7	add	
335	[BUG] [BUGGY] this.id = id; [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { [BUGGY] this.id = id; [BUGGY] this.required = required; } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	44	44	7	replace	
336	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { [BUGGY] [BUGGY] this.id = id; this.required = required; } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	44	44	7	add	
337	[BUG] [BUGGY] this.required = required; [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { this.id = id; [BUGGY] this.required = required; [BUGGY] } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	45	45	7	replace	
338	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { this.id = id; [BUGGY] [BUGGY] this.required = required; } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	45	45	7	add	
339	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { this.id = id; this.required = required; [BUGGY] } [BUGGY]  [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	46	46	7	replace	
340	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public OptionImpl(final int id, final boolean required) { this.id = id; this.required = required; [BUGGY] [BUGGY] } [CLASS] OptionImpl [METHOD] <init> [RETURN_TYPE] OptionImpl(int,boolean)  final int id final boolean required [VARIABLES] int id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	46	46	7	add	
341	[BUG] [BUGGY] if (prefixes.isEmpty()) { [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  [BUGGY] if (prefixes.isEmpty()) { [BUGGY] return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	132	132	7	replace	
342	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  [BUGGY] [BUGGY] if (prefixes.isEmpty()) { return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	132	132	7	add	
343	[BUG] [BUGGY] checkPrefix(prefixes, getPreferredName()); [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  if (prefixes.isEmpty()) { return; }  [BUGGY] checkPrefix(prefixes, getPreferredName()); [BUGGY]   this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	137	137	7	replace	
344	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  if (prefixes.isEmpty()) { return; }  [BUGGY] [BUGGY] checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	137	137	7	add	
345	[BUG] [BUGGY] this.getTriggers(); [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  if (prefixes.isEmpty()) { return; }  checkPrefix(prefixes, getPreferredName());  [BUGGY] this.getTriggers(); [BUGGY]  for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	140	140	7	replace	
346	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] protected void checkPrefixes(final Set prefixes) {  if (prefixes.isEmpty()) { return; }  checkPrefix(prefixes, getPreferredName());  [BUGGY] [BUGGY] this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	140	140	7	add	
347	[BUG] [BUGGY] for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] if (prefixes.isEmpty()) { return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); [BUGGY] for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [BUGGY] checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	142	142	7	replace	
348	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (prefixes.isEmpty()) { return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); [BUGGY] [BUGGY] for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	142	142	7	add	
349	[BUG] [BUGGY] checkPrefix(prefixes, (String) i.next()); [FE] -h)]> [CONTEXT] return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [BUGGY] checkPrefix(prefixes, (String) i.next()); [BUGGY] } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	143	143	7	replace	
350	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] return; }  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { [BUGGY] [BUGGY] checkPrefix(prefixes, (String) i.next()); } } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	143	143	7	add	
351	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT]  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } [BUGGY] } [BUGGY]  [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	145	145	7	replace	
352	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  checkPrefix(prefixes, getPreferredName());  this.getTriggers(); for (final Iterator i = getTriggers().iterator(); i.hasNext();) { checkPrefix(prefixes, (String) i.next()); } [BUGGY] [BUGGY] } [CLASS] OptionImpl [METHOD] checkPrefixes [RETURN_TYPE] void  Set prefixes [VARIABLES] Iterator i boolean required Set prefixes int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	145	145	7	add	
353	[BUG] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	149	149	7	replace	
354	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { [BUGGY] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	149	149	7	add	
355	[BUG] [BUGGY] String prefix = (String) i.next(); [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] String prefix = (String) i.next(); [BUGGY]  if (trigger.startsWith(prefix)) { return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	150	150	7	replace	
356	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] [BUGGY] String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	150	150	7	add	
357	[BUG] [BUGGY] if (trigger.startsWith(prefix)) { [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); [BUGGY] if (trigger.startsWith(prefix)) { [BUGGY] return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	152	152	7	replace	
358	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); [BUGGY] [BUGGY] if (trigger.startsWith(prefix)) { return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	152	152	7	add	
359	[BUG] [BUGGY] return; [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] return; [BUGGY] } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	153	153	7	replace	
360	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] private void checkPrefix(final Set prefixes, final String trigger) { for (final Iterator i = prefixes.iterator(); i.hasNext();) { String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] [BUGGY] return; } } final ResourceHelper helper = ResourceHelper.getResourceHelper(); final String message = helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger, prefixes.toString()); throw new IllegalArgumentException(message); } [CLASS] OptionImpl [METHOD] checkPrefix [RETURN_TYPE] void  Set prefixes String trigger [VARIABLES] Iterator i ResourceHelper helper boolean required Set prefixes String message prefix trigger int hashCode id  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.2160246899469287	153	153	7	add	
361	[BUG] [BUGGY] super(0, false); [FE] -h)]> [CONTEXT] final int maximum) { [BUGGY] super(0, false); [BUGGY]  this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	69	69	7	replace	
362	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { [BUGGY] [BUGGY] super(0, false); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	69	69	7	add	
363	[BUG] [BUGGY] this.name = name; [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); [BUGGY] this.name = name; [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	71	71	7	replace	
364	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); [BUGGY] [BUGGY] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	71	71	7	add	
365	[BUG] [BUGGY] this.description = description; [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; [BUGGY] this.description = description; [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	72	72	7	replace	
366	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; [BUGGY] [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	72	72	7	add	
367	[BUG] [BUGGY] this.minimum = minimum; [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; [BUGGY] this.minimum = minimum; [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	73	73	7	replace	
368	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; [BUGGY] [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	73	73	7	add	
369	[BUG] [BUGGY] this.maximum = maximum; [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] this.maximum = maximum; [BUGGY]    this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	74	74	7	replace	
370	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	74	74	7	add	
371	[BUG] [BUGGY] this.options = Collections.unmodifiableList(options); [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] this.options = Collections.unmodifiableList(options); [BUGGY]   final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	78	78	7	replace	
372	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final int maximum) { super(0, false); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] [BUGGY] this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	78	78	7	add	
373	[BUG] [BUGGY] final List newAnonymous = new ArrayList(); [FE] -h)]> [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] final List newAnonymous = new ArrayList(); [BUGGY]   final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	81	81	7	replace	
374	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] [BUGGY] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	81	81	7	add	
375	[BUG] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [FE] -h)]> [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [BUGGY]   final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	84	84	7	replace	
376	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	84	84	7	add	
377	[BUG] [BUGGY] final Set newPrefixes = new HashSet(); [FE] -h)]> [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] final Set newPrefixes = new HashSet(); [BUGGY]   for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	87	87	7	replace	
378	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] [BUGGY] final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	87	87	7	add	
379	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] -h)]> [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	90	90	7	replace	
380	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	90	90	7	add	
381	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] -h)]> [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]  if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	91	91	7	replace	
382	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	91	91	7	add	
383	[BUG] [BUGGY] if (option instanceof Argument) { [FE] -h)]> [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] if (option instanceof Argument) { [BUGGY] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	93	93	7	replace	
384	[BUG] [BUGGY] [FE] -h)]> [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	93	93	7	add	
385	[BUG] [BUGGY] final Set triggers = option.getTriggers(); [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] final Set triggers = option.getTriggers(); [BUGGY]  for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	97	97	7	replace	
386	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] [BUGGY] final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	97	97	7	add	
387	[BUG] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	99	99	7	replace	
388	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	99	99	7	add	
389	[BUG] [BUGGY] newOptionMap.put(j.next(), option); [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); [BUGGY] }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	100	100	7	replace	
390	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	100	100	7	add	
391	[BUG] [BUGGY] newPrefixes.addAll(option.getPrefixes()); [FE] -h)]> [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] newPrefixes.addAll(option.getPrefixes()); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	104	104	7	replace	
392	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] [BUGGY] newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	104	104	7	add	
393	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	106	106	7	replace	
394	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	106	106	7	add	
395	[BUG] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [FE] -h)]> [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	108	108	7	replace	
396	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	108	108	7	add	
397	[BUG] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [FE] -h)]> [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	109	109	7	replace	
398	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	109	109	7	add	
399	[BUG] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [FE] -h)]> [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	110	110	7	replace	
400	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	110	110	7	add	
401	[BUG] [BUGGY] } [FE] -h)]> [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	111	111	7	replace	
402	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int)  List options String name String description final int minimum final int maximum [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.2160246899469287	111	111	7	add	
403	[BUG] [BUGGY] hashCode = (hashCode * 37) + getDescription().hashCode(); [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { [BUGGY] hashCode = (hashCode * 37) + getDescription().hashCode(); [BUGGY] } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.15936381457791915	103	103	7	replace	
404	[BUG] [BUGGY] [FE] -h)]> [CONTEXT] public int hashCode() { int hashCode = getId(); if (getPreferredName() != null) { hashCode = (hashCode * 37) + getPreferredName().hashCode(); } if (getDescription() != null) { [BUGGY] [BUGGY] hashCode = (hashCode * 37) + getDescription().hashCode(); } hashCode = (hashCode * 37) + getPrefixes().hashCode(); hashCode = (hashCode * 37) + getTriggers().hashCode(); return hashCode; } [CLASS] OptionImpl [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] int hashCode id boolean required  	projects/Cli16/src/java/org/apache/commons/cli2/option/OptionImpl.java	0.15936381457791915	103	103	7	add	
