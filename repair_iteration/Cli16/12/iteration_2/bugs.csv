bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  if(other)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "] ");  }	      if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(other)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  if(expanded)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append('[');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append('[');  }	      if(expanded)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  if(both)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(both)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  if(separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(separator)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  if(offer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(offer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(offer)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  if(!outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  if(other  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other  ||  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other  ||  outer)  {	  if(other)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!outer)  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {  buffer.append(']');  }	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption(separator,  outer);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  outer);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(arg);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  buffer);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append(separator);  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append('[');  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append('[');	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	      if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(both)  {  if(outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(both)  {  if(outer)  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  if(outer)  {  buffer.append(']');  }	      if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(both)  {  if(outer)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(both)  {  if(outer)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  if(outer)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }	      if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }	      if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if(!both)  {  if(outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!both)  {  if(outer)  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!both)  {  if(outer)  {  buffer.append(']');  }	      if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  if(expanded  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  &&  childSettings.contains(separator))  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.contains(separator))  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  &&  childSettings.size()  >  maximum)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  >  maximum)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(expanded  &&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  &&  childSettings!=  null)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings!=  null)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( ", ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( ", ");  }	      if(outer)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(arg);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  outer);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  outer);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  buffer);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  &&  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if(!named  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!named  &&  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!named  &&  outer)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  if(named  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(named  &&  both)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(named  &&  both)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(named  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(named  ||  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(named  ||  outer)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  if(outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append( "] ");  }	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  if(outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append( "  [] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append( "  [] ");  }	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append( "] ");  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "] ");	      if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  parent!=  null  &&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent!=  null  &&  parent.hasChildren();  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.hasChildren();	      if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ");	      if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append( ", ");  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( ", ");	      if(outer)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append(']');  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(']');	      if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  if(outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append(separator);  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append(separator);  }	      if(expanded)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  i.remove();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  i.remove();  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.remove();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  if(!expanded)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!expanded)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  if(expanded  &&  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  &&  parent!=  null)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  parent!=  null)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append( "] ");  }	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionsMap.getOption(separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(separator);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(comp);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(comp);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  if(outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  if(outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  if(outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  if(!other)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(!other)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!other)  {	  if(other)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.get(separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get(separator);	      if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  buffer.append(expanded?  separator  :  null);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append(expanded?  separator  :  null);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded?  separator  :  null);	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  buffer.append(expanded);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append(expanded);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded);	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  if(outer  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer  &&  optionMap.containsKey(separator))  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  optionMap.containsKey(separator))  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
67	[BUG]  [BUGGY]  if(outer  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer  &&  childSettings.contains(separator))  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  childSettings.contains(separator))  {	  if(outer)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  if(outer  &&  named  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer  &&  named  &&  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  named  &&  outer)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  if(outer  &&  named  &&  name)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(outer  &&  named  &&  name)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  named  &&  name)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(comp,  separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
72	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent  ==  null  &&  parent!=  null;  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent!=  null;	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  [Delete]  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	[Delete]	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  parent.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent.append(separator).append(']');  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(separator).append(']');	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  parent.append(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent.append(separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(separator);	      if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded  ||  outer)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  outer)  {	  if(named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "  ( ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  ( ");  }	      if(expanded)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator);	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  false);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  false);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  false);	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
80	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  0);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  0);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  0);	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  buffer.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  buffer.append(separator).append(']');  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator).append(']');	      if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(expanded)  {  buffer.append( "  [] ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  [] ");  }	      if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(comp,  separator);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( ",   ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append( ",   ");  }	      if(outer)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
85	[BUG]  [BUGGY]  parent  ==  outer)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  parent  ==  outer)  {  buffer.append( ", ");  }  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  outer)  {  buffer.append( ", ");  }	      if(outer)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  if(other  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  if(other  ||  separator)  {  [BUGGY]    buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other  ||  separator)  {	  if(other)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optional ").getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }    [BUGGY]  Option  option  =  optionMap.get( "optional ").getOption();  [BUGGY]    if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optional ").getOption();	      if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
