bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(other)  {  if(outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(outer)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(outer)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  if(both)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(both)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
3	[BUG]  [BUGGY]  if(separator  &&  outer.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  outer.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  outer.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
4	[BUG]  [BUGGY]  if(!outer  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  childSettings.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
5	[BUG]  [BUGGY]  if(separator  ||  outer  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ||  outer  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ||  outer  &&  childSettings.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
6	[BUG]  [BUGGY]  if(outer  &&  childSettings.contains(name))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  childSettings.contains(name))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  childSettings.contains(name))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
7	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  both);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  both);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  arg);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  offset,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  offset,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  offset,  outer);	  Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  buffer.append(outer)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(outer)  {  buffer.append( ", ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(outer)  {  buffer.append( ", ");  }	  parent    ==    null    &&    outer)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
11	[BUG]  [BUGGY]  if(other  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other  &&  outer)  {	  if(other    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  if(other  ||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other  ||  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other  ||  both)  {	  if(other    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  if(outer  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  ||  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  ||  outer)  {	  if(other    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  if(expanded  &&  buffer!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  buffer!=  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  buffer!=  null)  {	  if(expanded    &&    parent!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
15	[BUG]  [BUGGY]  if(expanded  ||  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  parent!=  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  parent!=  null)  {	  if(expanded    &&    parent!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp,  outer);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
17	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(separator,  comp);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  buffer.append(']',  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(']',  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(']',  outer);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
19	[BUG]  [BUGGY]  if(other)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  buffer.append('[');  }	  if(expanded)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "[ ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "[ ");  }	  if(expanded)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  buffer.append( "  [] ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "  [] ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "  [] ");	  if(expanded)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
22	[BUG]  [BUGGY]  nisipet)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  nisipet)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	nisipet)  {  buffer.append( "  [] ");  }	  if(expanded)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
23	[BUG]  [BUGGY]  if(expanded)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }	  if(other)    {    if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  if(expanded)  {  if(other)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  if(other)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  if(other)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }	  if(other)    {    if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  if(other)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  i.removeChild(childSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.removeChild(childSettings);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.removeChild(childSettings);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
27	[BUG]  [BUGGY]  i.setCurrentSeparator(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.setCurrentSeparator(separator);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.setCurrentSeparator(separator);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
28	[BUG]  [BUGGY]  i.setCurrentSeparator(null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.setCurrentSeparator(null);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.setCurrentSeparator(null);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
29	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ",  separator);	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
30	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "option ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption( "option ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption( "option ");	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
31	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "optional ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "optional ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "optional ");	  Option    option    =    optionMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
32	[BUG]  [BUGGY]  if(separator  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ||  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ||  outer)  {	  if(named    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  parent.append(separator).append( "] ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(separator).append( "] ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(separator).append( "] ");	  parent.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
34	[BUG]  [BUGGY]  parent!=  null  ||  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  ||  parent.hasChildren();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  ||  parent.hasChildren();	  parent!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
35	[BUG]  [BUGGY]  parent!=  null  &&  parent.getParent().hasChildren();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.getParent().hasChildren();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.getParent().hasChildren();	  parent!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  outer);	  aughtExceptionHandler.handleMissingException(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
37	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  both);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  both);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  both);	  aughtExceptionHandler.handleMissingException(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
38	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }	  aughtExceptionHandler.handleMissingException(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
39	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  outer);	  aughtExceptionHandler.handleMissingException(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
40	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(separator,  outer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(separator,  buffer);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  if(!offer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!offer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!offer)  {	  if(offer)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "] ");  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append(']');  }	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append( "] ");  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "[ ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append( "[ ");  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  if(expanded  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
53	[BUG]  [BUGGY]  if(outer  &&  named  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  named  &&  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  named  &&  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
54	[BUG]  [BUGGY]  if(expanded  ||  both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  if(!named  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!named  &&  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!named  &&  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
56	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(arg,  separator);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
57	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(prefixes,  separator);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
58	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(prefix,  separator);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
59	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.size()  >  minimum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  >  minimum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
60	[BUG]  [BUGGY]  if(expanded  &&  buffer.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  buffer.size()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  buffer.size()  >  maximum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
61	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.size()  <  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  <  maximum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
62	[BUG]  [BUGGY]  buffer.append( "[ ").append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "[ ").append(separator).append(']');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "[ ").append(separator).append(']');	  buffer.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
63	[BUG]  [BUGGY]  buffer.append(separator).append( "] ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(separator).append( "] ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator).append( "] ");	  buffer.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
64	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  both);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  both);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  both);	  final    Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
65	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(arg,  outer);	  final    Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
66	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(expanded,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(expanded,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(expanded,  separator);	  final    Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
67	[BUG]  [BUGGY]  buffer.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( ",n ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( ",n ");	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
68	[BUG]  [BUGGY]  buffer.append(',');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(',');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(',');	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
69	[BUG]  [BUGGY]  if(expanded  &&  children.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  children.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  children.contains(separator))  {	  if(expanded    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
70	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(prefixes,  separator);	  Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
71	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(prefix,  separator);	  Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
72	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(comp,  outer);	  Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
73	[BUG]  [BUGGY]  if(!expanded  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  childSettings.contains(separator))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
74	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  options.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  options.contains(separator))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
75	[BUG]  [BUGGY]  if(!expanded  &&  childSettings.contains(name))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  childSettings.contains(name))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  childSettings.contains(name))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
76	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  buffer.length()  >  maximum)  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
77	[BUG]  [BUGGY]  if(!named  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!named  ||  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!named  ||  outer)  {	  if(!named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  if(!named  &&  other)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!named  &&  other)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!named  &&  other)  {	  if(!named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  Option  option  =  optionsMap.get( "optional ").getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.get( "optional ").getOption();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.get( "optional ").getOption();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.get( "optional ").getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  options.get( "optional ").getOption();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  options.get( "optional ").getOption();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
81	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optional ").getOptionValue();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get( "optional ").getOptionValue();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optional ").getOptionValue();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(separator,  comp);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
83	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  outer);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
84	[BUG]  [BUGGY]  if(outside)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outside)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outside)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  ( "));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "  ( "));  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  ( "));  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
86	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  (');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "  (');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  (');  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
87	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  outer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  if(expanded  ||  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  childSettings.contains(separator))  {	  if(expanded    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
89	[BUG]  [BUGGY]  if(expanded  &&  childSettings.contains(name))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.contains(name))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.contains(name))  {	  if(expanded    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
90	[BUG]  [BUGGY]  if(expanded  &&  childSettings.contains(separator)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.contains(separator)||  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.contains(separator)||  both)  {	  if(expanded    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
91	[BUG]  [BUGGY]  buffer.append(expanded?  separator  :  other);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(expanded?  separator  :  other);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded?  separator  :  other);	  buffer.append(expanded?    separator    :    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
92	[BUG]  [BUGGY]  buffer.append(separator?  separator  :  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(separator?  separator  :  null);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator?  separator  :  null);	  buffer.append(expanded?    separator    :    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
93	[BUG]  [BUGGY]  buffer.append(expanded?  separator  :  null,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(expanded?  separator  :  null,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded?  separator  :  null,  outer);	  buffer.append(expanded?    separator    :    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(arg);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
95	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(separator,  outer);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
96	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(separator,  buffer);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
97	[BUG]  [BUGGY]  if(!separator)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!separator)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(prefix);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.get(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.get(separator);	  Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  options.get(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  options.get(separator);	  Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
101	[BUG]  [BUGGY]  Option  option  =  newOptionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  newOptionMap().get(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  newOptionMap().get(separator);	  Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
102	[BUG]  [BUGGY]  if(both)  {  if(expanded)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(both)  {  if(expanded)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  if(expanded)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
103	[BUG]  [BUGGY]  if(both)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(both)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
104	[BUG]  [BUGGY]  if(expanded  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  separator)  {	  if(other    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
105	[BUG]  [BUGGY]  if(other  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other  &&  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other  &&  separator)  {	  if(other    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
106	[BUG]  [BUGGY]  if(separator  ||  other)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ||  other)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ||  other)  {	  if(other    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
107	[BUG]  [BUGGY]  if(outer)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }	  if(outer)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
109	[BUG]  [BUGGY]  if(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }	  if(both)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  while(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  while(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	while(!both)  {  buffer.append(']');  }  else  {  buffer.append(outer);  }	  if(both)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
111	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
112	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(arg,  outer);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
113	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(comp);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(comp);	  final    Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  options.getOption(comp);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  options.getOption(comp);	  final    Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(separator  +  separator);  }	  if(expanded)    {    buffer.append(separator    +    separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
116	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(separator  +  separator);  }  else  {  buffer.append('[');  }	  if(expanded)    {    buffer.append(separator    +    separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
117	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getParent()!=  null;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent.getParent()!=  null;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent.getParent()!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
118	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
119	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  ||  parent!=  null;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  ||  parent!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
120	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
121	[BUG]  [BUGGY]  if(name  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(name  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(name  &&  outer)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
122	[BUG]  [BUGGY]  if(!outer  &&  named  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  named  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  named  &&  outer)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
123	[BUG]  [BUGGY]  if(separator  &&  named  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  named  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  named  &&  outer)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
124	[BUG]  [BUGGY]  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "[ ");  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "[ ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
125	[BUG]  [BUGGY]  buffer.append('[',  outer);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append('[',  outer);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append('[',  outer);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
126	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "    []   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "    []   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "    []   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
129	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
130	[BUG]  [BUGGY]  if(expanded)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
131	[BUG]  [BUGGY]  if(expanded)  {  if(other)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  if(other)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  if(other)  {  buffer.append(']');  }  else  {  buffer.append(separator);  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
132	[BUG]  [BUGGY]  if(expanded)  {  if(separator!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  if(separator!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  if(separator!=  null)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
133	[BUG]  [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
134	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
135	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  2);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  2);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
136	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  0,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  0,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  0,  outer);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
137	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  two);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  two);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  two);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
138	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer)  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {  buffer.append(separator);  }	  if(outer)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
139	[BUG]  [BUGGY]  if(outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer)  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  buffer.append('[');  }	  if(outer)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
140	[BUG]  [BUGGY]  parent.append(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(comp,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(comp,  separator);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
141	[BUG]  [BUGGY]  parent.append(this,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(this,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(this,  separator);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
142	[BUG]  [BUGGY]  parent.append('[');  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append('[');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append('[');	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
143	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  [ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "  [ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  [ ");  }  else  {  buffer.append( "] ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
144	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "  ( ");  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "  ( ");  }  else  {  buffer.append( ", ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "  ( ");  }  else  {  buffer.append( ", ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
145	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
147	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
148	[BUG]  [BUGGY]  if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
149	[BUG]  [BUGGY]  if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
150	[BUG]  [BUGGY]  if(!outer  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  options.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  options.contains(separator))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
151	[BUG]  [BUGGY]  if(name  &&  outer  &&  name)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(name  &&  outer  &&  name)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(name  &&  outer  &&  name)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
152	[BUG]  [BUGGY]  if(separator  &&  outer  &&  name)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  outer  &&  name)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  outer  &&  name)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
153	[BUG]  [BUGGY]  if(!outer  &&  named  &&  name)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  named  &&  name)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  named  &&  name)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
154	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  true);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  true);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  true);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
155	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  false,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  false,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  false,  outer);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
156	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator,  false);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator,  false);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator,  false);  }	  aughtExceptionHandler.handleMissingException(buffer,    separator,    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
157	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(separator,  buffer,  outer);	  final    Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
158	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(arg,  buffer);	  final    Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
160	[BUG]  [BUGGY]  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
161	[BUG]  [BUGGY]  if(other)  {  if(expanded)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  if(expanded)  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  if(expanded)  {  buffer.append('[');  }	  if(other)    {    if(expanded)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
162	[BUG]  [BUGGY]  if(!expanded  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  ||  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  ||  outer)  {	  if(expanded    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
163	[BUG]  [BUGGY]  if(both  ||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(both  ||  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(both  ||  outer)  {	  if(expanded    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
164	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }	  if(outer)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
165	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append( "  [] ");  }	  if(outer)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
166	[BUG]  [BUGGY]  if(separator  &&  optionMap.containsKey(outer))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  optionMap.containsKey(outer))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  optionMap.containsKey(outer))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
167	[BUG]  [BUGGY]  if(!outer  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  optionMap.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
168	[BUG]  [BUGGY]  if(outer  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  options.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  options.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
169	[BUG]  [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ||  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ||  optionMap.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
170	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
171	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
172	[BUG]  [BUGGY]  if(expanded  ||  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  childSettings!=  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  childSettings!=  null)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
173	[BUG]  [BUGGY]  if(expanded  &&  childSettings!=  null  &&  buffer.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings!=  null  &&  buffer.length()  >  0)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings!=  null  &&  buffer.length()  >  0)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
174	[BUG]  [BUGGY]  if(outer  &&  named  &&  optionMap)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  named  &&  optionMap)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  named  &&  optionMap)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
175	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get(separator  +  1);	  Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
176	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get(separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get(separator,  outer);	  Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
177	[BUG]  [BUGGY]  if(outer  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  ||  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  ||  separator)  {	  if(other    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
178	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  ( ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "  ( ");  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
179	[BUG]  [BUGGY]  buffer.append( "  ( ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "  ( ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "  ( ");	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
180	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  (null);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  (null);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "  (null);  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
181	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	  if(outer)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
182	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	  if(outer)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
183	[BUG]  [BUGGY]  if(separator  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  outer)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
184	[BUG]  [BUGGY]  if(other)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(other)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(other)  {  buffer.append( "  [] ");  }	  if(other)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
185	[BUG]  [BUGGY]  if(optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(optionMap.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
186	[BUG]  [BUGGY]  parent  ==  null  &&  parent.length()!=  0;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent.length()!=  0;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent.length()!=  0;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
187	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(comp,  outer);	  final    Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
188	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
189	[BUG]  [BUGGY]  if(outer  &&  childSettings!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  childSettings!=  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  childSettings!=  null)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
190	[BUG]  [BUGGY]  if(expanded  &&  childSettings  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings  ==  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings  ==  null)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
191	[BUG]  [BUGGY]  if(outer  ||  named  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  ||  named  &&  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  ||  named  &&  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
192	[BUG]  [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
193	[BUG]  [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer)  {  if(separator!=  null)  {  buffer.append( "] ");  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer)  {  if(separator!=  null)  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
194	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(this.prefix);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
195	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(option);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(option);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
196	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionsMap.getOption(comp);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionsMap.getOption(comp);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
197	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.size()  ==  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  ==  maximum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
198	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  >=  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.size()  >=  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  >=  maximum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
199	[BUG]  [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  options.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
200	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append('[');  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
201	[BUG]  [BUGGY]  parent  ==  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  outer)  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
202	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
203	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
204	[BUG]  [BUGGY]  if(!expanded  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  outer)  {	  if(expanded    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
205	[BUG]  [BUGGY]  if(outer  ||  named)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  ||  named)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  ||  named)  {	  if(named    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
206	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(arg,  separator);	  Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
207	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get(separator).getOption();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get(separator).getOption();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
208	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optional ").clone();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get( "optional ").clone();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optional ").clone();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
209	[BUG]  [BUGGY]  parent.append(']');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(']');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(']');	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
210	[BUG]  [BUGGY]  if(outer  &&  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  parent!=  null)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  parent!=  null)  {	  if(expanded    &&    parent!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
211	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }  else  {  buffer.append( ", ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(buffer,  separator);  }  else  {  buffer.append( ", ");  }	  aughtExceptionHandler.handleMissingException(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
212	[BUG]  [BUGGY]  parent!=  null  &&  other  ==  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  other  ==  buffer.append(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  other  ==  buffer.append(separator);	  if(other)    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
213	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  options.getOption(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  options.getOption(separator);	  if(both)    {    if(outer)    {    buffer.append(']');    }    else    {    buffer.append(outer);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
214	[BUG]  [BUGGY]  if(!outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer)  {  buffer.append( "] ");  }	  if(!outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
215	[BUG]  [BUGGY]  if(expanded  &&  helpSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  helpSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  helpSettings.contains(separator))  {	  if(expanded    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
216	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(prefix  +  separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append(prefix  +  separator);  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(prefix  +  separator);  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(separator    +    separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
217	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.isEnabled(Feature.QUOTE_FIELD_NAMES);	  parent!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
218	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.QUOTE_NON_NULL_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.QUOTE_NON_NULL_OBJECT);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.isEnabled(Feature.QUOTE_NON_NULL_OBJECT);	  parent!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
219	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append( "  [] ");  }  else  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "    []   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
220	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
221	[BUG]  [BUGGY]  if(!separator  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!separator  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!separator  &&  outer)  {	  if(!named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
222	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
223	[BUG]  [BUGGY]  buffer.append(separator).append(']'  +  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(separator).append(']'  +  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator).append(']'  +  outer);	  buffer.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
224	[BUG]  [BUGGY]  if(outer  &&  helpSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  helpSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  helpSettings.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
225	[BUG]  [BUGGY]  if(!outer  &&  helpSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!outer  &&  helpSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!outer  &&  helpSettings.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
226	[BUG]  [BUGGY]  if(expanded)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
227	[BUG]  [BUGGY]  if(outer  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  outer)  {	  if(expanded    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
228	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(Separator.NAME);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(Separator.NAME);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(Separator.NAME);	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
229	[BUG]  [BUGGY]  buffer.append('['  +  outer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append('['  +  outer);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append('['  +  outer);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
230	[BUG]  [BUGGY]  parent  ==  (other)  {  if(expanded)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  (other)  {  if(expanded)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  (other)  {  if(expanded)  {  buffer.append(']');  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
231	[BUG]  [BUGGY]  parent  ==  (other)  {  if(expanded)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  (other)  {  if(expanded)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  (other)  {  if(expanded)  {  buffer.append( "] ");  }	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
232	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  minimum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  minimum);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  minimum);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
233	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append('[');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded)  {  buffer.append(separator);  }  else  {  buffer.append('[');  }	  if(other)    {    if(expanded)    {    buffer.append(separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
234	[BUG]  [BUGGY]  buffer.append( "   ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "   ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "   ");	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
235	[BUG]  [BUGGY]  i.remove(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.remove(separator);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.remove(separator);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
236	[BUG]  [BUGGY]  i.remove(expanded);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.remove(expanded);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.remove(expanded);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
237	[BUG]  [BUGGY]  i.remove(expand);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.remove(expand);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.remove(expand);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
238	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.appendSeparator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.appendSeparator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(this.appendSeparator);	  final    Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
239	[BUG]  [BUGGY]  parent!=  (outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  (outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  (outer)  {  buffer.append( "  [] ");  }	  if(outer)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
240	[BUG]  [BUGGY]  parent!=  null  &&  parent.hasChildren())  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.hasChildren())  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.hasChildren())  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
241	[BUG]  [BUGGY]  buffer.append( "[');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append( "[');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append( "[');	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
242	[BUG]  [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcăToFront(buffer,  outer)  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
243	[BUG]  [BUGGY]  parent  ==  null  &&  outer  <  =  parent.getParent())  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer  <  =  parent.getParent())  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer  <  =  parent.getParent())  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
244	[BUG]  [BUGGY]  if(expanded  &&  childSettings)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings)  {	  if(expanded    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
245	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(this,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
246	[BUG]  [BUGGY]  i.set(prefix,  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  i.set(prefix,  outer);  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	i.set(prefix,  outer);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
247	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  childSettings.contains(separator))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
248	[BUG]  [BUGGY]  if(outer  &&  childSettings.contains(separator)&&  separator.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  childSettings.contains(separator)&&  separator.equals( " "))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  childSettings.contains(separator)&&  separator.equals( " "))  {	  if(outer    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
249	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  parent.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  parent.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);	  parent!=    null    &&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
250	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(this,  separator);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
251	[BUG]  [BUGGY]  buffer.append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(separator).append('[');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator).append('[');	  buffer.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
252	[BUG]  [BUGGY]  buffer.append(separator).append(']',  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(separator).append(']',  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(separator).append(']',  outer);	  buffer.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
253	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optional ").getOption( "optional ").getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get( "optional ").getOption( "optional ").getOption();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optional ").getOption( "optional ").getOption();	  if(other)    {    if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
254	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ").getOption( "option ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ").getOption( "option ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ").getOption( "option ");	  if(other)    {    if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
255	[BUG]  [BUGGY]  if(expanded  &&  parent!=  null  &&  childSettings.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  parent!=  null  &&  childSettings.contains(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  parent!=  null  &&  childSettings.contains(separator))  {	  if(expanded    &&    parent!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
256	[BUG]  [BUGGY]  if(expanded  &&  parent!=  null  &&  childSettings.contains(parent))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  parent!=  null  &&  childSettings.contains(parent))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  parent!=  null  &&  childSettings.contains(parent))  {	  if(expanded    &&    parent!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
257	[BUG]  [BUGGY]  if(expanded  ||  two)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  two)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  two)  {	  if(expanded    ||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
258	[BUG]  [BUGGY]  if(expanded  &&  childSettings.size()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.size()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.size()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER))  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
259	[BUG]  [BUGGY]  if(expanded  ||  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  childSettings.size()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  childSettings.size()  >  maximum)  {	  if(expanded    &&    childSettings.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
260	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(comp,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionsMap.getOption(comp,  separator);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
261	[BUG]  [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  outer)  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  outer)  {  buffer.append(separator);  }	  parent    ==    null    &&    outer)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
262	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(separator):  null;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(separator):  null;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ")?  optionMap.get(separator):  null;	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
263	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(optional):  null;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(optional):  null;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ")?  optionMap.get(optional):  null;	  if(other)    {    if(expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
264	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(component,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(component,  separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(component,  separator);	  final    Option    option    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
265	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optal ").getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get( "optal ").getOption();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optal ").getOption();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
266	[BUG]  [BUGGY]  Option  option  =  optionMap.get( "optional ").getOptionSeparator();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.get( "optional ").getOptionSeparator();  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.get( "optional ").getOptionSeparator();	  Option    option    =    optionMap.get(   "optional   ").getOption();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
267	[BUG]  [BUGGY]  buffer.append(expanded?  separator  :  ']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(expanded?  separator  :  ']');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded?  separator  :  ']');	  if(expanded)    {    buffer.append(separator    +    separator);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
268	[BUG]  [BUGGY]  if(expanded  &&  childSettings!=  null  &&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings!=  null  &&  childSettings.size()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings!=  null  &&  childSettings.size()  >  maximum)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
269	[BUG]  [BUGGY]  if(expanded  &&  childSettings!=  null  &&  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings!=  null  &&  outer)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings!=  null  &&  outer)  {	  if(expanded    &&    childSettings!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
270	[BUG]  [BUGGY]  parent.append(separator).append(']',  outer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(separator).append(']',  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(separator).append(']',  outer);	  parent.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
271	[BUG]  [BUGGY]  parent.append(separator).append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent.append(separator).append('[');  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent.append(separator).append('[');	  parent.append(separator).append(']');    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
272	[BUG]  [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcăToFront(buffer,  outer)  {  buffer.append( "  [] ");  }	  if(outer)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
273	[BUG]  [BUGGY]  cearcă  ||  outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcă  ||  outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcă  ||  outer)  {  buffer.append( "  [] ");  }	  if(outer)    {    buffer.append(   "    []   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
274	[BUG]  [BUGGY]  parent  ==  null?  parent.getParent()  :  separator;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null?  parent.getParent()  :  separator;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null?  parent.getParent()  :  separator;	  if(outer)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
275	[BUG]  [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcăToFront(buffer,  outer)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcăToFront(buffer,  outer)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
276	[BUG]  [BUGGY]  parent  ==  outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  outer)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  outer)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
277	[BUG]  [BUGGY]  External)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  External)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	External)  {  buffer.append(']');  }	  if(both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
278	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
279	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  optionMap.containsKey(separator))  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
280	[BUG]  [BUGGY]  if(!expanded  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  options.isEmpty())  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  options.isEmpty())  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
281	[BUG]  [BUGGY]  if(!expanded  &&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!expanded  &&  childSettings.size()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!expanded  &&  childSettings.size()  >  maximum)  {	  if(!expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
282	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(comp,  separator,  outer);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
283	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  name);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  name);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	final  Option  option  =  optionMap.getOption(comp,  name);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
284	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator,  outer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption(comp,  separator,  outer);	  final    Option    option    =    optionMap.getOption(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
285	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  separator)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
286	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  childSettings.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  childSettings.size()  >  maximum)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  childSettings.size()  >  maximum)  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
287	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  childSettings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  childSettings.isEmpty())  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  childSettings.isEmpty())  {	  if(outer    &&    named    &&    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
288	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append( "] ");  }	  if(outer)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
289	[BUG]  [BUGGY]  cearcăToFront(buffer,  other)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcăToFront(buffer,  other)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcăToFront(buffer,  other)  {  buffer.append(']');  }	  if(other)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
290	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(']');  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append(']');  }	  if(other)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
291	[BUG]  [BUGGY]  cearcăToFrontMap.put(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  cearcăToFrontMap.put(separator,  buffer);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	cearcăToFrontMap.put(separator,  buffer);	  if(other)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
292	[BUG]  [BUGGY]  if(!both)  {  if(outer)  {  buffer.append( "  [] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!both)  {  if(outer)  {  buffer.append( "  [] ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!both)  {  if(outer)  {  buffer.append( "  [] ");  }	  if(!both)    {    if(outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
293	[BUG]  [BUGGY]  if(separator  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  &&  optionMap.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
294	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  optionMap.containsKey(separator))  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  optionMap.containsKey(separator))  {	  if(outer    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
295	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
296	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ==  null)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
297	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
298	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  separator,  maximum);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	aughtExceptionHandler.handleMissingException(buffer,  separator,  maximum);	  aughtExceptionHandler.handleMissingException(buffer,    separator,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
299	[BUG]  [BUGGY]  buffer.append(expanded? "[ "  : "] ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  buffer.append(expanded? "[ "  : "] ");  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	buffer.append(expanded? "[ "  : "] ");	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
300	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(option):  null;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ")?  optionMap.get(option):  null;  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ")?  optionMap.get(option):  null;	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
301	[BUG]  [BUGGY]  parent  ==  null  &&  parent.test(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent.test(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent.test(separator);	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
302	[BUG]  [BUGGY]  if(!both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(!both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(!both)  {	  if(!outer)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
303	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "  ( ");  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append( "  ( ");  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
304	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "  (null);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "  (null);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append( "  (null);  }	  if(expanded)    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
305	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  named  &&  name)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  named  &&  name)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  named  &&  name)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
306	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  name  &&  name)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  name  &&  name)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  name  &&  name)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
307	[BUG]  [BUGGY]  if(outer  &&  named  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(outer  &&  named  &&  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(outer  &&  named  &&  separator)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
308	[BUG]  [BUGGY]  if(expanded  &&  outer  &&  name  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  outer  &&  name  &&  separator)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  outer  &&  name  &&  separator)  {	  if(outer    &&    named    &&    name)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
309	[BUG]  [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  parent!=  null  &&  outer)  {  buffer.append(separator);  }  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	parent!=  null  &&  outer)  {  buffer.append(separator);  }	  parent!=    null    &&    outer)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
310	[BUG]  [BUGGY]  if(expanded  &&  childSettings.contains(separator)||  other)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  childSettings.contains(separator)||  other)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  childSettings.contains(separator)||  other)  {	  if(expanded    &&    childSettings.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
311	[BUG]  [BUGGY]  if(expanded  &&  beide)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  &&  beide)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  &&  beide)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
312	[BUG]  [BUGGY]  if(expanded  ||  named  &&  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  if(expanded  ||  named  &&  both)  {  [BUGGY]      buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	if(expanded  ||  named  &&  both)  {	  if(named    &&    both)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
313	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ").append(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ").append(separator);  [BUGGY]      if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	326	326	7	replace	Option  option  =  optionMap.getOption( "option ").append(separator);	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
