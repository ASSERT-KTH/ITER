bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }	  final    boolean    expanded    =    childSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  final    boolean    expanded    =    childSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  final  boolean  both  =  arguments  ||  outer;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  arguments  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  arguments  ||  outer;	  final    boolean    both    =    outer    ||    argument;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
4	[BUG]  [BUGGY]  final  boolean  both  =  argument  ||  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  argument  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  argument  ||  outer;	  final    boolean    both    =    outer    ||    argument;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
5	[BUG]  [BUGGY]  final  boolean  both  =  arguments  &&  extended;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  arguments  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  arguments  &&  extended;	  final    boolean    both    =    extended    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  final  boolean  both  =  supported  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supported  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supported  &&  arguments;	  final    boolean    both    =    extended    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  final  boolean  both  =!expanded  ||  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  ||  outer;	  final    boolean    both    =!expanded    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
8	[BUG]  [BUGGY]  final  boolean  both  =!expanded  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  &&  arguments;	  final    boolean    both    =!expanded    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
9	[BUG]  [BUGGY]  if(!expanded  &&  outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  outer)  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  outer)  {  buffer.append(']');  }	  if(expanded    ||    outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append(name);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append(name);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append(name);  }	  if(expanded)    {    buffer.append(name);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
11	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
12	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append('[');  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append('[');	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
13	[BUG]  [BUGGY]  final  boolean  both  =  arguments;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  arguments;	  final    boolean    both    =    outer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
14	[BUG]  [BUGGY]  final  boolean  both  =  separator;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separator;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separator;	  final    boolean    both    =    outer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
15	[BUG]  [BUGGY]  final  boolean  both  =  options;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  options;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  options;	  final    boolean    both    =    outer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
16	[BUG]  [BUGGY]  final  boolean  both  =  argumentMap.length  &&  expanded;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  argumentMap.length  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  argumentMap.length  &&  expanded;	  final    boolean    both    =    expanded    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
18	[BUG]  [BUGGY]  buffer.append('[',  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append('[',  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append('[',  outer);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
19	[BUG]  [BUGGY]  buffer.append('[').append(arguments);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append('[').append(arguments);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append('[').append(arguments);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
20	[BUG]  [BUGGY]  buffer.append('[').append(expanded);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append('[').append(expanded);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append('[').append(expanded);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
21	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
22	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
23	[BUG]  [BUGGY]  final  boolean  both  =  external  &&  extended;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  external  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  external  &&  extended;	  final    boolean    both    =    extended    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  extended;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  extended;	  final    boolean    both    =    extended    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  final  boolean  both  =  external  &&  expanded;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  external  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  external  &&  expanded;	  final    boolean    both    =    expanded    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
26	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
27	[BUG]  [BUGGY]  final  boolean  both  =  separated  ||  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separated  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separated  ||  outer;	  final    boolean    both    =    separated    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
28	[BUG]  [BUGGY]  final  boolean  both  =  separated  &&  named;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separated  &&  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separated  &&  named;	  final    boolean    both    =    separated    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
29	[BUG]  [BUGGY]  final  boolean  both  =  named  ||  separated;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  named  ||  separated;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  named  ||  separated;	  final    boolean    both    =    separated    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
30	[BUG]  [BUGGY]  final  boolean  both  =  separator  ||  named;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separator  ||  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separator  ||  named;	  final    boolean    both    =    separated    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
31	[BUG]  [BUGGY]  final  boolean  both  =  outer  &&  separator.equals( " "));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  &&  separator.equals( " "));  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  &&  separator.equals( " "));	  final    boolean    both    =    outer    &&    separator;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  final  boolean  both  =  outer  &&  separator.length()  >  maximum;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  &&  separator.length()  >  maximum;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  &&  separator.length()  >  maximum;	  final    boolean    both    =    outer    &&    separator;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  final  boolean  both  =  extern  &&  outer;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extern  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extern  &&  outer;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
34	[BUG]  [BUGGY]  final  boolean  both  =  extern  ||  named;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extern  ||  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extern  ||  named;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
35	[BUG]  [BUGGY]  final  boolean  both  =  named  &&  extern;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  named  &&  extern;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  named  &&  extern;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
36	[BUG]  [BUGGY]  final  boolean  both  =  extern  &&  external;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extern  &&  external;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extern  &&  external;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
37	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
38	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  buffer.append( "[');  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
39	[BUG]  [BUGGY]  final  boolean  both  =  outer  &&  supported;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  &&  supported;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  &&  supported;	  final    boolean    both    =    supported    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
40	[BUG]  [BUGGY]  final  boolean  both  =  supported  ||  outer;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supported  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supported  ||  outer;	  final    boolean    both    =    supported    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  final  boolean  both  =  supportSettings  &&  outer;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supportSettings  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supportSettings  &&  outer;	  final    boolean    both    =    supported    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
42	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append(']');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
43	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append(']');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
44	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( "] ");  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
45	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  buffer.append( "[ ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  buffer.append( "[ ");  }	  if(expanded)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
46	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append( "[ ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append( "[ ");  }	  if(expanded)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
47	[BUG]  [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');	  if(expanded)    {    final    boolean    expanded    =    supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
48	[BUG]  [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');	  if(expanded)    {    final    boolean    expanded    =    supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
49	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  else  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  else  {  buffer.append( ",   ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  else  {  buffer.append( ",   ");  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
50	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append(']');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
51	[BUG]  [BUGGY]  final  boolean  both  =  supported  &&  extended;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supported  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supported  &&  extended;	  final    boolean    both    =    extended    &&    supported;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
52	[BUG]  [BUGGY]  final  boolean  both  =  support  &&  extended;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  support  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  support  &&  extended;	  final    boolean    both    =    extended    &&    supported;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
53	[BUG]  [BUGGY]  final  boolean  both  =  supports  &&  extended;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supports  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supports  &&  extended;	  final    boolean    both    =    extended    &&    supported;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
54	[BUG]  [BUGGY]  final  boolean  both  =  outer!=  &&  expanded;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer!=  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer!=  &&  expanded;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
55	[BUG]  [BUGGY]  final  boolean  both  =  outer  >  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  >  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  >  &&  arguments;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
56	[BUG]  [BUGGY]  final  boolean  both  =  outer  ==  &&  expanded;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ==  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ==  &&  expanded;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
57	[BUG]  [BUGGY]  final  boolean  both  =  outer  <  >  &&  expanded;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  <  >  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  <  >  &&  expanded;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
58	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }	  final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
59	[BUG]  [BUGGY]  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  childSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);	  final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
60	[BUG]  [BUGGY]  final  boolean  both  =  named  ||  extended;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  named  ||  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  named  ||  extended;	  final    boolean    both    =    extended    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  final  boolean  both  =!expanded  ||  named;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  ||  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  ||  named;	  final    boolean    both    =    extended    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  final  boolean  both  =  extended  ||  outer;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extended  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extended  ||  outer;	  final    boolean    both    =    extended    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
64	[BUG]  [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  ||  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
65	[BUG]  [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  ||  outer  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
66	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
67	[BUG]  [BUGGY]  final  boolean  both  =!expanded  &&  extended;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  &&  extended;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  &&  extended;	  final    boolean    both    =!expanded    ||    extended;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
68	[BUG]  [BUGGY]  final  boolean  both  =!expanded  &&  expand;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!expanded  &&  expand;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!expanded  &&  expand;	  final    boolean    both    =!expanded    ||    expand;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  final  boolean  both  =  options  &&  outer;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  options  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  options  &&  outer;	  final    boolean    both    =    options    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
70	[BUG]  [BUGGY]  final  boolean  both  =  options  ||  expanded;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  options  ||  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  options  ||  expanded;	  final    boolean    both    =    options    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  final  boolean  both  =  expanded  &&  options;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  expanded  &&  options;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  expanded  &&  options;	  final    boolean    both    =    options    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  final  boolean  both  =  supported  ||  external;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supported  ||  external;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supported  ||  external;	  final    boolean    both    =    supported    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
73	[BUG]  [BUGGY]  final  boolean  both  =  supported  ||  outer  =  supported;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supported  ||  outer  =  supported;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supported  ||  outer  =  supported;	  final    boolean    both    =    supported    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
74	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
75	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
76	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( ",[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( ",[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( ",[ ");  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
77	[BUG]  [BUGGY]  buffer.append(']',  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append(']',  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append(']',  outer);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( ", ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append(']');  }  else  {  buffer.append( ", ");  }	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
80	[BUG]  [BUGGY]  ||  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  ||  outer)  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	||  outer)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append( "] ");  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append( "] ");	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
83	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  else  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  else  {  buffer.append( ",   ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  else  {  buffer.append( ",   ");  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
84	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  buffer.append(']');	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    else    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
85	[BUG]  [BUGGY]  if(!expanded  &&  outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  outer)  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  outer)  {  buffer.append('[');  }	  if(expanded    ||    outer)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
86	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  separator.equals( " "));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  separator.equals( " "));  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  separator.equals( " "));	  final    boolean    both    =    outer    ||    separator;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
87	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  separator.equals( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  separator.equals( " ");  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  separator.equals( " ");	  final    boolean    both    =    outer    ||    separator;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
88	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  separator.length()  ==  0;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  separator.length()  ==  0;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  separator.length()  ==  0;	  final    boolean    both    =    outer    ||    separator;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
89	[BUG]  [BUGGY]  if(!expanded)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
90	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
91	[BUG]  [BUGGY]  final  boolean  both  =  helpSettings  &&  expanded;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  helpSettings  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  helpSettings  &&  expanded;	  final    boolean    both    =    supportSettings    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
92	[BUG]  [BUGGY]  final  boolean  both  =  helpSettings  &&  outer;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  helpSettings  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  helpSettings  &&  outer;	  final    boolean    both    =    supportSettings    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
93	[BUG]  [BUGGY]  final  boolean  both  =  outer  &&  separated;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  &&  separated;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  &&  separated;	  final    boolean    both    =    outer    ||    separated;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
94	[BUG]  [BUGGY]  final  boolean  both  =  argument  &&  outer;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  argument  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  argument  &&  outer;	  final    boolean    both    =    outer    &&    argument;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  final  boolean  both  =  named  &&  arguments;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  named  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  named  &&  arguments;	  final    boolean    both    =    arguments    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
96	[BUG]  [BUGGY]  final  boolean  both  =  siblings  &&  named;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  siblings  &&  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  siblings  &&  named;	  final    boolean    both    =    arguments    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
97	[BUG]  [BUGGY]  final  boolean  both  =  extended  ||  arguments;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extended  ||  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extended  ||  arguments;	  final    boolean    both    =    arguments    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
98	[BUG]  [BUGGY]  final  boolean  both  =  expanded  ||  arguments;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  expanded  ||  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  expanded  ||  arguments;	  final    boolean    both    =    arguments    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
99	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  argumentMap;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  argumentMap;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  argumentMap;	  final    boolean    both    =    outer    ||    arguments;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
101	[BUG]  [BUGGY]  final  boolean  both  =  argumentMap  &&  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  argumentMap  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  argumentMap  &&  outer;	  final    boolean    both    =    outer    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
102	[BUG]  [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
103	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_ARGUMENT);	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
104	[BUG]  [BUGGY]  buffer.append('['  +  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append('['  +  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append('['  +  outer);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  buffer.append('[').append(outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append('[').append(outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append('[').append(outer);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  &&  outer)  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  &&  outer)  {  buffer.append( "] ");  }	  if(expanded    &&    outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
107	[BUG]  [BUGGY]  final  boolean  both  =  options  &&  named;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  options  &&  named;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  options  &&  named;	  final    boolean    both    =    arguments    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
108	[BUG]  [BUGGY]  final  boolean  both  =!arguments;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!arguments;	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
109	[BUG]  [BUGGY]  final  boolean  both  =!outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!outer;	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
110	[BUG]  [BUGGY]  final  boolean  both  =!exceptional;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!exceptional;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!exceptional;	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
111	[BUG]  [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    }    else    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
112	[BUG]  [BUGGY]  final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    }    else    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
113	[BUG]  [BUGGY]  if(!expanded  &&  outer)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  outer)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  outer)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	  if(!expanded)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  final  boolean  both  =!exceptional  &&  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!exceptional  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!exceptional  &&  outer;	  final    boolean    both    =!expanded    &&    outer;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
115	[BUG]  [BUGGY]  final  boolean  both  =  options  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  options  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  options  &&  arguments;	  final    boolean    both    =    extended    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
116	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append(']');  }	  if(!expanded)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
117	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  Separator.isEmpty(outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  Separator.isEmpty(outer);  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  Separator.isEmpty(outer);	  final    boolean    both    =    outer    ||    separator;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
118	[BUG]  [BUGGY]  buffer.append(']').append(outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append(']').append(outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append(']').append(outer);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
119	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( ", ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( ", ");  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( ", ");  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
120	[BUG]  [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
121	[BUG]  [BUGGY]  final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  named  =!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }	  if(separator!=    null)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
123	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  buffer.append(name);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  &&  outer)  {  buffer.append(name);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  &&  outer)  {  buffer.append(name);  }	  if(expanded)    {    buffer.append(name);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
124	[BUG]  [BUGGY]  final  boolean  both  =  outer  &&  options;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  &&  options;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  &&  options;	  final    boolean    both    =    options    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  separated  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }	  if(separator!=    null)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
127	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  outer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR,  outer);	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  final  boolean  both  =  external  &&  outer;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  external  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  external  &&  outer;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
129	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  &&  outer)  {  buffer.append( "[ ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  &&  outer)  {  buffer.append( "[ ");  }	  if(expanded    &&    outer)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  final  boolean  both  =!supported  ||  expanded;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =!supported  ||  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =!supported  ||  expanded;	  final    boolean    both    =    supported    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
131	[BUG]  [BUGGY]  buffer.append( "[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append( "[');  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append( "[');  }  else  {  buffer.append(']');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
132	[BUG]  [BUGGY]  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append( "[ ");  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append( "[ ");	  if(expanded)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
133	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
134	[BUG]  [BUGGY]  if(!expanded  &&  options)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  options)  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  options)  {  buffer.append('[');  }	  if(!expanded)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
135	[BUG]  [BUGGY]  final  boolean  both  =  outer  >  &&  separator;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  >  &&  separator;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  >  &&  separator;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
136	[BUG]  [BUGGY]  final  boolean  both  =  outer  >  &&  argument;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  >  &&  argument;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  >  &&  argument;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
137	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_FAILURE);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_FAILURE);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_FAILURE);	  final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
138	[BUG]  [BUGGY]  final  boolean  both  =  supportSettings  &&  childSettings;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supportSettings  &&  childSettings;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supportSettings  &&  childSettings;	  final    boolean    both    =    supportSettings    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
139	[BUG]  [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  buffer.append(']');  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  buffer.append(']');	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
140	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  extended  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.get(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.get(DisplaySetting.DISPLAY_GROUP_ERROR);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.get(DisplaySetting.DISPLAY_GROUP_ERROR);  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
142	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append('[');  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
143	[BUG]  [BUGGY]  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  buffer.append(separator);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	buffer.append(separator);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
144	[BUG]  [BUGGY]  final  boolean  both  =  separator  &&  outer;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separator  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separator  &&  outer;	  final    boolean    both    =    outer    &&    separator;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
145	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append(']');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
146	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
147	[BUG]  [BUGGY]  final  boolean  both  =  extended  &&  separator;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extended  &&  separator;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extended  &&  separator;	  final    boolean    both    =    named    &&    extended;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
148	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append(']');  }	  if(separator!=    null)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
149	[BUG]  [BUGGY]  final  boolean  both  =  outer  ||  supported;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  ||  supported;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  ||  supported;	  final    boolean    both    =    extended    &&    supported;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
150	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append('[');  }	  if(separator!=    null)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
151	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append('[');  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
152	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);  }  else  {  buffer.append('[');  }	  final    boolean    expanded    =    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  if(expanded  &&  outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  &&  outer)  {  buffer.append(separator);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  &&  outer)  {  buffer.append(separator);  }	  if(expanded    &&    outer)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
154	[BUG]  [BUGGY]  final  boolean  both  =  separator  ||  outer;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separator  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separator  ||  outer;	  final    boolean    both    =    outer    ||    separator;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
155	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append( "[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  buffer.append( "[');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
156	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
157	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
158	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "[');  }	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
159	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null?  optionMap.getOption( "optional "):  options;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null?  optionMap.getOption( "optional "):  options;  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null?  optionMap.getOption( "optional "):  options;	  if(expanded)    {    buffer.append(   "[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
160	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(!expanded  &&  buffer.length()  >  maximum)  {  buffer.append('[');  }	  if(!expanded)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
161	[BUG]  [BUGGY]  if(expanded)  {  buffer.append( "[] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append( "[] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append( "[] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
162	[BUG]  [BUGGY]  final  boolean  expanded  =  named  &&  outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  named  &&  outer)  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  named  &&  outer)  {  buffer.append('[');  }	  if(expanded    &&    outer)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
163	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  else  {  buffer.append( "[');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    else    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  final  boolean  both  =  outer  >=  &&  expanded;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  outer  >=  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  outer  >=  &&  expanded;	  final    boolean    both    =    outer    >    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
165	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption(separator);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption(separator);	  if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
166	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ");  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ");	  if(expanded)    {    buffer.append(']');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
167	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  buffer.append(separator);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  buffer.append(separator);  }	  if(expanded    ||    outer)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
168	[BUG]  [BUGGY]  final  boolean  both  =  supportedSettings  &&  outer;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supportedSettings  &&  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supportedSettings  &&  outer;	  final    boolean    both    =    supportSettings    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
169	[BUG]  [BUGGY]  final  boolean  both  =  supportedSettings  &&  expanded;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  supportedSettings  &&  expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  supportedSettings  &&  expanded;	  final    boolean    both    =    supportSettings    &&    expanded;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
170	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
171	[BUG]  [BUGGY]  final  boolean  both  =  named  ||  outer;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  named  ||  outer;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  named  ||  outer;	  final    boolean    both    =    outer    ||    named;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
172	[BUG]  [BUGGY]  final  boolean  both  =  extern  &&  separator;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  extern  &&  separator;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  extern  &&  separator;	  final    boolean    both    =    extern    &&    named;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
174	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null)  {  buffer.append( "] ");  }	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
175	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	Option  option  =  optionMap.getOption( "option ")||  optionMap.getOption( "optional ")!=  null  &&  optionMap.getOption( "optional ")!=  null);	  if(expanded)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
176	[BUG]  [BUGGY]  final  boolean  both  =  separator  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  separator  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  separator  &&  arguments;	  final    boolean    both    =    extended    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
177	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  outer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	aughtExceptionHandler.handleMissingException(buffer,  named,  outer);	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
178	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  outer);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  outer);	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
179	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	aughtExceptionHandler.handleMissingException(buffer,  named,  separator);	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
180	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  maximum);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  maximum);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	aughtExceptionHandler.handleMissingException(buffer,  named,  separator,  maximum);	  if(expanded)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
181	[BUG]  [BUGGY]  final  boolean  both  =  expanded  ||  supported;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  expanded  ||  supported;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  expanded  ||  supported;	  final    boolean    both    =    supported    ||    expanded;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
182	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }  else  {  buffer.append('[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);  }  else  {  buffer.append('[');  }	  final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
183	[BUG]  [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded  ||  outer)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
184	[BUG]  [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  expanded  =  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);	  if(expanded)    {    final    boolean    expanded    =    supportSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
185	[BUG]  [BUGGY]  if(expanded)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  buffer.append(separator);  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  buffer.append(separator);  }	  if(expanded)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  boolean  both  =!expanded;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  boolean  both  =!expanded;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	boolean  both  =!expanded;	  final    boolean    both    =!expanded;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
187	[BUG]  [BUGGY]  final  boolean  both  =  external  &&  arguments;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  final  boolean  both  =  external  &&  arguments;  [BUGGY]        if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	final  boolean  both  =  external  &&  arguments;	  final    boolean    both    =    expanded    &&    arguments;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
188	[BUG]  [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  named  =  !expanded  ||  ((name  !=  null)  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  final  boolean  arguments  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  final  boolean  outer  =  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);      [BUGGY]  if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append( "[');  }  [BUGGY]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  if  (both)  {  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	320	320	7	replace	if(expanded)  {  final  boolean  expanded  =  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);  }  else  {  buffer.append( "[');  }	  if(expanded)    {    final    boolean    expanded    =    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);    }    else    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
