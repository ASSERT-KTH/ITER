bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(prefix);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(separator  +  1);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
3	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(separator,  buffer);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
4	[BUG]  [BUGGY]  i.setCurrentLength(buffer.length()  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentLength(buffer.length()  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentLength(buffer.length()  +  1);	  i.setCurrentLength(buffer.length());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
5	[BUG]  [BUGGY]  i.setCurrentLength(0);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentLength(0);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentLength(0);	  i.setCurrentLength(buffer.length());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
6	[BUG]  [BUGGY]  i.removeChild(buffer.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeChild(buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeChild(buffer.length());	  i.setCurrentLength(buffer.length());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
7	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  >  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  >  minimum)  {	  if(expanded    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  <  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  <  maximum)  {	  if(expanded    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  ==  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  ==  maximum)  {	  if(expanded    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  2);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
13	[BUG]  [BUGGY]  if(previous  ||  expanded  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  ||  expanded  &&  buffer.length()  >  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  ||  expanded  &&  buffer.length()  >  minimum)  {	  if(expanded    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  if(primary  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(primary  &&  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(primary  &&  buffer.length()  >  maximum)  {	  if(expanded    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
16	[BUG]  [BUGGY]  if(!optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
17	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
18	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ", "separator ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ", "separator ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption( "option ", "separator ");	  Option    option    =    optionMap.getOption(   "option   ",    separator);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefixes  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefixes  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefixes  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
21	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefix  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(separator  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(separator  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
23	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(arg);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(arg);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
25	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator,  buffer);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
26	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefix,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefix,  separator);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
27	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(separator,  comp);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  ||!prefixes.isEmpty());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  ||!prefixes.isEmpty());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!prefixes.isEmpty()  ||!prefixes.isEmpty());	  Preconditions.checkState(!prefixes.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.length()  >  maximum);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.length()  >  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.length()  >  maximum);	  Preconditions.checkState(!prefixes.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  ||  prefixes.isEmpty());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  ||  prefixes.isEmpty());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!prefixes.isEmpty()  ||  prefixes.isEmpty());	  Preconditions.checkState(!prefixes.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
31	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.getOption( "option ",  separator);	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "options ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.getOption( "options ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.getOption( "options ");	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  Separator.NONE);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.getOption( "option ",  Separator.NONE);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.getOption( "option ",  Separator.NONE);	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "  (   ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "  (   ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "  (   ");  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  i.set(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(prefix,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(prefix,  buffer);	  i.set(prefix,    separator);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
36	[BUG]  [BUGGY]  i.set(prefix,  separator,  maximum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(prefix,  separator,  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(prefix,  separator,  maximum);	  i.set(prefix,    separator);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
37	[BUG]  [BUGGY]  i.set(prefix,  name);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(prefix,  name);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(prefix,  name);	  i.set(prefix,    separator);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
38	[BUG]  [BUGGY]  i.set(prefix,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(prefix,  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(prefix,  null);	  i.set(prefix,    separator);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
39	[BUG]  [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(expanded    ||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
40	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  expanded  ||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(expanded    ||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
41	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "opt ",  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption( "opt ",  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption( "opt ",  separator);	  Option    option    =    optionMap.getOption(   "opt   ");    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption( "opt ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.getOption( "opt ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.getOption( "opt ");	  Option    option    =    optionMap.getOption(   "opt   ");    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
43	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
46	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(arg));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(arg));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(arg));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(display));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(display));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(display));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  if(expanded  ||  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  optionMap.containsKey(arg))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  optionMap.containsKey(arg))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
50	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  optionMap.containsKey(arg))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  optionMap.containsKey(arg))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  <  minimum);	  Preconditions.checkState(childSettings.size()    <    maximum);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
55	[BUG]  [BUGGY]  if(!optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
56	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.NONE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.NONE))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
57	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_ERROR))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
58	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
59	[BUG]  [BUGGY]  buffer.append( ": ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( ": ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( ": ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
60	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
61	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
62	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionMap.contains(DisplaySetting.DISPLAY_GROUP_SINGLE))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
63	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(separator))  {  i.remove();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(separator))  {  i.remove();  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.containsKey(separator))  {  i.remove();  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  i.remove();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  i.remove();  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  i.remove();  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  childSettings.remove();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  childSettings.remove();  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  childSettings.remove();  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
66	[BUG]  [BUGGY]  Option  option  =  optionMap.get(buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(buffer,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(buffer,  arg);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
67	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(arg,  buffer.length);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(arg,  buffer.length);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefix,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefix,  buffer);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.get(buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(buffer,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(buffer,  arg);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
70	[BUG]  [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
71	[BUG]  [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);	  Preconditions.checkState(childSettings.size()    >=    maximum);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
73	[BUG]  [BUGGY]  if(!expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
74	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
75	[BUG]  [BUGGY]  if(previous  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  ||  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  ||  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  if(previous  >  maximum  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  >  maximum  &&  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  >  maximum  &&  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  if(previous  >  maximum  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  >  maximum  ||  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  >  maximum  ||  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  if(previous  <  maximum  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  <  maximum  ||  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  <  maximum  ||  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  if(expanded  ||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  options.containsKey(separator))  {	  if(expanded    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  if(!expanded  ||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  ||  optionMap.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  ||  optionMap.containsKey(separator))  {	  if(expanded    ||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(childSettings!=  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings!=  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings!=  null);	  Preconditions.checkState(parent!=    null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(parent  ==  null);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(parent  ==  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(parent  ==  null);	  Preconditions.checkState(parent!=    null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(this.parent!=  null);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(this.parent!=  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(this.parent!=  null);	  Preconditions.checkState(parent!=    null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
84	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  ==  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  ==  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  ==  minimum)  {	  if(expanded    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
85	[BUG]  [BUGGY]  if(previous  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  &&  buffer.length()  ==  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  &&  buffer.length()  ==  maximum)  {	  if(expanded    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
86	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefixes);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this.prefixes);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this.prefix,  this.maximum);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
88	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  this.optionMap.getOption(this.prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  this.optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options().get(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options().get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
90	[BUG]  [BUGGY]  Option  optionMap  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  options.get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  options.get(separator);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
91	[BUG]  [BUGGY]  Option  optionMap  =  newOptionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  newOptionMap().get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  newOptionMap().get(separator);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
92	[BUG]  [BUGGY]  Option  optionMap  =(OptionMap)optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =(OptionMap)optionMap.get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =(OptionMap)optionMap.get(separator);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
93	[BUG]  [BUGGY]  Option  optionMap  =  buffer.getOptionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  buffer.getOptionMap().get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  buffer.getOptionMap().get(separator);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(!both  &&  buffer.length()  >  maximum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!both  &&  buffer.length()  >  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!both  &&  buffer.length()  >  maximum);	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(!expanded);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!expanded);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!expanded);	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(!both  ||  buffer.length()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!both  ||  buffer.length()  ==  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!both  ||  buffer.length()  ==  maximum);	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
97	[BUG]  [BUGGY]  buffer.append(')',  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(')',  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(')',  separator);	  buffer.append(')');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
98	[BUG]  [BUGGY]  buffer.append( ");n ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( ");n ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( ");n ");	  buffer.append(')');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
99	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ", "Separator.NONE ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ", "Separator.NONE ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption( "option ", "Separator.NONE ");	  Option    option    =    optionMap.getOption(   "option   ",    Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ", "None ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ", "None ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption( "option ", "None ");	  Option    option    =    optionMap.getOption(   "option   ",    Separator.NONE);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
101	[BUG]  [BUGGY]  if(optionMap.containsKey(prefix)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(prefix)||  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(prefix)||  options.containsKey(separator))  {	  if(optionMap.containsKey(separator)||    options.containsKey(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
102	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(prefix))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(prefix))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  options.containsKey(prefix))  {	  if(optionMap.containsKey(separator)||    options.containsKey(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
103	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.containsKey(arg))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.containsKey(arg))  {	  if(optionMap.containsKey(separator)||    options.containsKey(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
104	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
105	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
107	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
108	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
109	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
110	[BUG]  [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettings.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
111	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {	  if(!expanded    &&    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(prefix);	  Option    option    =    optionMap.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefix  +  1);	  Option    option    =    optionMap.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  2);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(prefixes  ==  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(prefixes  ==  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(prefixes  ==  null);	  Preconditions.checkState(prefixes!=    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
117	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
118	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
119	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
120	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
121	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this,  comp);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
122	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.getOption(this,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.getOption(this,  separator);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
124	[BUG]  [BUGGY]  buffer.append( "none ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( "none ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( "none ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
125	[BUG]  [BUGGY]  buffer.append( "  (null) ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( "  (null) ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( "  (null) ");	  buffer.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
126	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
127	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
128	[BUG]  [BUGGY]  if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
129	[BUG]  [BUGGY]  if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
130	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
131	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
132	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
133	[BUG]  [BUGGY]  i.set(buffer,  buffer.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(buffer,  buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(buffer,  buffer.length());	  i.set(buffer,    buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  i.set(buffer,  buffer.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(buffer,  buffer.length()  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(buffer,  buffer.length()  +  1);	  i.set(buffer,    buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
135	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
136	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(separator  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(separator  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
138	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)||  options.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
139	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)||  optionMap.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
140	[BUG]  [BUGGY]  if(!optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.containsKey(arg))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.containsKey(arg))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
141	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  >  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  separator.length()  >  minimum)  {	  if(optionMap.containsKey(separator)&&    separator.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
142	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  separator.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  separator.length()  >  maximum)  {	  if(optionMap.containsKey(separator)&&    separator.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
143	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  <  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  separator.length()  <  maximum)  {	  if(optionMap.containsKey(separator)&&    separator.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.getOption(comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.getOption(comp);	  Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
145	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
146	[BUG]  [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
147	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
148	[BUG]  [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(expanded    ||    options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
149	[BUG]  [BUGGY]  if(!expanded  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  options.containsKey(separator))  {	  if(!expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
150	[BUG]  [BUGGY]  if(!optionMap.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.containsKey(separator)||  options.containsKey(separator))  {	  if(!optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.getOption(arg);	  if(optionMap!=    null)    {    optionMap.put(arg,    buffer);    }    else    {    buffer.append(   "    (null)   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
152	[BUG]  [BUGGY]  if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "none ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "none ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "none ");  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "  (null) ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "  (null) ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator))  {  i.remove();  }  else  {  buffer.append( "  (null) ");  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
154	[BUG]  [BUGGY]  if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "n   ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "n   ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg))  {  i.remove();  }  else  {  buffer.append( "n   ");  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
155	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  buffer.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  buffer.append( "n ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  optionMap.containsKey(separator))  {  buffer.append( "n ");  }	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
156	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.NONE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  optionMap.contains(DisplaySetting.NONE))  {	  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
157	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.NONE))  {	  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
158	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
159	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  >  maximum  ||  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
160	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(buffer.length()  ==  0);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(buffer.length()  ==  0);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(buffer.length()  ==  0);	  Preconditions.checkNotNull(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
162	[BUG]  [BUGGY]  buffer.append( "  (n ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( "  (n ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( "  (n ");	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
163	[BUG]  [BUGGY]  i.removeLength(buffer.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeLength(buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeLength(buffer.length());	  i.setCurrentLength(buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
164	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
165	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
166	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
167	[BUG]  [BUGGY]  if(options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.containsKey(separator))  {	  if(expanded    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.getOption(separator)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.getOption(separator)!=  null)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  options.getOption(separator)!=  null)  {	  if(optionMap.containsKey(separator)||    options.getOption(separator)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
169	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(separator)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(separator)  ==  null)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.getOption(separator)  ==  null)  {	  if(optionMap.containsKey(separator)||    options.getOption(separator)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
170	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(comp)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(comp)!=  null)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.getOption(comp)!=  null)  {	  if(optionMap.containsKey(separator)||    options.getOption(separator)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
171	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(prefixes,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
172	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(prefix,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(comp,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
174	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "none "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "none "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "none "));	  Preconditions.checkState(childSettings.contains(   "n   "));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "None "));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "None "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "None "));	  Preconditions.checkState(childSettings.contains(   "n   "));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "null "));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "null "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "null "));	  Preconditions.checkState(childSettings.contains(   "n   "));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
177	[BUG]  [BUGGY]  i.removeChild(prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeChild(prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeChild(prefix);	  i.removeChild(separator);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
178	[BUG]  [BUGGY]  i.removeChild(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeChild(comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeChild(comp);	  i.removeChild(separator);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
179	[BUG]  [BUGGY]  i.removeChild(previous);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeChild(previous);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeChild(previous);	  i.removeChild(separator);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
180	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
181	[BUG]  [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
182	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.NONE)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
183	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(prefixes,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
184	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(prefix,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
185	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
186	[BUG]  [BUGGY]  Option  optionMap  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  options.get(arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  options.get(arg);	  Option    optionMap    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
187	[BUG]  [BUGGY]  Option  optionMap  =  optionMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  optionMap.get(prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  optionMap.get(prefix);	  Option    optionMap    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
188	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(prefixes);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()!=  minimum);	  Preconditions.checkState(childSettings.size()!=    maximum);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
190	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  minimum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  >  minimum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  >  minimum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    buffer.length()    >    maximum    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
191	[BUG]  [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  ||  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  ||  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    buffer.length()    >    maximum    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
192	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    buffer.length()    >    maximum    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "*));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "*));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "*));	  Preconditions.checkState(childSettings.contains(   "*   "));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
194	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( ".* "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( ".* "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( ".* "));	  Preconditions.checkState(childSettings.contains(   "*   "));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
195	[BUG]  [BUGGY]  Option  option  =  options.get(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(comp);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
196	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  optionMap.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  optionMap.containsKey(separator))  {	  if(optionMap.containsKey(separator)||    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
197	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  minimum)  {	  if(!expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
198	[BUG]  [BUGGY]  if(!expanded  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  ||  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  ||  buffer.length()  >  maximum)  {	  if(!expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
199	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  <  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  <  maximum)  {	  if(!expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
200	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  options.containsKey(separator))  {	  if(optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
201	[BUG]  [BUGGY]  if(optionMap.containsKey(prefix)||  options.containsKey(prefix))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(prefix)||  options.containsKey(prefix))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(prefix)||  options.containsKey(prefix))  {	  if(optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
202	[BUG]  [BUGGY]  optionMap.put(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  optionMap.put(separator,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	optionMap.put(separator,  buffer);	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
203	[BUG]  [BUGGY]  optionMap.put(arg,  buffer.toString());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  optionMap.put(arg,  buffer.toString());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	optionMap.put(arg,  buffer.toString());	  optionMap.put(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
204	[BUG]  [BUGGY]  buffer.append( "  - ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( "  - ");  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( "  - ");	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
205	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED,  separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED,  separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_FAILED,  separator))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
206	[BUG]  [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
207	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "option ",  name);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption( "option ",  name);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption( "option ",  name);	  Option    option    =    optionMap.getOption(   "option   ",    separator);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
208	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {	  if(expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
209	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()  ==  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()  ==  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    buffer.length()    >    maximum    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
210	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
211	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this,  name);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
212	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this,  arg);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
213	[BUG]  [BUGGY]  if(!expanded  &&  optionsMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  optionsMap.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  optionsMap.containsKey(separator))  {	  if(!expanded    &&    optionMap.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
214	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.appendSeparator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this.appendSeparator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this.appendSeparator);	  Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
215	[BUG]  [BUGGY]  i.set(separator,  prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(separator,  prefix);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(separator,  prefix);	  i.set(prefix,    separator);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(this.prefixes!=  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(this.prefixes!=  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(this.prefixes!=  null);	  Preconditions.checkState(prefixes!=    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
217	[BUG]  [BUGGY]  if(!expanded  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
218	[BUG]  [BUGGY]  if(!expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
219	[BUG]  [BUGGY]  if(previous  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  i.removeCurrentLength(buffer.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeCurrentLength(buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeCurrentLength(buffer.length());	  i.setCurrentLength(buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
221	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
222	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)||  optionsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
223	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.get(separator  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
224	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(previous  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-');  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-');  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!prefixes.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-');	  Preconditions.checkState(!prefixes.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
226	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  separator.length()  ==  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  separator.length()  ==  maximum)  {	  if(optionMap.containsKey(separator)&&    separator.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
227	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(optionMap.containsKey(arg)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
229	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(prefix))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)||  options.containsKey(prefix))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)||  options.containsKey(prefix))  {	  if(optionMap.containsKey(separator)||    options.containsKey(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(buffer.length()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(buffer.length()  ==  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(buffer.length()  ==  maximum);	  Preconditions.checkNotNull(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
231	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  +  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(prefix  +  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(prefix  +  separator);	  Option    option    =    optionMap.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "provider "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "provider "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "provider "));	  Preconditions.checkState(childSettings.contains(   "n   "));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
233	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionsMap.getOption(separator);	  Option    option    =    optionsMap.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
234	[BUG]  [BUGGY]  Option  optionMap  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  optionMap.get(separator  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  optionMap.get(separator  +  1);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
235	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
236	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  ==  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  ==  maximum)  {	  if(!expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
237	[BUG]  [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
238	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
239	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.NONE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.NONE))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
240	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "* ")||  childSettings.contains( "* "));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "* ")||  childSettings.contains( "* "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "* ")||  childSettings.contains( "* "));	  Preconditions.checkState(childSettings.contains(   "*   "));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
241	[BUG]  [BUGGY]  if(expanded  &&  options.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  options.containsKey(arg))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  options.containsKey(arg))  {	  if(expanded    &&    optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
242	[BUG]  [BUGGY]  buffer.append(''+  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(''+  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(''+  separator);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
243	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
244	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(previous  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
245	[BUG]  [BUGGY]  buffer.append(optionMap.get(separator));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(optionMap.get(separator));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(optionMap.get(separator));	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
246	[BUG]  [BUGGY]  buffer.append(optionMap.get(separator)).remove();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(optionMap.get(separator)).remove();  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(optionMap.get(separator)).remove();	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
247	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg,  buffer.toString());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(arg,  buffer.toString());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(arg,  buffer.toString());	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(i.hasNext());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(i.hasNext());	  if(optionMap.containsKey(separator))    {    i.remove();    }    else    {    buffer.append(   "    (   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
249	[BUG]  [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append( "  if(both)  {  buffer.append( "  ( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
250	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(arg,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
251	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_ERROR))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_ERROR))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.EXPLAY_ERROR))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
252	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_FAILURE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.EXPLAY_FAILURE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(DisplaySetting.EXPLAY_FAILURE))  {	  if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(!both  ||  buffer.charAt(buffer.length()  -  1)!=  'n');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!both  ||  buffer.charAt(buffer.length()  -  1)!=  'n');  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!both  ||  buffer.charAt(buffer.length()  -  1)!=  'n');	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
254	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer.length);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(separator,  buffer.length);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
255	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_OPTIONAL)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.DISPLAY_OPTIONAL)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.DISPLAY_OPTIONAL)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
256	[BUG]  [BUGGY]  i.removeChild(this);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.removeChild(this);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.removeChild(this);	  i.removeChild(separator);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
257	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this.prefix  +  separator);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
258	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix,  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this.prefix,  separator);	  Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
259	[BUG]  [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
260	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_OPTIONAL))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
261	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_UNKNOWN))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_UNKNOWN))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_UNKNOWN))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
262	[BUG]  [BUGGY]  Option  option  =  optionMap.get(partial,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(partial,  comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(partial,  comp);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
263	[BUG]  [BUGGY]  i.setCurrentLength(buffer.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentLength(buffer.length()  -  2);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentLength(buffer.length()  -  2);	  i.setCurrentLength(buffer.length());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
264	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()!=  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  buffer.length()!=  minimum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  buffer.length()!=  minimum)  {	  if(expanded    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
265	[BUG]  [BUGGY]  Option  option  =  optionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap().get(separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
266	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)||  options.getOption(separator)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)||  options.getOption(separator)!=  null)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)||  options.getOption(separator)!=  null)  {	  if(optionMap.containsKey(separator)||    options.getOption(separator)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
267	[BUG]  [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(prefix)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(separator)||  options.getOption(prefix)!=  null)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(separator)||  options.getOption(prefix)!=  null)  {	  if(optionMap.containsKey(separator)||    options.getOption(separator)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.NONE));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.UNKNOWN));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.UNKNOWN));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.UNKNOWN));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
271	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_ERROR)||  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_GROUP_ERROR)||  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_GROUP_ERROR)||  options.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
272	[BUG]  [BUGGY]  i.remove(buffer,  buffer.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.remove(buffer,  buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.remove(buffer,  buffer.length());	  i.set(buffer,    buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
273	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_FAILURE))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_FAILURE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_FAILURE))  {	  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
274	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_ERROR))  {	  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
275	[BUG]  [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_FAILURE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(options.contains(DisplaySetting.EXPLAY_FAILURE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(options.contains(DisplaySetting.EXPLAY_FAILURE))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
276	[BUG]  [BUGGY]  if(optionMap.containsKey(arg)&&  optionMap.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.containsKey(arg)&&  optionMap.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.containsKey(arg)&&  optionMap.containsKey(separator))  {	  if(optionMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
277	[BUG]  [BUGGY]  if(expanded  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  options.containsKey(separator)||  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  options.containsKey(separator)||  options.containsKey(separator))  {	  if(expanded    &&    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
278	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  arg);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
279	[BUG]  [BUGGY]  buffer.append(separator).append('  ');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(separator).append('  ');  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(separator).append('  ');	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
280	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!expanded    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
281	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  arg);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
282	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  outer);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
283	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.getOption(this);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.getOption(this);	  Option    option    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
284	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
285	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  comp.options);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator,  comp.options);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator,  comp.options);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
286	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator,  arg);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator,  arg);	  Option    option    =    optionMap.get(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED));	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkState(!children.isEmpty());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!children.isEmpty());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!children.isEmpty());	  Preconditions.checkState(!both);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains( "next() "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains( "next() "));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains( "next() "));	  Preconditions.checkState(childSettings.contains(   "n   "));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
291	[BUG]  [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  buffer.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!expanded    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
292	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(separator,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(separator,  buffer);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
293	[BUG]  [BUGGY]  Option  option  =  optionMap.get(partial,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(partial,  buffer);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(partial,  buffer);	  Option    option    =    optionMap.get(arg,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.contains(DisplaySetting.DISPLAY_GROUP_FAILED));	  Preconditions.checkState(childSettings.contains(   "));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(prefixes.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(prefixes.size()  ==  maximum);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(prefixes.size()  ==  maximum);	  Preconditions.checkState(prefixes!=    null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
296	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator  -  2);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
297	[BUG]  [BUGGY]  if(optionMap!=  null)  {  optionMap.put(separator,  buffer);  }  else  {  buffer.append( "  (null) ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap!=  null)  {  optionMap.put(separator,  buffer);  }  else  {  buffer.append( "  (null) ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap!=  null)  {  optionMap.put(separator,  buffer);  }  else  {  buffer.append( "  (null) ");  }	  if(optionMap!=    null)    {    optionMap.put(arg,    buffer);    }    else    {    buffer.append(   "    (null)   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
298	[BUG]  [BUGGY]  if(!optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!optionMap.containsKey(separator)&&  options.containsKey(separator))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!optionMap.containsKey(separator)&&  options.containsKey(separator))  {	  if(optionMap.containsKey(separator)||    options.containsKey(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
300	[BUG]  [BUGGY]  Option  optionMap  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  optionMap.get(separator  -  1);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  optionMap.get(separator  -  1);	  Option    optionMap    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
301	[BUG]  [BUGGY]  i.setCurrentLength(buffer,  separator.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentLength(buffer,  separator.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentLength(buffer,  separator.length());	  i.setCurrentLength(buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
302	[BUG]  [BUGGY]  i.setCurrentLength(buffer,  buffer.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentLength(buffer,  buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentLength(buffer,  buffer.length());	  i.setCurrentLength(buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
303	[BUG]  [BUGGY]  if(expanded  &&  childSettings.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(expanded  &&  childSettings.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(expanded  &&  childSettings.length()  >  maximum  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    buffer.length()    >    maximum    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
304	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  +  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator  +  2);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator  +  2);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
305	[BUG]  [BUGGY]  Preconditions.checkState(this.childSettings!=  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(this.childSettings!=  null);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(this.childSettings!=  null);	  Preconditions.checkState(parent!=    null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
306	[BUG]  [BUGGY]  buffer.append(separator).append(')');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append(separator).append(')');  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append(separator).append(')');	  buffer.append(')');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
307	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_FAILURE))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_FAILURE))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_FAILURE))  {	  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
308	[BUG]  [BUGGY]  Option  optionMap  =  optionMap.get(defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  optionMap  =  optionMap.get(defaultOptionMap);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  optionMap  =  optionMap.get(defaultOptionMap);	  Option    optionMap    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
309	[BUG]  [BUGGY]  buffer.append('  (');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  buffer.append('  (');  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	buffer.append('  (');	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkArgument(buffer.length()  ==  0);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkArgument(buffer.length()  ==  0);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkArgument(buffer.length()  ==  0);	  Preconditions.checkNotNull(prefixes,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
311	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  options.get(separator,  comp);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  options.get(separator,  comp);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
312	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.isEmpty(),  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Preconditions.checkState(!prefixes.isEmpty(),  separator);  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Preconditions.checkState(!prefixes.isEmpty(),  separator);	  Preconditions.checkState(!prefixes.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
313	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
314	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
315	[BUG]  [BUGGY]  i.set(buffer,  separator.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.set(buffer,  separator.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.set(buffer,  separator.length());	  i.set(buffer,    buffer.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
316	[BUG]  [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(!expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_FAILED))  {	  if(!expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_FAILED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
317	[BUG]  [BUGGY]  i.setCurrentStart(buffer.length());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  i.setCurrentStart(buffer.length());  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	i.setCurrentStart(buffer.length());	  i.setCurrentLength(buffer.length());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
318	[BUG]  [BUGGY]  if(optionMap!=  null)  {  optionMap.put(arg,  buffer);  }  else  {  buffer.append( "  (none ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap!=  null)  {  optionMap.put(arg,  buffer);  }  else  {  buffer.append( "  (none ");  }  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap!=  null)  {  optionMap.put(arg,  buffer);  }  else  {  buffer.append( "  (none ");  }	  if(optionMap!=    null)    {    optionMap.put(arg,    buffer);    }    else    {    buffer.append(   "none   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
319	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  Option  option  =  optionMap.get(separator).getOption();  [BUGGY]      if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	Option  option  =  optionMap.get(separator).getOption();	  if(optionMap.containsKey(separator))    {    i.remove();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
320	[BUG]  [BUGGY]  if(previous  >=  maximum  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous  >=  maximum  &&  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous  >=  maximum  &&  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
321	[BUG]  [BUGGY]  if(previous!=  null  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(previous!=  null  &&  buffer.length()  >  maximum)  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(previous!=  null  &&  buffer.length()  >  maximum)  {	  if(previous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
322	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
323	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (named)  {  buffer.append(name);  }  if  (both)  {  buffer.append(     "  (     ");  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);  }    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	334	334	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
