projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()==maximum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()>maximum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()==minimum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.contains(""));
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkNotNull(prefixes);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()>maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}else{buffer.append(",");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}else{buffer.append("n");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.remove();
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption("option");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.contains("));
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.contains("n"));
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)||options.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)||optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(arg)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(arg);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(prefix);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(separator,buffer);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(this.prefix);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded||buffer.length()>maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()>minimum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(previous&&buffer.length()>maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded||optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&optionMap.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&options.containsKey(separator)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append("(");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append('');
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append("n");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)){i.remove();}else{buffer.append("n");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)){i.remove();}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)){i.remove();}else{buffer.append("(");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption("option",separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionsMap.getOption("option");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption("option",Separator.NONE);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(arg);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334optionMap.put(arg,buffer);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(arg,buffer);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}else{buffer.append("null");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}else{buffer.append("none");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap!=null){optionMap.put(arg,buffer);}else{buffer.append("(null)");}
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334OptionoptionMap=optionMap.get(arg);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&buffer.length()>maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&buffer.length()>maximum&&buffer.charAt(buffer.length()-1)!='/'){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&buffer.length()>maximum&&buffer.charAt(buffer.length()-1)!='-'){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded||options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded||options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(options.contains(DisplaySetting.DISPLAY_GROUP_FAILED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()==maximum+1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded||options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)||options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=options.get(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionsMap.get(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=newOptionMap().get(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(prefix);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()>minimum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()<maximum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()>maximum+1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()>=maximum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()!=maximum);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(separator+1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)||options.containsKey(prefix)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()==maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(arg)||options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_FAILED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption("opt");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(prefixes!=null);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(!prefixes.isEmpty());
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkNotNull(prefixes,buffer);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&optionMap.containsKey(arg)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append(')');
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334buffer.append("");
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.setCurrentLength(buffer.length());
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.set(buffer,buffer.length()-1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.setCurrentLength(buffer.length()-1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.contains("*"));
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(arg)||options.contains(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(childSettings.size()==maximum,childSettings.size());
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(separator,comp);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.get(separator-1);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()>maximum&&buffer.charAt(buffer.length()-1)!='/'){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()>maximum&&childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(expanded&&buffer.length()>maximum&&buffer.charAt(buffer.length()-1)!='-'){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(!both);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Preconditions.checkState(parent!=null);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(this,separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(!expanded&&optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.removeChild(separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334i.set(prefix,separator);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(separator,comp);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334Optionoption=optionMap.getOption(comp);
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(DisplaySetting.EXPLAY_GROUP_EXPANDED)){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)&&separator.length()>maximum){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334if(optionMap.containsKey(separator)||options.getOption(separator)!=null){
projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java334OptionoptionMap=optionMap.get(separator);
