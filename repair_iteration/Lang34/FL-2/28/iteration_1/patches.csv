bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  entry  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  entry	88	None	replace
2	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
3	[BUG]  [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
4	[BUG]  [BUGGY]  For(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  For(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	For(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  	88	None	replace
5	[BUG]  [BUGGY]  if(m  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
6	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.keySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.keySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.keySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
7	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  map.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  map.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  map.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
8	[BUG]  [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
9	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  	88	None	replace
10	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  this.m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  this.m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  this.m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
11	[BUG]  [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  	88	None	replace
12	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  continue  false;  }  [CE]  [FE]                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  continue  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  continue  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  	88	None	replace
13	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.getEntrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.getEntrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.getEntrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
14	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.values())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.values())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.values())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
15	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
16	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
17	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  arraySeparator  =  m.getValue();  if(arraySeparator  ==  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
18	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.getEntryCount())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.getEntryCount())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.getEntryCount())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
19	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
20	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  array  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  array  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  array  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
21	[BUG]  [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  [CE]  illegal  start  of  expression  [FE]                                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null)  {	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
22	[BUG]  [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
23	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  entry  [FE]                                                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator  ==  null)  {  return  false;  }	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  entry	88	None	replace
24	[BUG]  [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null  [CE]  [FE]                                                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null  [BUGGY]    return  m.containsKey(value);  }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  Map.Entry  <  Object,  Object>  arraySeparator  =  entry.getValue();  if(arraySeparator!=  null	      for(Map.Entry    <    Object,    Object>    entry    :    m.entrySet())    {    Map.Entry    <    Object,    Object>    arraySeparator    =    entry.getValue();    if(arraySeparator!=    null)    {    return    false;    }    	non-compiled	[CE]  	88	None	replace
25	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  value  ==  null  &&  m.containsKey(value);  [CE]  not  a  statement  [FE]    StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  value  ==  null  &&  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    value  ==  null  &&  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	70	None	add
26	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  value!=  null  &&  m.containsKey(value);  [CE]  not  a  statement  [FE]      StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  value!=  null  &&  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    value!=  null  &&  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	70	None	add
27	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  Object  value  =  m.getValue();  [CE]  variable  value  is  already  defined  in  method  isRegistered(Object)  [FE]        StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  Object  value  =  m.getValue();  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    Object  value  =  m.getValue();	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  isRegistered(Object)	70	None	add
28	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
29	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey().equals(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
30	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
31	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
32	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()!=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()!=  entry.getValue();  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()!=  entry.getValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
33	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.containsKey(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.containsKey(entry.getKey());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.containsKey(entry.getKey());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
34	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()  ==  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()  ==  entry.getValue();  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getKey()  ==  entry.getValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
35	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
36	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                          StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getKey());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
37	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
38	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!(entry.getValue()  instanceof  String))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!(entry.getValue()  instanceof  String))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!(entry.getValue()  instanceof  String))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
39	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
40	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                                  StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
41	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                    StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
42	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
43	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
44	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  false;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getKey()))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
45	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                            StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  value  =  entry.getValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
46	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!isRegistered(entry.getKey()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                              StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!isRegistered(entry.getKey()))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(!isRegistered(entry.getKey()))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
47	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                                                StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value!=  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.equals(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
48	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getValue()!=  null;  }  [CE]  illegal  start  of  expression  [FE]                                                  StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getValue()!=  null;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    if(value  ==  null)  {  for(Map.Entry  <  Object,  Object>  entry  :  value.entrySet())  {  return  entry.getValue()!=  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
49	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                                    StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  false;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getKey().equals(entry.getValue()))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
50	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.equals(entry.getKey()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                                      StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.equals(entry.getKey()))  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.equals(entry.getKey()))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
51	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                                        StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  false;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  String  value  =  entry.getKey();  if(value!=  null  ||  value.equals(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
52	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  entry.getValue()!=  null;  }  [CE]  illegal  start  of  expression  [FE]                                                          StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  entry.getValue()!=  null;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entries.containsKey(entry.getKey()))  {  return  entry.getValue()!=  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
53	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                                            StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
54	[BUG]  [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  entry.getKey().endsWith(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                                                              StackOverflowError    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return  value  ==  null  &&  m.containsKey(value);  for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  entry.getKey().endsWith(entry.getValue());  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return    value    ==    null    &&    m.containsKey(value);    for(Map.Entry  <  Object,  Object>  entry  :  m.entrySet())  {  if(entry.getValue()  ==  null)  {  return  entry.getKey().endsWith(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
55	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
56	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
57	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
58	[BUG]  [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
60	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
61	[BUG]  [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  [CE]  illegal  start  of  expression  [FE]                                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
62	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
63	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =(Map  <  Object,  Object>)m.clone();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =(Map  <  Object,  Object>)m.clone();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =(Map  <  Object,  Object>)m.clone();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
64	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  }  [CE]  illegal  start  of  expression  [FE]                                                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
65	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.  [CE]  <identifier>  expected  [FE]                                                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  <identifier>  expected	84	None	replace
66	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()  [CE]  [FE]                                                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  	84	None	replace
67	[BUG]  [BUGGY]  ||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.  [CE]  illegal  start  of  expression  [FE]                                                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  ||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
68	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i  [CE]  [FE]                                                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  	84	None	replace
69	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  map.get(value);  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
70	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  [FE]                                                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  For(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	For(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  	84	None	replace
71	[BUG]  [BUGGY]  ||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                                                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  ||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	||  m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
72	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  [CE]  illegal  start  of  expression  [FE]                                                                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
73	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==  }  [CE]  illegal  start  of  expression  [FE]                                                                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
74	[BUG]  [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                                                                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	HashMap  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
75	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==  [CE]  illegal  start  of  expression  [FE]                                                                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  ==	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
76	[BUG]  [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparators.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                                                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparators.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparators.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
77	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++  [CE]  illegal  start  of  expression  [FE]                                                                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
78	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  >=  [CE]  illegal  start  of  expression  [FE]                                                                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  >=  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  >=	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
79	[BUG]  [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
80	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
81	[BUG]  [BUGGY]  Set  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Set  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Set  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
82	[BUG]  [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
83	[BUG]  [BUGGY]  Set  <  Object,  Object>  arraySeparator  =  Sets.newHashSet();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Set  <  Object,  Object>  arraySeparator  =  Sets.newHashSet();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Set  <  Object,  Object>  arraySeparator  =  Sets.newHashSet();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
84	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  entry.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  entry.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  entry.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
85	[BUG]  [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  }	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
86	[BUG]  [BUGGY]  Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	Map.Entry  <  Object,  Object>  entry  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size();  ++i)  {	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
87	[BUG]  [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()  [CE]  [FE]                                    ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m  ==  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size()	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  	72	None	replace
88	[BUG]  [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size  [CE]  [FE]                                      ComparisonFailure    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	if(m!=  null)  {  return  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  arraySeparator  =  new  HashMap  <  Object,  Object>();  for(int  i  =  0;  i  <  arraySeparator.size	  if(m!=    null)    {    return    m.containsKey(value);    }    else    {    Map    <    Object,    Object>    arraySeparator    =    new    HashMap    <    Object,    Object>();    for(int    i    =    0;    i    <    arraySeparator.size();    ++i)    {    	non-compiled	[CE]  	72	None	replace
89	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
90	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
91	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  (m!=  null)?  true  :  m.containsKey(value);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  (m!=  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    (m!=  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	61	None	add
92	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  m!=  null)?  true  :  m.containsKey(value);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  m!=  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    m!=  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	61	None	add
93	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  (m  ==  null)?  true  :  m.containsKey(value);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  (m  ==  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    (m  ==  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	61	None	add
94	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  m  ==  null)?  true  :  m.containsKey(value);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  m  ==  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    m  ==  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  not  a  statement	61	None	add
95	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
96	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
97	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
98	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
99	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
100	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
101	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  ||(m!=  null)?  true  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  ||(m!=  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    ||(m!=  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
102	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  final  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  final  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  final  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
103	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
104	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  if(m!=  null)  {  return(m!=  null)?  true  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
105	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  false  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  false  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  false  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
106	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  ((  m!=  null)?  true  :  m.containsKey(value));  [CE]  not  a  statement  [FE]                                      junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  ((  m!=  null)?  true  :  m.containsKey(value));  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    ((  m!=  null)?  true  :  m.containsKey(value));	  	non-compiled	[CE]  not  a  statement	61	None	add
107	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
108	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  Object  value  =(m  ==  null)?  true  :  m.containsKey(value);  [CE]  variable  value  is  already  defined  in  method  isRegistered(Object)  [FE]                                          junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  Object  value  =(m  ==  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    Object  value  =(m  ==  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  isRegistered(Object)	61	None	add
109	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  true  :  m.containsKey(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
110	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  false  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m!=  null)?  false  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m!=  null)?  false  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
111	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  false  :  m.containsKey(value);  }  [CE]  illegal  start  of  expression  [FE]                                                junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  false  :  m.containsKey(value);  }  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    if(m  ==  null)?  true  :  m.containsKey(value);  }  else  {  Map  <  Object,  Object>  m  =  getRegistry();  return(m!=  null)?  false  :  m.containsKey(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
112	[BUG]  [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  =(m!=  null)?  true  :  m.containsKey(value);  [CE]  illegal  start  of  expression  [FE]                                                  junit.framework.ComparisonFailure:  expected:<...ng.Integer@4fe3f5e6[[{A    [CONTEXT]    static  boolean  isRegistered(Object  value)  {  Map<Object,  Object>  m  =  getRegistry();    [BUGGY]  return(m!=  null)?  true  :  m.containsKey(value);  =(m!=  null)?  true  :  m.containsKey(value);  [BUGGY]    }  [CLASS]  ToStringStyle  DefaultToStringStyle  NoFieldNameToStringStyle  ShortPrefixToStringStyle  SimpleToStringStyle  MultiLineToStringStyle  [METHOD]  isRegistered  [RETURN_TYPE]  boolean  Object  value  [VARIABLES]  boolean  arrayContentDetail  defaultFullDetail  fieldSeparatorAtEnd  fieldSeparatorAtStart  useClassName  useFieldNames  useIdentityHashCode  useShortClassName  ThreadLocal  REGISTRY  ToStringStyle  DEFAULT_STYLE  MULTI_LINE_STYLE  NO_FIELD_NAMES_STYLE  SHORT_PREFIX_STYLE  SIMPLE_STYLE  Object  value  String  arrayEnd  arraySeparator  arrayStart  contentEnd  contentStart  fieldNameValueSeparator  fieldSeparator  nullText  sizeEndText  sizeStartText  summaryObjectEndText  summaryObjectStartText  Map  m  long  serialVersionUID  	projects/Lang34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java	0.674199862463242	164	164	1	replace	return(m!=    null)?    true    :    m.containsKey(value);    =(m!=  null)?  true  :  m.containsKey(value);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
