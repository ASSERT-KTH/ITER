bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]    AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f!=  TokenFilter.INCLUDE_ALL)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
2	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL)  {  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]    AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f!=  TokenFilter.INCLUDE_ALL)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  AssertionFailedError  	93	12	replace
4	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  AssertionFailedError  	93	12	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]        AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
6	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]        AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
7	[BUG]  [BUGGY]    [CE]  orphaned  default  [FE]          AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]    [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	  	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	non-compiled	[CE]  orphaned  default	93	None	replace
8	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]    AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  null)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f!=  null)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
9	[BUG]  [BUGGY]  if(f!=  null)  {  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]    AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f!=  null)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f!=  null)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
10	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f  ==  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
11	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f  ==  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "a ":123[]}>  but  was:<{ "a ":123[  	93	14	replace
12	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT)  {  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]    AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f  ==  TokenFilter.EXPR_RESULT)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	93	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	add	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  AssertionFailedError  	93	12	replace
14	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]  _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore22/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	0.75	392	392	12	replace	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	if  (f  ==  TokenFilter.INCLUDE_ALL)  {  	compilable	  [FE]  AssertionFailedError  	93	12	replace
