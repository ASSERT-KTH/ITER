projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entryentry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clonePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;Entry{null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry>=null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,file):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entries,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null){returnentry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;Entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.separator,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entry{null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,file):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();if(file.isDirectory()){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();if(file.length()==0){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalRandomAccessFilefile=inputFile.getParent();returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;Entryentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){finalRandomAccessFilefile=inputFile.getParent();if(file!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setTime(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getPath()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+"):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()),entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry,entry.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getAbsoluteFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entries.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFileSyntheticTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneSyntheticTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getName());entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entryName.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry!=';'
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entry.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry==';'
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName+1;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey(),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getName(),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setArchiveEntry(entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,inputFile.numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,numNonEmptyStreams,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,this.numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,dataOutputFile,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,files);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,entryName,inputFile.length);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(File.SIZE,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(file,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(file,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.file;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getValue()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()+1):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entryName=entry.createArchiveEntry(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentryName.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry==null)returnnull;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry!=null)returnnull;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry!=null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry.getValue();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry!=null?null:entry.getValue();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(files,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entry,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.cloneEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFileEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(inputFile,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,contentCompression):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(entry,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=inputFile.getValue();returnnewSevenZArchiveEntry(entry,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(entryName,entry.getMethod());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();returnnewSevenZArchiveEntry(entryName,entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnentry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+"):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue().createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnull?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnull?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}else{thrownewIllegalArgumentException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnull?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}else{thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnull?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setLastModifiedDate(newDate(inputF
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnull?newSevenZArchiveEntry():entry;finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}else{finalStringentryName=entry.getValue();entry.setLastModifiedDate(newDate(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(inputFile,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.file;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry;entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():inputFile;entry.setTime(newDate(entry.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+"):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,inputFile.toString());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.fileBytesWritten;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten,inputFile.length()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getValue().createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=entry.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entry.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entryName.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.data,entryName):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry!=null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?null:entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;if(entry!=null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();if(entry!=null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.setValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();if(entry!=null){returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();if(entry==null){returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()/entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()*entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName/DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+inputFile.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName/DateTimeConstants.MILLIS_PER_MINUTE;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null,null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?"null":entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry>=null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName),entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneSyntheticArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTreeSyntheticArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFileSyntheticArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getMethod()):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.setMethod(entry.getMethod());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(entry!=null){returnnewSevenZArchiveEntry(entry);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()!=CRC32){finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();if(file==null){returnnewSevenZArchiveEntry(file);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(newFile(inputFile,entryName));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),this);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file.isDirectory()){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(entry.isDirectory()){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file.isDirectory()){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();if(file.isDirectory()||file.isDirectory()){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.files,entryName):entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entries.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry{null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry{null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setLastModifiedDate(newDate(entryName.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setEntry(entry);Entry{null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;Entry{null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntryentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=inputFile.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.createChildArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.createDirectory();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entries.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.createNewArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getMethod()):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.setMethod(entry.getMethod());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileentryName=newFile(entryName);entry.setLastModifiedDate(newDate(entryName.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(entry.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileentry=newFile(entryName);entry.setLastModifiedDate(newDate(entry.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();Entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entry.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getNext();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setValue(entry.getValue());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setValue(entryName.getValue());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,contentCompression):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile.length()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile.lastModified()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,false):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!entry.isArchive()){finalFileinputFile=entry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getPath()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(inputFile.getPath()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getPath()),entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getPath()+1):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry==null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry==null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry!=null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file.length()==0){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(entry.length()==0){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file.length()==0){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getValue();if(file.length()!=0){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getValue()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName),entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTreeSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFileSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry,inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentryFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(inputFile.getAbsolutePath());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;Entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.getLastModifiedDate();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName),entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setLastModifiedDate(newDate(entry.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,contentCompression):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile.length()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile.lastModified()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,false):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(inputFile,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(inputFile,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101result.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101back.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(File.DEFAULT,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(InputStream.DEFAULT,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(File.DEFAULT,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entries.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey()&&entry.getLastModifiedDate()!=entry.getLastModifiedDate();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey()&&entry.getLastModifiedDate()!=entry.getLastModifiedDate());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey()&&entry.getLastModifiedDate()==entry.getLastModifiedDate();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getKey()&&entry.getLastModifiedDate()==entry.getLastModifiedDate());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFile(),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null,null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?"null":entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Returnentry==null?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=entry.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry{null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry{null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+File.separatorChar+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+1):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+File.separatorChar):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry!=';'
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){return
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){return
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry==';'
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten!=
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setDirectory(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName),entryName.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName),entryName.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entryName,entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.toString());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.getName(),inputFile.getVersion());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getName());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.getValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,inputFile.getParent());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entry.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entryName.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryName,fileBytesWritten,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,inputFile.numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getName());entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,false);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName+1);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName,inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<entry.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getParent());returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getName());returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getName());returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,fileBytesWritten,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,fileBytesWritten,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryFile,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,fileBytesWritten,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,entryFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry==null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry!=null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry!=null?newSevenZArchiveEntry():entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(inputFile,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(inputFile,entry.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,inputFile.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,entryName,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName()+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry;if(entry!=null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();if(entry!=null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry();if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentryFile.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101file.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101||entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();if(file!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=entry.getParent();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=inputFile.getParent();if(file!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=inputFile.getParent();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryFile,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,numNonEmptyStreams,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entry,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.separator,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile.separator,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.separator);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.separator,entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.separator,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry.getValue();Entry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getAbsolutePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+File.separatorChar+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+1):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getType()==Token.GETPROP){returnentry.clone();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clone()?null:entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getType()==Token.NAME){returnentry.clone();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entryName!=null){returnentry.createArchiveEntry(entryName,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entries.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entryName!=null){returnentry.createArchiveEntry(entryName,entryName);}else{thrownewIllegalArgumentException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entryName!=null){returnentry.createArchiveEntry(entryName,entryName);}else{thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(entry!=null){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()!=CRC32){finalRandomAccessFilefile=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();if(file==null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=entry.getNext();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+File.separatorChar,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+File.separatorChar+entryName),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.lastModified(),inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entry.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.toString().length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entry.length(),inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName),entryName.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryFile,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(fileBytesWritten,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,entryName,null);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.cloneTree(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.clonePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=inputFile.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,entryName,inputFile.lastModified());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()+"):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()+entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString(),entry.getValue());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()+File.separatorChar+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()+entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,file,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=file.getParent();returnentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=inputFile.getParent();returnentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=entry.getParent();returnentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=file.getParent();returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry!=null)returnnull;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry==null)returnnull;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null?null:entry.getValue()){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getLastModifiedDate();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(entry!=null){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file==null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(entry==null){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getValue();if(file!=null){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101FileinputFile=entry.getCanonicalFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=inputFile.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry.getValue();Entry<K,V>entry=entry.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clonePath()+File.separatorChar+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clonePath(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.clonePath(),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneFilePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getNext();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getLastModifiedDate();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entry.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.getValue(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.clonePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.cloneFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()+1):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.cloneFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTreeFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.lastModified()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.getParent()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.getType()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.setMethod(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getMethod(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.cloneBytesWritten();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName):entry.getFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entries,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry.createArchiveEntry(entryName,entryFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=entry.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.length()-1);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.toString());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entryName.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(contentCompression);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTree(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(outputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entries.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,inputFile.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile.getPath()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName.getPath()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry==null?newSevenZArchiveEntry():entry;if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(contentCompression!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,inputFile.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(entry);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten==
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten!=
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten!=
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnewSevenZArchiveEntry();}else{finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()!=CRC32){finalRandomAccessFilefile=entry.getValue();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;Entry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;Entry<K,V>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.getFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;Entry{null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(fileBytesWritten,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(fileBytesWritten,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfileBytesWritten.createArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entryName,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfileBytesWritten.createArchiveEntry(inputFile,entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfileBytesWritten.createArchiveEntry(entryName,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry.getValue());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.cloneSyntheticArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTreeArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticDirectory();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile.getName()+entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile.getName()),entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),numNonEmptyStreams));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+File.separator):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName(),fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),fileBytesWritten,entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(file,entryName):entry.files;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.lastModified()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.getParent()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,contentCompression):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(fileBytesWritten,entryName,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(fileBytesWritten,entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,entryName,fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry;Entry<K,V>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.getName(),file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.getAbsolutePath());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setFileName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(entryName.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setMethod(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(entry.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry;}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){return
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getDescriptor();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getInput();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()!=CRC32){finalRandomAccessFilefile=entry.getValue();if(file.isDirectory()){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(entry.isDirectory()){returnnewSevenZArchiveEntry(entryName,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():inputFile;entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(entryName,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(newString(entryName));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName,inputFile.getParent());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=inputFile.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=inputFile.getParent();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=inputFile.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=inputFile.getParent();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=inputFile.getParent();if(inputFile!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entries.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.newArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();returnnewSevenZArchiveEntry(entry,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.clonePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneBytesWritten();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entries);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName(),fileBytesWritten):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileinputFile=file.getParent();returnentry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entryentry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entries.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.cloneSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticEntry(false);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticEntry(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.data,entryName):entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTreeEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()!=CRC32){finalRandomAccessFilefile=entry.getValue();if(file.length()==0){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry!=null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.getValue();if(entry!=null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.getValue();if(entry==null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry>=null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entryName,entry.cloneTree());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entryName,inputFile.cloneTree());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entryName.cloneTree());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entry.cloneTree());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entry.cloneTree(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entryName).cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry!=null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.setValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(numNonEmptyStreams,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(InputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(InputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName.getName()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=inputFile.getValue();returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){if(entry.getValue()==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName(),entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName.getName(),entryName):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.createDirectoryEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile.getName()):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,file):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getParent().cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnsentry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName):entry.getFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileB
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.cloneSyntheticTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.cloneSyntheticTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(this);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfileBytesWritten.createArchiveEntry(entryName,entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,fileBytesWritten,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.setMethod(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(numNonEmptyStreams,entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfile.createArchiveEntry(inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalif(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}else{FileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}else{FileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}else{FileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}else{FileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){returnentry.getValue();}else{FileinputFile=newFile(entryName);entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(InputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry;}else{finalFileinputFile=entry.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+inputFile;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getValue()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentryName.getValue()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<K,V>entry=inputFile.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?newSevenZArchiveEntry():entry;Entry<K,V>entry=inputFile.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(File.DEFAULT,inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,inputFile,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entries.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=entries.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry;if(entry==null?null:entry.getValue());}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();if(entry==null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(entryName),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setEntryName(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName+File.separator;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName+fileBytesWritten;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedD
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(in
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry!=null?newSevenZArchiveEntry():entry;if(entry==null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastMod
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnentry==null?null:entry.getValue();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnentry==null?null:entry.getValue();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry=entry.createArchiveEntry(null,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.SIZE,inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,null);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.getFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValues();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.getKey();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());returnentry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101entry==null?null:entry;Entry==null?null:entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getEntryName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toPath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()&&entry.getName().endsWith(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toURI();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry==null?newSevenZArchiveEntry():entry;entry!=null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getValue();if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==entry.getName()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()!=entry.getName()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getType()==Token.GETPROP){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==entry.getName()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()==entry.getName()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEn
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(contentCompression!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(contentCompression==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentryName.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnsentry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.getName();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnnewSevenZArchiveEntry();}else{finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){returnnewSevenZArchiveEntry();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,file):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile.getName()):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,fileBytesWritten):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),fileBytesWritten:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(inputFile,entryName,this.numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entryName,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfileBytesWritten.createArchiveEntry(entryName,entryName,entryBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFilefile=inputFile.getValue();returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=inputFile.getValue();returnnewSevenZArchiveEntry(entryName,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=inputFile.getValue();returnnewSevenZArchiveEntry(file,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFilefile=inputFile.getValue();returnnewSevenZArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null||entry.toString().length()==0?null:entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten,inputFile.length):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.createArchiveEntry(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getCanonicalFile();entry.setName(entryName);entry.setLastModifiedDate(newDate(in
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputFile.separator,entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(File.separator,entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,fileBytesWritten,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnfile==null?newSevenZArchiveEntry():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=file.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=file.getParent();returnentry==null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName),inputFile.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=inputFile.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=inputFile.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=entries.getName();entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returnentry.createArchiveEntry();}else{finalFileinputFile=inputFile.getName();entry.setLastModifiedDate(newDate(InputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()||entry.isDirectory()){returnentry.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(in
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newFile(entryName):entry.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.toString()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry):entry.clone();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()==entry.getName()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName().endsWith(".js")){finalFileinputFile=entry.getParent();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(!contentCompression.isEn
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=entry.getValue()){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getParent();if(contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getValue()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null?null:entry.getName()){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null?null:entry.getClass().getName()){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null)returnnull;if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());if(entry!=null){finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getAbsolutePath());if(entry!=null){finalFileinputFile=newFile(inputFile.getAbsolutePath());entry.setName(entryName);entry.setLastModifiedDate
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.setTime(newDate(inputFile.lastModified()));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(newFile(inputFile,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,entryName,file.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnable
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getName());entry.setInputName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile.getParent(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(inputFile.getParent(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,inputFile):entry.data;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFileentry=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTraceEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.cloneEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getSyntheticEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticEntry(this);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getValue();if(file!=null){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getName()!=null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=entry.getCanonicalFile();if(contentCompression.exists()){returnentry
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.setValue(entryName,inputFile.length());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?null:entry.getAbsolutePath()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue(),entryName,true);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setFirstModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,inputFile,entryName,fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(InputStream.DEFAULT,inputFile,entryName,numNonEmptyStreams);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(!fileBytesWritten){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entry.getName(),inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries!=null?entry.getValue():newSevenZArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries!=null?entries.getValue():newSevenZArchiveEntry(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries!=null?entries.getValue():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalEntry<String,SevenZArchiveEntry>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries!=null?entry.getValue():entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(inputFile.cloneTree(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entryentry=newSevenZArchiveEntry(entryName.cloneTree(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(newFile(inputFile,entryName.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputName=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();i++){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalRandomAccessFileentry=entry.getParent();if(file!=null){returnnewSevenZArchiveEntry(file);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnewSevenZArchiveEntry();}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnewSevenZArchiveEntry();}else{finalSevenZArchiveEntryentry=newSevenZArchiveEntry();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnewSevenZArchiveEntry();finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}else{finalFileinputFile=inputFile.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified())
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry==null){returnnewSevenZArchiveEntry();finalSevenZArchiveEntryentry=newSevenZArchiveEntry();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==false){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==false){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){file
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==false){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFileentry=entry.getValue();if(file.length()==0){returnnewSevenZArchiveEntry(file,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.createArchiveEntry(entryName,entry);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry==null?newSevenZArchiveEntry():entry;finalEntry<K,V>entry=entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){fileBy
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getPath()+entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten==null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!fileBytesWritten}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getName());entry.setDirectory(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytesWritten
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(fileBytesWritten!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.exists()){fileBytes
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputFile=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.isArchive()){returninputFile.createArchiveEntry();}else{finalFileinputName=entry.getParent();entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()+fileBytesWritten;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString()&&entry.getName().equals(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticTree(fileBytesWritten);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),false);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile,entryName),true);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());entry.setName(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null||newSevenZArchiveEntry();if(entry==null){thrownewIllegalStateException("");}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry,inputFile.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.toString().cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(inputFile!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.isEnabled(Feature.QUOTE_
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries==null?newSevenZArchiveEntry(entryName):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries==null?newSevenZArchiveEntry(entry.getName(),entryName):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries==null?newSevenZArchiveEntry(entry.getPath()):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries==null?newSevenZArchiveEntry(entry.getName()):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries==null?newSevenZArchiveEntry(entry):entry.cloneTree();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries!=null?entries.cloneTree():entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,inputFile.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry.getMethod()==CRC32){finalRandomAccessFileentry=entry.getValue();if(file.isDirectory()){returnnewSevenZArchiveEntry(entry,entryName);}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile,entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(entryName,inputFile.getName(),entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry.setValue(entryName);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticFile();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneSyntheticFiles();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,inputFile.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(newFile(inputFile));
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null&&entry!=null){returnnewSevenZArchiveEntry();}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){for(inti=0;i<inputFile.length();++i){finalFileinputFile=entry.getCanonicalFile();if(!contentCompression.endsWith(entryName)){return
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile.getName()):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entry.getName()+entryName,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry(entryName,entryName),inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalFileinputFile=newFile(inputFile.getParent());if(entry!=null){finalFileinputFile=newFile(inputFile.getParent());entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.getValue()+entryName,fileBytesWritten;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101if(entry!=null){finalFileinputFile=newFile(entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null&&entry.getName().endsWith(entryName)){finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile.getName());entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null&&entry.getName().endsWith(entryName)){finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile,entryName);entry.setLastModifiedDate(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null){returnentry!=null?null:entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null&&entry.getName().endsWith(entryName)){finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile.getName());entry.setTime(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry;if(entry!=null&&entry.getName().endsWith(entryName)){finalSevenZArchiveEntryentry=newSevenZArchiveEntry(inputFile,entryName);entry.setTime(newDate(inputFile.lastModified()));}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entry.getName()+entryName):entry.createArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryFile,inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,inputFile,file):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entryName.toString();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=entry.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101Entry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry!=null?newSevenZArchiveEntry():entry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=inputFile.getValue();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.getValue()+entryName;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entryName,fileBytesWritten):entry.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry==null?newSevenZArchiveEntry():entry,inputFile.getMethod();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry(entryName,entry.getName(),inputFile):entry;
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=inputFile.getValue();if(entry==null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentries.clonePath();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.cloneTail();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:newSevenZArchiveEntry(entry.getName());
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.createArchiveEntry(inputFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?null:entry.buildArchiveEntry();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returninputFile.createArchiveEntry(entryName,entryName,file);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry.createArchiveEntry(file,entryName,entryFile);
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=inputFile.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntry<K,V>entry=entry.getValue();if(entry!=null){returnentry;}
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101returnentry!=null?newSevenZArchiveEntry():entry,inputFile.getParent();
projects/Compress21/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java101finalSevenZArchiveEntryentry!=null?newSevenZArchiveEntry():entry;finalEntry<K,V>entry=entry.getValue();
