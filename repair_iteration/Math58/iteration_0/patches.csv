bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    setResult(g,  optimizer);  [CE]  cannot  find  symbol  g  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  super(optimizer);  [BUGGY]    setResult(g,  optimizer);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	    setResult(g,  optimizer);		non-compiled	[CE]  cannot  find  symbol  g	6	None	add
2	[BUG]  [BUGGY]    this.parameters  =  getObservedPoint(optimizer);  [CE]  cannot  find  symbol  parameters  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  super(optimizer);  [BUGGY]    this.parameters  =  getObservedPoint(optimizer);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	    this.parameters  =  getObservedPoint(optimizer);		non-compiled	[CE]  cannot  find  symbol  parameters	6	None	add
3	[BUG]  [BUGGY]    this.parameters  =  getParameters();  [CE]  cannot  find  symbol  parameters  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  super(optimizer);  [BUGGY]    this.parameters  =  getParameters();  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	    this.parameters  =  getParameters();		non-compiled	[CE]  cannot  find  symbol  parameters	6	None	add
4	[BUG]  [BUGGY]    this.parameters  =  Math.random();  [CE]  cannot  find  symbol  parameters  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  super(optimizer);  [BUGGY]    this.parameters  =  Math.random();  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	    this.parameters  =  Math.random();		non-compiled	[CE]  cannot  find  symbol  parameters	6	None	add
5	[BUG]  [BUGGY]    this.parameters  =  Math.round(optimizer);  [CE]  cannot  find  symbol  parameters  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  super(optimizer);  [BUGGY]    this.parameters  =  Math.round(optimizer);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	    this.parameters  =  Math.round(optimizer);		non-compiled	[CE]  cannot  find  symbol  parameters	6	None	add
11	[BUG]  [BUGGY]    Preconditions.checkNotNull(optimizer);  [CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  [BUGGY]    Preconditions.checkNotNull(optimizer);  [BUGGY]  super(optimizer);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	    Preconditions.checkNotNull(optimizer);		non-compiled	[CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;	4	None	add
12	[BUG]  [BUGGY]    this(optimizer,  new  ParametricUnivariateRealFunction());  [CE]  ParametricUnivariateRealFunction  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  [BUGGY]    this(optimizer,  new  ParametricUnivariateRealFunction());  [BUGGY]  super(optimizer);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	    this(optimizer,  new  ParametricUnivariateRealFunction());		non-compiled	[CE]  ParametricUnivariateRealFunction  is  abstract;  cannot  be  instantiated	4	None	add
13	[BUG]  [BUGGY]    Preconditions.checkArgument(optimizer.isInline());  [CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  [BUGGY]    Preconditions.checkArgument(optimizer.isInline());  [BUGGY]  super(optimizer);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	    Preconditions.checkArgument(optimizer.isInline());		non-compiled	[CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;	4	None	add
14	[BUG]  [BUGGY]    Preconditions.checkArgument(optimizer.isStatic());  [CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  [BUGGY]    Preconditions.checkArgument(optimizer.isStatic());  [BUGGY]  super(optimizer);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	    Preconditions.checkArgument(optimizer.isStatic());		non-compiled	[CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;	4	None	add
15	[BUG]  [BUGGY]    Preconditions.checkArgument(optimizer.isStdDev());  [CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;  [CONTEXT]  public  GaussianFitter(DifferentiableMultivariateVectorialOptimizer  optimizer)  {  [BUGGY]    Preconditions.checkArgument(optimizer.isStdDev());  [BUGGY]  super(optimizer);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  <init>  [RETURN_TYPE]  DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer  optimizer  [VARIABLES]  ParametricUnivariateRealFunction  g  DifferentiableMultivariateVectorialOptimizer  optimizer  boolean  WeightedObservedPoint[]  observations  double[]  parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	    Preconditions.checkArgument(optimizer.isStdDev());		non-compiled	[CE]  constructor  CurveFitter  in  class  CurveFitter  cannot  be  applied  to  given  types;	4	None	add
21	[BUG]  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0];  [CE]  variable  f  is  already  defined  in  method  fit(double[])  [CONTEXT]  Double.POSITIVE_INFINITY  };  try  {  v  =  g.gradient(x,  p);  }  catch  (NotStrictlyPositiveException  e)  {  }  return  v;  }  };  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0];  [BUGGY]  return  fit(f,  initialGuess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  double[]  initialGuess  [VARIABLES]  NotStrictlyPositiveException  e  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  initialGuess  p  parameters  v  double  v  x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	replace	    ParametricUnivariateRealFunction  f  =  observations[0];		non-compiled	[CE]  variable  f  is  already  defined  in  method  fit(double[])	12	None	add
22	[BUG]  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1]);  [CE]  ']'  expected  [CONTEXT]  Double.POSITIVE_INFINITY  };  try  {  v  =  g.gradient(x,  p);  }  catch  (NotStrictlyPositiveException  e)  {  }  return  v;  }  };  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1]);  [BUGGY]  return  fit(f,  initialGuess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  double[]  initialGuess  [VARIABLES]  NotStrictlyPositiveException  e  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  initialGuess  p  parameters  v  double  v  x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	replace	    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1]);		non-compiled	[CE]  ']'  expected	12	None	add
23	[BUG]  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations.get(x);  [CE]  variable  f  is  already  defined  in  method  fit(double[])  [CONTEXT]  Double.POSITIVE_INFINITY  };  try  {  v  =  g.gradient(x,  p);  }  catch  (NotStrictlyPositiveException  e)  {  }  return  v;  }  };  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations.get(x);  [BUGGY]  return  fit(f,  initialGuess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  double[]  initialGuess  [VARIABLES]  NotStrictlyPositiveException  e  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  initialGuess  p  parameters  v  double  v  x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	replace	    ParametricUnivariateRealFunction  f  =  observations.get(x);		non-compiled	[CE]  variable  f  is  already  defined  in  method  fit(double[])	12	None	add
24	[BUG]  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1],  v);  [CE]  ']'  expected  [CONTEXT]  Double.POSITIVE_INFINITY  };  try  {  v  =  g.gradient(x,  p);  }  catch  (NotStrictlyPositiveException  e)  {  }  return  v;  }  };  [BUGGY]    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1],  v);  [BUGGY]  return  fit(f,  initialGuess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  double[]  initialGuess  [VARIABLES]  NotStrictlyPositiveException  e  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  initialGuess  p  parameters  v  double  v  x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	replace	    ParametricUnivariateRealFunction  f  =  observations[0],  observations[1],  v);		non-compiled	[CE]  ']'  expected	12	None	add
