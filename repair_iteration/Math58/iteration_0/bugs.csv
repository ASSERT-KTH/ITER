bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return fit(new Gaussian.Parametric(), guess); [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public double[] fit() { final double[] guess = (new ParameterGuesser(getObservations())).guess(); [BUGGY] return fit(new Gaussian.Parametric(), guess); [BUGGY] } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  [VARIABLES] ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] guess initialGuess p parameters v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	
2	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public double[] fit() { final double[] guess = (new ParameterGuesser(getObservations())).guess(); [BUGGY] [BUGGY] return fit(new Gaussian.Parametric(), guess); } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  [VARIABLES] ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] guess initialGuess p parameters v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	add	
3	[BUG] [BUGGY] super(optimizer); [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) { [BUGGY] super(optimizer); [BUGGY] } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] <init> [RETURN_TYPE] DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer optimizer [VARIABLES] ParametricUnivariateRealFunction g DifferentiableMultivariateVectorialOptimizer optimizer boolean WeightedObservedPoint[] observations double[] parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	replace	
4	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) { [BUGGY] [BUGGY] super(optimizer); } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] <init> [RETURN_TYPE] DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer optimizer [VARIABLES] ParametricUnivariateRealFunction g DifferentiableMultivariateVectorialOptimizer optimizer boolean WeightedObservedPoint[] observations double[] parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	68	68	1	add	
5	[BUG] [BUGGY] } [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) { super(optimizer); [BUGGY] } [BUGGY]  [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] <init> [RETURN_TYPE] DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer optimizer [VARIABLES] ParametricUnivariateRealFunction g DifferentiableMultivariateVectorialOptimizer optimizer boolean WeightedObservedPoint[] observations double[] parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	replace	
6	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) { super(optimizer); [BUGGY] [BUGGY] } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] <init> [RETURN_TYPE] DifferentiableMultivariateVectorialOptimizer)  DifferentiableMultivariateVectorialOptimizer optimizer [VARIABLES] ParametricUnivariateRealFunction g DifferentiableMultivariateVectorialOptimizer optimizer boolean WeightedObservedPoint[] observations double[] parameters  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	69	69	1	add	
7	[BUG] [BUGGY] final double[] guess = (new ParameterGuesser(getObservations())).guess(); [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public double[] fit() { [BUGGY] final double[] guess = (new ParameterGuesser(getObservations())).guess(); [BUGGY] return fit(new Gaussian.Parametric(), guess); } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  [VARIABLES] ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] guess initialGuess p parameters v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	120	120	1	replace	
8	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] public double[] fit() { [BUGGY] [BUGGY] final double[] guess = (new ParameterGuesser(getObservations())).guess(); return fit(new Gaussian.Parametric(), guess); } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  [VARIABLES] ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] guess initialGuess p parameters v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.35355339059327373	120	120	1	add	
9	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] private final ParametricUnivariateRealFunction g = new Gaussian.Parametric(); [CLASS] GaussianFitter 1 ParameterGuesser 1  [VARIABLES] 	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	84	84	1	replace	
10	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] private final ParametricUnivariateRealFunction g = new Gaussian.Parametric(); [CLASS] GaussianFitter 1 ParameterGuesser 1  [VARIABLES] 	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	84	84	1	add	
11	[BUG] [BUGGY] return fit(f, initialGuess); [FE] NotStrictlyPositiveException testMath519 [CONTEXT] Double.POSITIVE_INFINITY }; try { v = g.gradient(x, p); } catch (NotStrictlyPositiveException e) {  } return v; } }; [BUGGY] return fit(f, initialGuess); [BUGGY] } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  double[] initialGuess [VARIABLES] NotStrictlyPositiveException e ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] initialGuess p parameters v double v x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	replace	
12	[BUG] [BUGGY] [FE] NotStrictlyPositiveException testMath519 [CONTEXT] Double.POSITIVE_INFINITY }; try { v = g.gradient(x, p); } catch (NotStrictlyPositiveException e) {  } return v; } }; [BUGGY] [BUGGY] return fit(f, initialGuess); } [CLASS] GaussianFitter 1 ParameterGuesser 1 [METHOD] fit [RETURN_TYPE] double[]  double[] initialGuess [VARIABLES] NotStrictlyPositiveException e ParametricUnivariateRealFunction f g boolean WeightedObservedPoint[] observations double[] initialGuess p parameters v double v x  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.0	110	110	1	add	
