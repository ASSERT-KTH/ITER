bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  int[]  observations  =  getObservations();  [CE]  incompatible  types  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    final  int[]  observations  =  getObservations();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    final  int[]  observations  =  getObservations();		non-compiled	[CE]  incompatible  types	2	None	add
2	[BUG]  [BUGGY]    final  double[]  observations  =  getObservations();  [CE]  incompatible  types  [FE]      NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    final  double[]  observations  =  getObservations();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    final  double[]  observations  =  getObservations();		non-compiled	[CE]  incompatible  types	2	None	add
3	[BUG]  [BUGGY]    g.draw(guess);  [CE]  cannot  find  symbol  g  [FE]        NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    g.draw(guess);  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    g.draw(guess);		non-compiled	[CE]  cannot  find  symbol  g	2	None	add
4	[BUG]  [BUGGY]    final  int  parameters  =  getObservations();  [CE]  incompatible  types  [FE]          NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    final  int  parameters  =  getObservations();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    final  int  parameters  =  getObservations();		non-compiled	[CE]  incompatible  types	2	None	add
5	[BUG]  [BUGGY]    g.draw(guess,  guess);  [CE]  cannot  find  symbol  g  [FE]            NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    g.draw(guess,  guess);  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    g.draw(guess,  guess);		non-compiled	[CE]  cannot  find  symbol  g	2	None	add
6	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric());  [CE]  no  suitable  method  found  for  fit(double[],Parametric)  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric());  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric());	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric)	1	None	replace
7	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(new  Gaussian.Parameter(),  guess,  parameters);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parameter(),  guess,  parameters);	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
8	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]        NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  parameters);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  parameters);	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  cannot  find  symbol  parameters	1	None	replace
9	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(new  Gaussian.Parameter(),  guess,  observations);  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parameter(),  guess,  observations);	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
10	[BUG]  [BUGGY]  return  fit(node,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  node  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(node,  new  Gaussian.Parametric());  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(node,  new  Gaussian.Parametric());	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  cannot  find  symbol  node	1	None	replace
11	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	add	    (new  ParameterGuesser(getObservations())).guess();		compilable	  [FE]  NotStrictlyPositiveException  	2	1	add
12	[BUG]  [BUGGY]    (new  ParameterGuesser(getObservations())).guess();  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getObservations())).guess();		compilable	  [FE]  NotStrictlyPositiveException  	2	1	add
13	[BUG]  [BUGGY]    final  double[]  observations  =  getObservedPoints();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    final  double[]  observations  =  getObservedPoints();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    final  double[]  observations  =  getObservedPoints();		non-compiled	[CE]  cannot  find  symbol	2	None	add
14	[BUG]  [BUGGY]    (new  ParameterGuesser(getRealFunction())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getRealFunction())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getRealFunction())).guess();		non-compiled	[CE]  cannot  find  symbol	2	None	add
15	[BUG]  [BUGGY]    (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getParameters())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getParameters())).guess();		non-compiled	[CE]  cannot  find  symbol	2	None	add
16	[BUG]  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).guess();  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getRealFunctions())).guess();		non-compiled	[CE]  cannot  find  symbol	2	None	add
17	[BUG]  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null);  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null);  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null);		non-compiled	[CE]  cannot  find  symbol	2	None	add
18	[BUG]  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null);  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	    (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null);		non-compiled	[CE]  cannot  find  symbol	2	None	add
19	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter());  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException  [CONTEXT]  public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter());  [BUGGY]  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parameter());	return  fit(new  Gaussian.Parametric(),  guess);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
