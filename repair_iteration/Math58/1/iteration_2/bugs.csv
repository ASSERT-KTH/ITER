bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
3	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  observations);	  return    fit(new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
4	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess,  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parameter(),  guess,  observations);	  return    fit(new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  parameters);	  return    fit(new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
6	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  parameters);	  return    fit(new    Gaussian.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
7	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  parameters);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parameter(),  parameters);	  return    fit(new    Gaussian.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
8	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess)).guess();	      (new    ParameterGuesser(getRealFunctions())).guess();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
9	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).guess();	      (new    ParameterGuesser(getRealFunctions())).guess();    	non-compiled	[CE]  ')'  expected	16	None	replace
10	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).guess();  [CE]  not  a  statement  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())),  guess).guess();	      (new    ParameterGuesser(getRealFunctions())).guess();    	non-compiled	[CE]  not  a  statement	16	None	replace
11	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	add	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();	  	compilable	  [FE]  NotStrictlyPositiveException  	11	1	add
12	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();	  	compilable	  [FE]  NotStrictlyPositiveException  	11	1	add
13	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).  skip();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
14	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    new  ParameterGuesser(getObservations())).guess();	  	non-compiled	[CE]  ';'  expected	11	None	add
15	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess!=  null);  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess!=  null);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess!=  null);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess!=    null);    	non-compiled	[CE]  ')'  expected	17	None	replace
16	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess!=  null);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess!=  null);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess!=  null);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess!=    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
17	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().length;  [CE]  incompatible  types  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().length;  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().length;	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  incompatible  types	2	None	replace
18	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations(),  parameters);  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations(),  parameters);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations(),  parameters);	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  ';'  expected	2	None	replace
19	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().cloneTree();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().cloneTree();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().cloneTree();	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
20	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getParameters(),  guess)).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess)).guess();	      (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
21	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters()),  guess).guess();  [CE]  ')'  expected  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getParameters()),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters()),  guess).guess();	      (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  ')'  expected	15	None	replace
22	[BUG]  [BUGGY]  g.draw(guess,  initialGuess);  [CE]  cannot  find  symbol  initialGuess  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  g.draw(guess,  initialGuess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g.draw(guess,  initialGuess);	      g.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	5	None	replace
23	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  guess);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  GaussianFitter.draw(guess,  guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  guess);	      g.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
24	[BUG]  [BUGGY]  g2.draw(guess,  guess);  [CE]  cannot  find  symbol  g2  [FE]                    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  g2.draw(guess,  guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g2.draw(guess,  guess);	      g.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  g2	5	None	replace
25	[BUG]  [BUGGY]  final  double  parameters  =  getObservations();  [CE]  incompatible  types  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double  parameters  =  getObservations();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getObservations();	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  incompatible  types	4	None	replace
26	[BUG]  [BUGGY]  final  int  parameters  =  getParameters();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int  parameters  =  getParameters();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameters();	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
27	[BUG]  [BUGGY]  final  int  parameters  =  getFieldParameters();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int  parameters  =  getFieldParameters();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getFieldParameters();	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
28	[BUG]  [BUGGY]  final  int  parameters  =  getParameterTypes();  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int  parameters  =  getParameterTypes();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterTypes();	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
29	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().clone();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints().clone();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().clone();	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
30	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters);  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  parameters);	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  ';'  expected	13	None	replace
31	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().length;  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints().length;  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().length;	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
32	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  initialGuess);  [CE]  cannot  find  symbol  initialGuess  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  initialGuess);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  initialGuess);	  return    fit(new    Gaussian.Parametric(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	8	None	replace
33	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  observations);	  return    fit(new    Gaussian.Parametric(),    guess,    parameters);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	8	None	replace
34	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().length;  [CE]  incompatible  types  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int[]  observations  =  getObservations().length;  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().length;	      final    int[]    observations    =    getObservations();    	non-compiled	[CE]  incompatible  types	1	None	replace
35	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations(),  parameters);  [CE]  ';'  expected  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int[]  observations  =  getObservations(),  parameters);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations(),  parameters);	      final    int[]    observations    =    getObservations();    	non-compiled	[CE]  ';'  expected	1	None	replace
36	[BUG]  [BUGGY]  Return  fit(guess,  new  Gaussian.Parametric());  [CE]  ';'  expected  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  Return  fit(guess,  new  Gaussian.Parametric());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Return  fit(guess,  new  Gaussian.Parametric());	  return    fit(node,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	10	None	replace
37	[BUG]  [BUGGY]  returns  fit(guess,  new  Gaussian.Parametric());  [CE]  ';'  expected  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  returns  fit(guess,  new  Gaussian.Parametric());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	returns  fit(guess,  new  Gaussian.Parametric());	  return    fit(node,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  return  fit(question,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  question  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(question,  new  Gaussian.Parametric());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(question,  new  Gaussian.Parametric());	  return    fit(node,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  question	10	None	replace
39	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter());  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter.Parameter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
40	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parameter());  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parameter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  Gaussian.Parameter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
41	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter());  [CE]  package  GaussianFunction  does  not  exist  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Parameter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	19	None	replace
42	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()),  guess).guess();	      (new    ParameterGuesser(getRealFunction())).guess();    	non-compiled	[CE]  ')'  expected	14	None	replace
43	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess)).guess();	      (new    ParameterGuesser(getRealFunction())).guess();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
44	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).guess();  [CE]  not  a  statement  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess).guess();	      (new    ParameterGuesser(getRealFunction())).guess();    	non-compiled	[CE]  not  a  statement	14	None	replace
45	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null);  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null);    	non-compiled	[CE]  ')'  expected	18	None	replace
46	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
47	[BUG]  [BUGGY]  g2.draw(guess);  [CE]  cannot  find  symbol  g2  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  g2.draw(guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g2.draw(guess);	      g.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  g2	3	None	replace
48	[BUG]  [BUGGY]  GaussianFitter.draw(guess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  GaussianFitter.draw(guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess);	      g.draw(guess);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
49	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric());  [CE]  no  suitable  method  found  for  fit(double[],double[],Parametric)  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  Gaussian.Parametric());	  return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],double[],Parametric)	6	None	replace
50	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess);  [CE]  no  suitable  method  found  for  fit(double[],Parametric,double[])  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess);	  return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric,double[])	6	None	replace
51	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  parameters);  [CE]  cannot  find  symbol  parameters  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  parameters);	  return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  parameters	6	None	replace
52	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianShape.Parameter());  [CE]  package  GaussianShape  does  not  exist  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianShape.Parameter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianShape.Parameter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  package  GaussianShape  does  not  exist	19	None	replace
53	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().values();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().values();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().values();	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
54	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getStandardObservations();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations();	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
55	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],int)  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  1);	  return    fit(new    Gaussian.Parametric(),    guess,    parameters);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],int)	8	None	replace
56	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  parameters);	  return    fit(new    Gaussian.Parametric(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol  parameters	8	None	replace
57	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getParameters())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getParameters())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
58	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).passes();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).passes();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).passes();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
59	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).gues();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).gues();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).gues();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
60	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  guess,  observations);	  return    fit(new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
61	[BUG]  [BUGGY]  return  fit(guess.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess.Parameter(),  guess,  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess.Parameter(),  guess,  observations);	  return    fit(new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
62	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.guess();  [CE]  not  a  statement  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.guess();	      (new    ParameterGuesser(getRealFunction())).guess();    	non-compiled	[CE]  not  a  statement	14	None	replace
63	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
64	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().values();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints().values();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().values();	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
65	[BUG]  [BUGGY]  (new  ParameterGuesser(getNumberOfObservations())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getNumberOfObservations())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getNumberOfObservations())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
66	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
67	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess);  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parameter(),  guess);	  return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
68	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  parameters);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianParameter(),  parameters);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  parameters);	  return    fit(new    Gaussian.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  final  int  parameters  =  getObservations().length;  [CE]  missing  return  statement  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int  parameters  =  getObservations().length;  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getObservations().length;	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  missing  return  statement	4	None	replace
70	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  >=  null);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess  >=  null);	      (new    ParameterGuesser(getRealFunctions())).checkState(guess!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
71	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(results);  [CE]  cannot  find  symbol  results  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int[]  observations  =  getObservations().toArray(results);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(results);	      final    int[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol  results	1	None	replace
72	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).pass(guess);	      (new    ParameterGuesser(getRealFunctions())).guess();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
73	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[0]);  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[0]);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(new  int[0]);	      final    int[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
74	[BUG]  [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).check();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]      (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).check();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).check();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
75	[BUG]  [BUGGY]  Gaussian.draw(guess);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  Gaussian.draw(guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Gaussian.draw(guess);	      g.draw(guess);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
76	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  observations);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  observations);	  return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	6	None	replace
77	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialGuess())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getInitialGuess())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialGuess())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
78	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArguments())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getStandardArguments())).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArguments())).guess();	      (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  final  int  parameters  =  getParameterCount();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  int  parameters  =  getParameterCount();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterCount();	      final    int    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter1.Parameter());  [CE]  package  GaussianFitter1  does  not  exist  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianFitter1.Parameter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter1.Parameter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  package  GaussianFitter1  does  not  exist	19	None	replace
81	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(guess,  new  GaussianFitter());  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter());	  return    fit(guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	19	None	replace
82	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[results.size()  ]);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[results.size()  ]);	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol  results	2	None	replace
83	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[references.size()  ]);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[references.size()  ]);	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol  references	2	None	replace
84	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ]);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ]);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ]);	      final    double[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
85	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getRealFunction()).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()).guess();	      (new    ParameterGuesser(getRealFunction())).guess();    	non-compiled	[CE]  ')'  expected	14	None	replace
86	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess);  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(guess);	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
87	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ]);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ]);  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ]);	      final    double[]    observations    =    getObservedPoints();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
88	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[])  [FE]            NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);  [BUGGY]    }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);	  return    fit(new    Gaussian.Parametric(),    guess,    parameters);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[])	8	None	replace
89	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).guess();  [CE]  not  a  statement  [FE]        NotStrictlyPositiveException    [CONTEXT]    public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();    [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).guess();  [BUGGY]    return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())),  guess).guess();	      (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  not  a  statement	15	None	replace
