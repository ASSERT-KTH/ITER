bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.length;  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  parameters.length;	  final    double[]    observations    =    getObservedPoints().length;    	non-compiled	[CE]  ';'  expected	31	None	replace
2	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().length  -  1;  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().length  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().length  -  1;	  final    double[]    observations    =    getObservedPoints().length;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
3	[BUG]  [BUGGY]  final  double  parameters  =  getParameters();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getParameters();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getParameters();	  final    double    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
4	[BUG]  [BUGGY]  final  double  parameters  =  getArguments();  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getArguments();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getArguments();	  final    double    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
5	[BUG]  [BUGGY]  final  double  parameters  =  getParameterTypes();  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getParameterTypes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getParameterTypes();	  final    double    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
6	[BUG]  [BUGGY]  final  double  parameters  =  getFieldParameters();  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getFieldParameters();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getFieldParameters();	  final    double    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
7	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  GaussianFitter());	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	81	None	replace
8	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(compiler));  [CE]  cannot  find  symbol  compiler  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(compiler));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(compiler));	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  cannot  find  symbol  compiler	81	None	replace
9	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(false));  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(false));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(false));	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	81	None	replace
10	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(compiler),  guess);  [CE]  cannot  find  symbol  compiler  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(compiler),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(compiler),  guess);	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  cannot  find  symbol  compiler	81	None	replace
11	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  getObservations()).guess();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  getObservations()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess),  getObservations()).guess();	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	43	None	replace
12	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  false).guess();  [CE]  ')'  expected  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  false).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess),  false).guess();	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	43	None	replace
13	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  getParameters()).guess();  [CE]  ')'  expected  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  getParameters()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess),  getParameters()).guess();	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	43	None	replace
14	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturns())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
15	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())).passes();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
16	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).passes();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
17	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).passes();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
18	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).passes();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
19	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	add	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();	  	compilable	  [FE]  NotStrictlyPositiveException  	11	1	add
20	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();	  	compilable	  [FE]  NotStrictlyPositiveException  	11	1	add
21	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]      NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();	  	non-compiled	[CE]  ';'  expected	11	None	add
22	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
23	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialGuess()),  guess).guess();  [CE]  ')'  expected  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getInitialGuess()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialGuess()),  guess).guess();	  (new    ParameterGuesser(getInitialGuess())).guess();    	non-compiled	[CE]  ')'  expected	77	None	replace
24	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialGuess(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getInitialGuess(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialGuess(),  guess)).guess();	  (new    ParameterGuesser(getInitialGuess())).guess();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
25	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().length  -  1;  [CE]  incompatible  types  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().length  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().length  -  1;	  final    int[]    observations    =    getObservations().length;    	non-compiled	[CE]  incompatible  types	34	None	replace
26	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  observations);	  return    fit(new    Gaussian.Parametric(),    guess,    observations);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	33	None	replace
27	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  new  ParameterGuesser(getSeconds())).guess();  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  new  ParameterGuesser(getSeconds())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).guess();  new  ParameterGuesser(getSeconds())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
28	[BUG]  [BUGGY]  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	new  ParameterGuesser(getObservations())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
29	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  new  ParameterGuesser(getParameters())).guess();  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  new  ParameterGuesser(getParameters())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
30	[BUG]  [BUGGY]  new  ParameterGuesser(getParameters())).guess();  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	new  ParameterGuesser(getParameters())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
31	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).initialGuess();  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).initialGuess();	  (new    ParameterGuesser(getRealFunctions()),    guess).guess();    	non-compiled	[CE]  ')'  expected	9	None	replace
32	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations()),  guess).guess();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations()),  guess).guess();	  (new    ParameterGuesser(getRealFunctions()),    guess).guess();    	non-compiled	[CE]  ')'  expected	9	None	replace
33	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints()),  guess).guess();  [CE]  ')'  expected  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturnPoints()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints()),  guess).guess();	  (new    ParameterGuesser(getReturnPoints())).guess();    	non-compiled	[CE]  ')'  expected	2	None	replace
34	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturnPoints(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints(),  guess)).guess();	  (new    ParameterGuesser(getReturnPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
35	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  metrics);  [CE]  cannot  find  symbol  metrics  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  metrics);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  metrics);	  return    fit(new    Gaussian.Parametric(),    guess,    initialGuess);    	non-compiled	[CE]  cannot  find  symbol  metrics	32	None	replace
36	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  estimates);  [CE]  cannot  find  symbol  estimates  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  estimates);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  estimates);	  return    fit(new    Gaussian.Parametric(),    guess,    initialGuess);    	non-compiled	[CE]  cannot  find  symbol  estimates	32	None	replace
37	[BUG]  [BUGGY]  final  int  parameters  =  getFieldParameters().length;  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getFieldParameters().length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getFieldParameters().length;	  final    int    parameters    =    getFieldParameters();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
38	[BUG]  [BUGGY]  (new  ParameterGuesser(getNullOfObservations())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getNullOfObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getNullOfObservations())).guess();	  (new    ParameterGuesser(getNumberOfObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
39	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[observations.length  ]);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[observations.length  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[observations.length  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
40	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[observations.size()  ]);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[observations.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[observations.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
41	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[0]);  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[0]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[0]);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
42	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  guess);	  final    double[]    observations    =    getObservedPoints(),    parameters);    	non-compiled	[CE]  ';'  expected	30	None	replace
43	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  initialGuess);  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  initialGuess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  initialGuess);	  final    double[]    observations    =    getObservedPoints(),    parameters);    	non-compiled	[CE]  ';'  expected	30	None	replace
44	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  index);  [CE]  ';'  expected  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  index);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  index);	  final    double[]    observations    =    getObservedPoints(),    parameters);    	non-compiled	[CE]  ';'  expected	30	None	replace
45	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  new  WeightedObservedPoint[0]);  [CE]  no  suitable  method  found  for  fit(double[],Parametric,WeightedObservedPoint[])  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  new  WeightedObservedPoint[0]);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  new  WeightedObservedPoint[0]);	  return    fit(new    Gaussian.Parametric(),    guess,    new    WeightedObservedPoint[0]);    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric,WeightedObservedPoint[])	88	None	replace
46	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);  [CE]  no  suitable  method  found  for  fit(double[],Parametric,double[],WeightedObservedPoint[])  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0]);	  return    fit(new    Gaussian.Parametric(),    guess,    new    WeightedObservedPoint[0]);    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric,double[],WeightedObservedPoint[])	88	None	replace
47	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  parameters);	  return    fit(new    Gaussian.Parametric(),    guess,    new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol  parameters	88	None	replace
48	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getParameters())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
49	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getParameters())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
50	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters()),  guess).initialGuess();  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters()),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters()),  guess).initialGuess();	  (new    ParameterGuesser(getParameters()),    guess).guess();    	non-compiled	[CE]  ')'  expected	21	None	replace
51	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter1.Parameter(),  guess);  [CE]  package  GaussianFitter1  does  not  exist  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter1.Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter1.Parameter(),  guess);	  return    fit(guess,    new    GaussianFitter1.Parameter());    	non-compiled	[CE]  package  GaussianFitter1  does  not  exist	80	None	replace
52	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter1.Parameter());  [CE]  package  GaussianFitter1  does  not  exist  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter1.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  GaussianFitter1.Parameter());	  return    fit(guess,    new    GaussianFitter1.Parameter());    	non-compiled	[CE]  package  GaussianFitter1  does  not  exist	80	None	replace
53	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter1,  guess);  [CE]  '('  or  '['  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter1,  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter1,  guess);	  return    fit(guess,    new    GaussianFitter1.Parameter());    	non-compiled	[CE]  '('  or  '['  expected	80	None	replace
54	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).initialGuess();  [CE]  not  a  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())),  guess).initialGuess();	  (new    ParameterGuesser(getRealFunctions())),    guess).guess();    	non-compiled	[CE]  not  a  statement	10	None	replace
55	[BUG]  [BUGGY]  final  Return  fit(guess,  new  Gaussian.Parametric());  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  Return  fit(guess,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  Return  fit(guess,  new  Gaussian.Parametric());	  Return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	36	None	replace
56	[BUG]  [BUGGY]  Return  fit(guess,  new  Gaussian.Parameter());  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  Return  fit(guess,  new  Gaussian.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Return  fit(guess,  new  Gaussian.Parameter());	  Return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	36	None	replace
57	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  observations,  parameters);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  observations,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  observations,  parameters);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
58	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  initialGuess);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  initialGuess);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
59	[BUG]  [BUGGY]  return  fit(new  GaussianFitter().Parameter(),  guess,  parameters);  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter().Parameter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter().Parameter(),  guess,  parameters);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	3	None	replace
60	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  1);  [CE]  no  suitable  method  found  for  fit(double[],Parametric,double[],int)  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  1);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  1);	  return    fit(new    Gaussian.Parametric(),    guess,    1);    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric,double[],int)	55	None	replace
61	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  1);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],int,int)  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  1);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  1);	  return    fit(new    Gaussian.Parametric(),    guess,    1);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],int,int)	55	None	replace
62	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  1,  parameters);	  return    fit(new    Gaussian.Parametric(),    guess,    1);    	non-compiled	[CE]  cannot  find  symbol  parameters	55	None	replace
63	[BUG]  [BUGGY]  final  double  parameters  =  getObservations().length;  [CE]  missing  return  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getObservations().length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getObservations().length;	  final    int    parameters    =    getObservations().length;    	non-compiled	[CE]  missing  return  statement	69	None	replace
64	[BUG]  [BUGGY]  final  int  parameters  =  getParameters().length;  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameters().length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameters().length;	  final    int    parameters    =    getObservations().length;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
65	[BUG]  [BUGGY]  final  int  parameters  =  getObservations().length  -  1;  [CE]  missing  return  statement  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getObservations().length  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getObservations().length  -  1;	  final    int    parameters    =    getObservations().length;    	non-compiled	[CE]  missing  return  statement	69	None	replace
66	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnValues.size()  ]);  [CE]  cannot  find  symbol  returnValues  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnValues.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[returnValues.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  returnValues	83	None	replace
67	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.parameters.size()  ]);  [CE]  cannot  find  symbol  parameters  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.parameters.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[this.parameters.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  parameters	83	None	replace
68	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs(),  guess)).guess();	  (new    ParameterGuesser(getStandardArgs())).guess();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
69	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs()),  guess).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs()),  guess).guess();	  (new    ParameterGuesser(getStandardArgs())).guess();    	non-compiled	[CE]  ')'  expected	66	None	replace
70	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())),  guess).guess();  [CE]  not  a  statement  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs())),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())),  guess).guess();	  (new    ParameterGuesser(getStandardArgs())).guess();    	non-compiled	[CE]  not  a  statement	66	None	replace
71	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[1]);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[1]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(new  int[1]);	  final    int[]    observations    =    getObservations().toArray(new    int[0]);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
72	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[2]);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[2]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(new  int[2]);	  final    int[]    observations    =    getObservations().toArray(new    int[0]);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
73	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  int[0]);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  int[0]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  int[0]);	  final    int[]    observations    =    getObservations().toArray(new    int[0]);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
74	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  guess,  parameters);	  return    fit(guess,    new    GaussianParameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
75	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  initialGuess);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  guess,  initialGuess);	  return    fit(guess,    new    GaussianParameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
76	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  metrics);  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess,  metrics);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  guess,  metrics);	  return    fit(guess,    new    GaussianParameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
77	[BUG]  [BUGGY]  return  fit(guess.Parameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess.Parameter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess.Parameter(),  guess,  parameters);	  return    fit(guess.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
78	[BUG]  [BUGGY]  return  fit(guess,  parameters.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  parameters  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameters.Parameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameters.Parameter(),  guess,  observations);	  return    fit(guess.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol  parameters	61	None	replace
79	[BUG]  [BUGGY]  return  fit(guess,  parameter.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  parameter  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameter.Parameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameter.Parameter(),  guess,  observations);	  return    fit(guess.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol  parameter	61	None	replace
80	[BUG]  [BUGGY]  return  fit(guess,  getObservations().Parameter(),  guess);  [CE]  cannot  find  symbol  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  getObservations().Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  getObservations().Parameter(),  guess);	  return    fit(guess.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
81	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  getObservations()).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  getObservations()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess),  getObservations()).guess();	  (new    ParameterGuesser(getParameters(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	20	None	replace
82	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  false).guess();  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  false).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess),  false).guess();	  (new    ParameterGuesser(getParameters(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	20	None	replace
83	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  true).guess();  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  true).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess),  true).guess();	  (new    ParameterGuesser(getParameters(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	20	None	replace
84	[BUG]  [BUGGY]  gaussian.draw(guess);  [CE]  cannot  find  symbol  gaussian  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  gaussian.draw(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	gaussian.draw(guess);	  g2.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  gaussian	47	None	replace
85	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().cloneParameters();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().cloneParameters();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().cloneParameters();	  final    double[]    observations    =    getObservations().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
86	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().clonePosition();  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().clonePosition();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().clonePosition();	  final    double[]    observations    =    getObservations().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
87	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().placeTree();  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().placeTree();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().placeTree();	  final    double[]    observations    =    getObservations().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
88	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[this.temps.size()  ]);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[this.temps.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[this.temps.size()  ]);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
89	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[getObservedPoints().size()  ]);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[getObservedPoints().size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[getObservedPoints().size()  ]);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
90	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[returnValues.size()  ]);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[returnValues.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[returnValues.size()  ]);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
91	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess);  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()),  guess);	  (new    ParameterGuesser(getRealFunction()).guess();    	non-compiled	[CE]  ')'  expected	85	None	replace
92	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations()).guess();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations()).guess();	  (new    ParameterGuesser(getRealFunction()).guess();    	non-compiled	[CE]  ')'  expected	85	None	replace
93	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.values();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.values();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  parameters.values();	  final    double[]    observations    =    getObservedPoints().values();    	non-compiled	[CE]  ';'  expected	64	None	replace
94	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter(),  guess);	  return    fit(guess,    new    GaussianParameter(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
95	[BUG]  [BUGGY]  return  fit(guess,  new  Parameter(),  parameters);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Parameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Parameter(),  parameters);	  return    fit(guess,    new    GaussianParameter(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
96	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArguments(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArguments(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArguments(),  guess)).guess();	  (new    ParameterGuesser(getStandardArguments())).guess();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
97	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArguments()),  guess).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArguments()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArguments()),  guess).guess();	  (new    ParameterGuesser(getStandardArguments())).guess();    	non-compiled	[CE]  ')'  expected	78	None	replace
98	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArguments())),  guess).guess();  [CE]  not  a  statement  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArguments())),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArguments())),  guess).guess();	  (new    ParameterGuesser(getStandardArguments())).guess();    	non-compiled	[CE]  not  a  statement	78	None	replace
99	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  GaussianShape.Parameter());  [CE]  package  GaussianShape  does  not  exist  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  GaussianShape.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  GaussianShape.Parameter());	  return    fit(guess,    new    GaussianShape.Parameter());    	non-compiled	[CE]  package  GaussianShape  does  not  exist	52	None	replace
100	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianShape.Parameter(),  guess);  [CE]  package  GaussianShape  does  not  exist  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianShape.Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianShape.Parameter(),  guess);	  return    fit(guess,    new    GaussianShape.Parameter());    	non-compiled	[CE]  package  GaussianShape  does  not  exist	52	None	replace
101	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianShape.Fitter());  [CE]  package  GaussianShape  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianShape.Fitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianShape.Fitter());	  return    fit(guess,    new    GaussianShape.Parameter());    	non-compiled	[CE]  package  GaussianShape  does  not  exist	52	None	replace
102	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parameter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parameter(),  guess,  parameters);	  return    fit(guess,    new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter.Parameter(),  guess,  observations);	  return    fit(guess,    new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().length  -  1;  [CE]  incompatible  types  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().length  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().length  -  1;	  final    double[]    observations    =    getObservations().length;    	non-compiled	[CE]  incompatible  types	17	None	replace
105	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().length,  parameters);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().length,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().length,  parameters);	  final    double[]    observations    =    getObservations().length;    	non-compiled	[CE]  ';'  expected	17	None	replace
106	[BUG]  [BUGGY]  final  int  parameters  =  getParameters()  -  1;  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameters()  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameters()  -  1;	  final    int    parameters    =    getParameters();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
107	[BUG]  [BUGGY]  g2.draw(guess,  initialGuess);  [CE]  cannot  find  symbol  initialGuess  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g2.draw(guess,  initialGuess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g2.draw(guess,  initialGuess);	  g2.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	24	None	replace
108	[BUG]  [BUGGY]  gaussian.draw(guess,  guess);  [CE]  cannot  find  symbol  gaussian  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  gaussian.draw(guess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	gaussian.draw(guess,  guess);	  g2.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  gaussian	24	None	replace
109	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  guess);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter.Parameter(),  guess);	  return    fit(guess,    new    Gaussian.Parameter(),    guess);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
110	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  guess);  [CE]  package  GaussianFunction  does  not  exist  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Parameter(),  guess);	  return    fit(guess,    new    Gaussian.Parameter(),    guess);    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	67	None	replace
111	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  getObservations()).guess();  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  getObservations()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  getObservations()).guess();	  (new    ParameterGuesser(getRealFunctions(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	8	None	replace
112	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).guess();  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  false).guess();	  (new    ParameterGuesser(getRealFunctions(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	8	None	replace
113	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  true).guess();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  true).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  true).guess();	  (new    ParameterGuesser(getRealFunctions(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	8	None	replace
114	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter.Parameter());  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  GaussianFitter.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  GaussianFitter.Parameter());	  return    fit(guess,    guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
115	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  GaussianFunction.Parameter());  [CE]  package  GaussianFunction  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  GaussianFunction.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  GaussianFunction.Parameter());	  return    fit(guess,    guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	40	None	replace
116	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations(),  parameters.values();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations(),  parameters.values();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations(),  parameters.values();	  final    double[]    observations    =    getObservations().values();    	non-compiled	[CE]  ';'  expected	53	None	replace
117	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(results);  [CE]  cannot  find  symbol  results  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(results);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(results);	  final    double[]    observations    =    getObservations().values();    	non-compiled	[CE]  cannot  find  symbol  results	53	None	replace
118	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())).check();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations())).check();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).check();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
119	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).check();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).check();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).check();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
120	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).check();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).check();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).check();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
121	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter.Parametric());  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter.Parametric());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
122	[BUG]  [BUGGY]  returns  fit(guess,  new  GaussianFitter.Parametric());  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  returns  fit(guess,  new  GaussianFitter.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	returns  fit(guess,  new  GaussianFitter.Parametric());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	37	None	replace
123	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  parameters);	  return    fit(guess,    new    Gaussian.Parametric(),    guess);    	non-compiled	[CE]  cannot  find  symbol  parameters	50	None	replace
124	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  initialGuess);  [CE]  cannot  find  symbol  initialGuess  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  initialGuess);	  return    fit(guess,    new    Gaussian.Parametric(),    guess);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	50	None	replace
125	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  metrics);  [CE]  cannot  find  symbol  metrics  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  metrics);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  metrics);	  return    fit(guess,    new    Gaussian.Parametric(),    guess);    	non-compiled	[CE]  cannot  find  symbol  metrics	50	None	replace
126	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).initialGuess();  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()),  guess).initialGuess();	  (new    ParameterGuesser(getRealFunction()),    guess).guess();    	non-compiled	[CE]  ')'  expected	42	None	replace
127	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).init();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).init();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()),  guess).init();	  (new    ParameterGuesser(getRealFunction()),    guess).guess();    	non-compiled	[CE]  ')'  expected	42	None	replace
128	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.clone();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.clone();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  parameters.clone();	  final    double[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  ';'  expected	29	None	replace
129	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);  [CE]  cannot  find  symbol  temps  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);	  final    double[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  cannot  find  symbol  temps	29	None	replace
130	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess  ==  null);  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess  ==  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess  ==  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess    ==    null);    	non-compiled	[CE]  ')'  expected	63	None	replace
131	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess  ==  null);  [CE]  ')'  expected  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess  ==  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess  ==  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess    ==    null);    	non-compiled	[CE]  ')'  expected	63	None	replace
132	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  parameters);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter.Parameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter.Parameter(),  parameters);	  return    fit(guess,    new    Gaussian.Parameter(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
133	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  parameters);  [CE]  package  GaussianFunction  does  not  exist  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Parameter(),  parameters);	  return    fit(guess,    new    Gaussian.Parameter(),    parameters);    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	7	None	replace
134	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess();  [CE]  not  a  statement  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.initialGuess();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
135	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)),  guess.guess();  [CE]  not  a  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)),  guess.guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess)),  guess.guess();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
136	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.next();  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.next();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.next();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
137	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.node();  [CE]  not  a  statement  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.node();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.node();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
138	[BUG]  [BUGGY]  Gaussian.draw(guess,  guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  Gaussian.draw(guess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Gaussian.draw(guess,  guess);	  Gaussian.draw(guess);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
139	[BUG]  [BUGGY]  Gaussian.draw(g,  guess);  [CE]  cannot  find  symbol  g  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  Gaussian.draw(g,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Gaussian.draw(g,  guess);	  Gaussian.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  g	75	None	replace
140	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess,  guess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).pass(guess,  guess);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
141	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess);  [CE]  not  a  statement  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())),  guess);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  not  a  statement	72	None	replace
142	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).pass(guess);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).pass(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess)).pass(guess);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
143	[BUG]  [BUGGY]  final  int  parameters  =  getParameterTypes().length;  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameterTypes().length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterTypes().length;	  final    int    parameters    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
144	[BUG]  [BUGGY]  final  int  parameters  =  getParameterTypes()  -  1;  [CE]  cannot  find  symbol  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameterTypes()  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterTypes()  -  1;	  final    int    parameters    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
145	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null,  guess);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess!=  null,  guess);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
146	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  guess,  parameters);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  cannot  find  symbol  parameters	46	None	replace
147	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  check);  [CE]  cannot  find  symbol  check  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  check);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  check);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  cannot  find  symbol  check	46	None	replace
148	[BUG]  [BUGGY]  final  double  parameters  =  getParameterCount();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getParameterCount();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getParameterCount();	  final    int    parameters    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
149	[BUG]  [BUGGY]  final  int  parameters  =  getParameterCount()  -  1;  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameterCount()  -  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterCount()  -  1;	  final    int    parameters    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
150	[BUG]  [BUGGY]  final  int  parameters  =  getParameterCount()  +  1;  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameterCount()  +  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterCount()  +  1;	  final    int    parameters    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
151	[BUG]  [BUGGY]  final  int  parameters  =  getParameterCount()  -  2;  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameterCount()  -  2;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameterCount()  -  2;	  final    int    parameters    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
152	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric(),  parameters);  [CE]  cannot  find  symbol  parameters  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  Gaussian.Parametric(),  parameters);	  return    fit(guess,    guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  parameters	49	None	replace
153	[BUG]  [BUGGY]  return  fit(guess,  guess,  parameters,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  parameters,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  parameters,  new  Gaussian.Parametric());	  return    fit(guess,    guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  parameters	49	None	replace
154	[BUG]  [BUGGY]  return  fit(guess,  initialGuess,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  initialGuess  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  initialGuess,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  initialGuess,  new  Gaussian.Parametric());	  return    fit(guess,    guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  initialGuess	49	None	replace
155	[BUG]  [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric(),  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  guess,  new  Gaussian.Parametric(),  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  guess,  new  Gaussian.Parametric(),  observations);	  return    fit(guess,    guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	49	None	replace
156	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  initialGuess);  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  guess,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  initialGuess);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
157	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters,  initialGuess);  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  parameters,  initialGuess);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
158	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters,  parameters);  [CE]  cannot  find  symbol  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  guess,  parameters,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  parameters,  parameters);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
159	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  initialGuess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  initialGuess);	  return    fit(new    GaussianFitter.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
160	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  guess,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  guess,  parameters);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  parameters	23	None	replace
161	[BUG]  [BUGGY]  GaussianFitter.draw(g,  guess);  [CE]  cannot  find  symbol  g  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(g,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(g,  guess);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  g	23	None	replace
162	[BUG]  [BUGGY]  GaussianFitter.draw(goog,  guess);  [CE]  cannot  find  symbol  goog  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(goog,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(goog,  guess);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  goog	23	None	replace
163	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.FitterParameter());  [CE]  package  GaussianFunction  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.FitterParameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.FitterParameter());	  return    fit(guess,    new    GaussianFunction.Parameter());    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	41	None	replace
164	[BUG]  [BUGGY]  g.draw(guess,  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g.draw(guess,  observations);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g.draw(guess,  observations);	  g.draw(guess,    initialGuess);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	22	None	replace
165	[BUG]  [BUGGY]  g.draw(guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g.draw(guess,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g.draw(guess,  parameters);	  g.draw(guess,    initialGuess);    	non-compiled	[CE]  cannot  find  symbol  parameters	22	None	replace
166	[BUG]  [BUGGY]  g.draw(guess,  estimates);  [CE]  cannot  find  symbol  estimates  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g.draw(guess,  estimates);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g.draw(guess,  estimates);	  g.draw(guess,    initialGuess);    	non-compiled	[CE]  cannot  find  symbol  estimates	22	None	replace
167	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())),  guess).guess();  [CE]  not  a  statement  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations())),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations())),  guess).guess();	  (new    ParameterGuesser(getParameters())),    guess).guess();    	non-compiled	[CE]  not  a  statement	89	None	replace
168	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations(),  parameters);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservations(),  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations(),  parameters);	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  ';'  expected	54	None	replace
169	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations(false);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservations(false);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations(false);	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
170	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess!=  null);  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess!=  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  checkState(guess!=  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess!=    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
171	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess.checkState(guess!=  null);  [CE]  ')'  expected  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess.checkState(guess!=  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  guess.checkState(guess!=  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess!=    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
172	[BUG]  [BUGGY]  return  fit(question,  new  GaussianFitter.Parametric());  [CE]  cannot  find  symbol  question  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(question,  new  GaussianFitter.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(question,  new  GaussianFitter.Parametric());	  return    fit(question,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  question	38	None	replace
173	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  Guess);  [CE]  cannot  find  symbol  Guess  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  Guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  Guess);	  GaussianFitter.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  Guess	48	None	replace
174	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations(),  guess);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations(),  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations(),  guess);	  final    double[]    observations    =    getObservations(),    parameters);    	non-compiled	[CE]  ';'  expected	18	None	replace
175	[BUG]  [BUGGY]  final  double[]  observations  =  getReturnObservations(),  parameters);  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getReturnObservations(),  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getReturnObservations(),  parameters);	  final    double[]    observations    =    getObservations(),    parameters);    	non-compiled	[CE]  ';'  expected	18	None	replace
176	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())).  skip();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getObservations())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getObservations())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
177	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).  skip();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
178	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).  skip();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
179	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getObservations())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
180	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds(),  guess)).guess();	  (new    ParameterGuesser(getSeconds())).guess();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
181	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds()),  guess).guess();  [CE]  ')'  expected  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds()),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds()),  guess).guess();	  (new    ParameterGuesser(getSeconds())).guess();    	non-compiled	[CE]  ')'  expected	1	None	replace
182	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())),  guess).guess();  [CE]  not  a  statement  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())),  guess).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())),  guess).guess();	  (new    ParameterGuesser(getSeconds())).guess();    	non-compiled	[CE]  not  a  statement	1	None	replace
183	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(guess,  parameters);	  final    double[]    observations    =    getObservedPoints().toArray(guess);    	non-compiled	[CE]  cannot  find  symbol  parameters	86	None	replace
184	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.toArray(guess);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  parameters.toArray(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  parameters.toArray(guess);	  final    double[]    observations    =    getObservedPoints().toArray(guess);    	non-compiled	[CE]  ';'  expected	86	None	replace
185	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations(),  guess);  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations(),  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations(),  guess);	  final    int[]    observations    =    getObservations(),    parameters);    	non-compiled	[CE]  ';'  expected	35	None	replace
186	[BUG]  [BUGGY]  final  int[]  observations  =  getReturnObservations(),  parameters);  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getReturnObservations(),  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getReturnObservations(),  parameters);	  final    int[]    observations    =    getObservations(),    parameters);    	non-compiled	[CE]  ';'  expected	35	None	replace
187	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  guess,  observations);	  return    fit(guess,    new    Gaussian.Parametric(),    observations);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	76	None	replace
188	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter().Parameter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter().Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter().Parameter());	  return    fit(guess,    new    GaussianFitter.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	39	None	replace
189	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter().parameter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter().parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter().parameter());	  return    fit(guess,    new    GaussianFitter.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	39	None	replace
190	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  initialGuess);  [CE]  cannot  find  symbol  initialGuess  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  initialGuess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  initialGuess);	  return    fit(new    Gaussian.Parametric(),    guess,    0,    parameters);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	56	None	replace
191	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  assumptions);  [CE]  cannot  find  symbol  assumptions  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  assumptions);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  assumptions);	  return    fit(new    Gaussian.Parametric(),    guess,    0,    parameters);    	non-compiled	[CE]  cannot  find  symbol  assumptions	56	None	replace
192	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  metrics);  [CE]  cannot  find  symbol  metrics  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  metrics);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  metrics);	  return    fit(new    Gaussian.Parametric(),    guess,    0,    parameters);    	non-compiled	[CE]  cannot  find  symbol  metrics	56	None	replace
193	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(guess);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(guess);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
194	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(success);  [CE]  cannot  find  symbol  success  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(success);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(success);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol  success	71	None	replace
195	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(groomed);  [CE]  cannot  find  symbol  groomed  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(groomed);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(groomed);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol  groomed	71	None	replace
196	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  double[results.length]);  [CE]  cannot  find  symbol  results  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  double[results.length]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(new  double[results.length]);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol  results	71	None	replace
197	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).guess();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).guess();  (new  ParameterGuesser(getSeconds())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).gues();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
198	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).guess();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).gues();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
199	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  assumptions);  [CE]  cannot  find  symbol  assumptions  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  assumptions);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  assumptions);	  return    fit(guess,    new    Gaussian.Parametric(),    parameters);    	non-compiled	[CE]  cannot  find  symbol  assumptions	51	None	replace
200	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  estimates);  [CE]  cannot  find  symbol  estimates  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  estimates);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  estimates);	  return    fit(guess,    new    Gaussian.Parametric(),    parameters);    	non-compiled	[CE]  cannot  find  symbol  estimates	51	None	replace
201	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  guess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(guess,  guess);	  final    double[]    observations    =    getObservedPoints().toArray(guess);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
202	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  parameter);  [CE]  cannot  find  symbol  parameter  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  parameter);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(guess,  parameter);	  final    double[]    observations    =    getObservedPoints().toArray(guess);    	non-compiled	[CE]  cannot  find  symbol  parameter	86	None	replace
203	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).initialGuess();  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).initialGuess();	  (new    ParameterGuesser(getParameters()),    guess).guess();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
204	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  guess,  observations);  [CE]  package  GaussianFunction  does  not  exist  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.Parameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Parameter(),  guess,  observations);	  return    fit(guess,    new    Gaussian.Parameter(),    guess,    observations);    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	4	None	replace
205	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  v).guess();  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  v).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  v).guess();	  (new    ParameterGuesser(getRealFunctions(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	8	None	replace
206	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Parametric(),  parameters);  [CE]  package  GaussianFunction  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.Parametric(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Parametric(),  parameters);	  return    fit(guess,    new    Gaussian.Parametric(),    parameters);    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	51	None	replace
207	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter2.Parameter());  [CE]  package  GaussianFitter2  does  not  exist  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter2.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter2.Parameter());	  return    fit(guess,    new    GaussianFitter1.Parameter());    	non-compiled	[CE]  package  GaussianFitter2  does  not  exist	80	None	replace
208	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).initialGuess();  [CE]  not  a  statement  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())),  guess).initialGuess();	  (new    ParameterGuesser(getParameters())),    guess).guess();    	non-compiled	[CE]  not  a  statement	89	None	replace
209	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).passes(guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).passes(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).passes(guess);	  (new    ParameterGuesser(getRealFunctions()),    guess).guess();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
210	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.references.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[this.references.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  references	83	None	replace
211	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[computes.size()  ]);  [CE]  cannot  find  symbol  computes  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[computes.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[computes.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  computes	83	None	replace
212	[BUG]  [BUGGY]  GaussianUtil.draw(guess,  guess);  [CE]  cannot  find  symbol  GaussianUtil  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianUtil.draw(guess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianUtil.draw(guess,  guess);	  Gaussian.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  GaussianUtil	75	None	replace
213	[BUG]  [BUGGY]  GaussianUtil.draw(guess);  [CE]  cannot  find  symbol  GaussianUtil  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianUtil.draw(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianUtil.draw(guess);	  Gaussian.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  GaussianUtil	75	None	replace
214	[BUG]  [BUGGY]  return  fit(guess,  new  ParameterGuesser.Parameter());  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  ParameterGuesser.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  ParameterGuesser.Parameter());	  return    fit(guess,    new    GaussianShape.Parameter());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
215	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianShape.Function());  [CE]  package  GaussianShape  does  not  exist  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianShape.Function());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianShape.Function());	  return    fit(guess,    new    GaussianShape.Parameter());    	non-compiled	[CE]  package  GaussianShape  does  not  exist	52	None	replace
216	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnZero()  ]);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnZero()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[returnZero()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
217	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  +  1]);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  +  1]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  +  1]);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
218	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())).initialGuess();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())).initialGuess();	  (new    ParameterGuesser(getRealFunction()),    guess).guess();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
219	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).gues();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
220	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().length  +  1;  [CE]  incompatible  types  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().length  +  1;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().length  +  1;	  final    double[]    observations    =    getObservations().length;    	non-compiled	[CE]  incompatible  types	17	None	replace
221	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Fitter());  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Fitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Fitter());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
222	[BUG]  [BUGGY]  returns  fit(guess,  new  Gaussian.Fitter());  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  returns  fit(guess,  new  Gaussian.Fitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	returns  fit(guess,  new  Gaussian.Fitter());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	37	None	replace
223	[BUG]  [BUGGY]  returns  fit(guess,  new  Gaussian.Parameter());  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  returns  fit(guess,  new  Gaussian.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	returns  fit(guess,  new  Gaussian.Parameter());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	37	None	replace
224	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.doubleValue();  [CE]  not  a  statement  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.doubleValue();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.doubleValue();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
225	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.clone();  [CE]  not  a  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.clone();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.clone();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
226	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length;  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length;	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
227	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.size();  [CE]  not  a  statement  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.size();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.initialGuess.size();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
228	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.length()  ]);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.length()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.length()  ]);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
229	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  +  1]);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  +  1]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  +  1]);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
230	[BUG]  [BUGGY]  final  int  parameters  =  getObservations().length  -  guess.length;  [CE]  missing  return  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getObservations().length  -  guess.length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getObservations().length  -  guess.length;	  final    int    parameters    =    getObservations().length;    	non-compiled	[CE]  missing  return  statement	69	None	replace
231	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[1]);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[])  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[1]);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[1]);	  return    fit(new    Gaussian.Parametric(),    guess,    new    WeightedObservedPoint[0]);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[])	88	None	replace
232	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess.length;  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess.length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  guess.length;	  final    double[]    observations    =    getObservedPoints().length;    	non-compiled	[CE]  ';'  expected	31	None	replace
233	[BUG]  [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [CE]  missing  return  statement  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  missing  return  statement	12	None	replace
234	[BUG]  [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  [CE]  missing  return  statement  [FE]      NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  missing  return  statement	12	None	replace
235	[BUG]  [BUGGY]  return  fit(new  GaussianFitter(),  guess,  parameters);  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter(),  guess,  parameters);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	3	None	replace
236	[BUG]  [BUGGY]  return  fit(new  GaussianFitter(),  guess,  observations);  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter(),  guess,  observations);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	3	None	replace
237	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).initialGuess();  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess).initialGuess();	  (new    ParameterGuesser(getRealFunction())),    guess).guess();    	non-compiled	[CE]  not  a  statement	44	None	replace
238	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[0],  guess);  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(new  int[0],  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(new  int[0],  guess);	  final    int[]    observations    =    getObservations().toArray(new    int[0]);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
239	[BUG]  [BUGGY]  return  fit(guess,  new  ParameterParameter(),  parameters);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  ParameterParameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  ParameterParameter(),  parameters);	  return    fit(guess,    new    GaussianParameter(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
240	[BUG]  [BUGGY]  return  fit(guess,  new  ParameterGuesser(),  parameters);  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  ParameterGuesser(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  ParameterGuesser(),  parameters);	  return    fit(guess,    new    GaussianParameter(),    parameters);    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	68	None	replace
241	[BUG]  [BUGGY]  final  int  parameters  =  getParameters()  -  guess;  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int  parameters  =  getParameters()  -  guess;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int  parameters  =  getParameters()  -  guess;	  final    int    parameters    =    getParameters();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
242	[BUG]  [BUGGY]  return  fit(guess,  parameters.Parameter(),  new  Gaussian);  [CE]  '('  or  '['  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameters.Parameter(),  new  Gaussian);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameters.Parameter(),  new  Gaussian);	  return    fit(guess,    new    Gaussian.Parameter(),    parameters);    	non-compiled	[CE]  '('  or  '['  expected	7	None	replace
243	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations().clone();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservations().clone();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations().clone();	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
244	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations().length;  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservations().length;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations().length;	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
245	[BUG]  [BUGGY]  Return  fit(guess,  new  Gaussian.Fitter());  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  Return  fit(guess,  new  Gaussian.Fitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Return  fit(guess,  new  Gaussian.Fitter());	  Return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	36	None	replace
246	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  parameters,  guess);  [CE]  cannot  find  symbol  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  parameters,  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  parameters,  guess);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
247	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  0,  parameters);  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  guess,  0,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  0,  parameters);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
248	[BUG]  [BUGGY]  return  fit(new  GaussianParameter(),  guess,  1,  parameters);  [CE]  cannot  find  symbol  [FE]                          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianParameter(),  guess,  1,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianParameter(),  guess,  1,  parameters);	  return    fit(new    GaussianParameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
249	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).passes();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
250	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(),  new  Gaussian.Parameter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(),  new  Gaussian.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(),  new  Gaussian.Parameter());	  return    fit(guess,    guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	40	None	replace
251	[BUG]  [BUGGY]  return  fit(guess,  parameter,  new  Gaussian.Parameter());  [CE]  cannot  find  symbol  parameter  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameter,  new  Gaussian.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameter,  new  Gaussian.Parameter());	  return    fit(guess,    guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  cannot  find  symbol  parameter	40	None	replace
252	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).check();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).check();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).check();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
253	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess.clone();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess.clone();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  guess.clone();	  final    double[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  ';'  expected	29	None	replace
254	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  double[references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  double[references.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  double[references.size()  ]);	  final    double[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  cannot  find  symbol  references	29	None	replace
255	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getRealFunctions())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getRealFunctions())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getRealFunctions())).guess();  (new  ParameterGuesser(getRealFunctions())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
256	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getReturns())).guess();  (new  ParameterGuesser(getReturns())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
257	[BUG]  [BUGGY]  (new  ParameterGuesser(getFields())).guess();  (new  ParameterGuesser(getParameters())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getFields())).guess();  (new  ParameterGuesser(getParameters())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getFields())).guess();  (new  ParameterGuesser(getParameters())).guess();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getParameters())).guess();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
258	[BUG]  [BUGGY]  final  int[]  observations  =  getStandardObservations(),  parameters);  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getStandardObservations(),  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getStandardObservations(),  parameters);	  final    int[]    observations    =    getObservations(),    parameters);    	non-compiled	[CE]  ';'  expected	35	None	replace
259	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  v).guess();  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  v).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess),  v).guess();	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	43	None	replace
260	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)).pass(0);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess)).pass(0);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess)).pass(0);	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
261	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess;  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints(),  guess;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints(),  guess;	  final    double[]    observations    =    getObservedPoints(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
262	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservedPoints(),  parameters);  [CE]  ';'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservedPoints(),  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservedPoints(),  parameters);	  final    double[]    observations    =    getObservedPoints(),    parameters);    	non-compiled	[CE]  ';'  expected	30	None	replace
263	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  1);  [CE]  no  suitable  method  found  for  fit(double[],Parametric,int)  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  1);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  1);	  return    fit(new    Gaussian.Parametric(),    guess,    1);    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Parametric,int)	55	None	replace
264	[BUG]  [BUGGY]  return  fit(guest,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  guest  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guest,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guest,  new  Gaussian.Parametric());	  return    fit(question,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  guest	38	None	replace
265	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameter());  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameter());	  return    fit(question,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
266	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialPriority())).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getInitialPriority())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialPriority())).guess();	  (new    ParameterGuesser(getInitialGuess())).guess();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
267	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialFunction())).guess();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getInitialFunction())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialFunction())).guess();	  (new    ParameterGuesser(getInitialGuess())).guess();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
268	[BUG]  [BUGGY]  (new  ParameterGuesser(getInitialValues())).guess();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getInitialValues())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getInitialValues())).guess();	  (new    ParameterGuesser(getInitialGuess())).guess();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
269	[BUG]  [BUGGY]  return  fit(guess,  new  ParameterFunction.Parameter());  [CE]  package  ParameterFunction  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  ParameterFunction.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  ParameterFunction.Parameter());	  return    fit(guess,    new    GaussianFunction.Parameter());    	non-compiled	[CE]  package  ParameterFunction  does  not  exist	41	None	replace
270	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(this.results);  [CE]  cannot  find  symbol  results  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(this.results);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(this.results);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol  results	71	None	replace
271	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess,  v);  [CE]  cannot  find  symbol  v  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).pass(guess,  v);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).pass(guess,  v);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  cannot  find  symbol  v	72	None	replace
272	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).passValue(guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).passValue(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).passValue(guess);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
273	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(this.parameters));  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(this.parameters));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(this.parameters));	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  cannot  find  symbol  parameters	81	None	replace
274	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(null));  [CE]  no  suitable  method  found  for  fit(double[],GaussianFitter)  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(null));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(null));	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],GaussianFitter)	81	None	replace
275	[BUG]  [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  }  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  }	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
276	[BUG]  [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
277	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  new  ParameterGuesser(getStandardArgs())).guess();  [CE]  ';'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs())).guess();  new  ParameterGuesser(getStandardArgs())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())).guess();  new  ParameterGuesser(getStandardArgs())).guess();	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
278	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess!=  null);  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess!=  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  false).checkState(guess!=  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess!=    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
279	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getObservations())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
280	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).  skip();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).guess();  (new  ParameterGuesser(getParameters())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
281	[BUG]  [BUGGY]  GaussianFitter.drawQuote(guess);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.drawQuote(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.drawQuote(guess);	  GaussianFitter.draw(guess);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
282	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().clonePositiveTree();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().clonePositiveTree();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().clonePositiveTree();	  final    double[]    observations    =    getObservations().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
283	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  false);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  false);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).checkState(guess  ==  null,  false);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
284	[BUG]  [BUGGY]  return  fit(new  GaussianFitter(),  parameters,  guess);  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter(),  parameters,  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter(),  parameters,  guess);	  return    fit(new    GaussianFitter.Parameter(),    guess,    parameters);    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	6	None	replace
285	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  0,  parameters);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  0,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  0,  parameters);	  return    fit(new    GaussianFitter.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
286	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(),  parameters.Parameter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(),  parameters.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(),  parameters.Parameter());	  return    fit(guess,    new    GaussianFitter.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	39	None	replace
287	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(1).Parameter());  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(1).Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(1).Parameter());	  return    fit(guess,    new    GaussianFitter.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	39	None	replace
288	[BUG]  [BUGGY]  g.draw(guess,  Guess);  [CE]  cannot  find  symbol  Guess  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g.draw(guess,  Guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g.draw(guess,  Guess);	  g.draw(guess,    initialGuess);    	non-compiled	[CE]  cannot  find  symbol  Guess	22	None	replace
289	[BUG]  [BUGGY]  return  fit(guess,  new  GassianParameter(),  guess,  parameters);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GassianParameter(),  guess,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GassianParameter(),  guess,  parameters);	  return    fit(guess,    new    GaussianParameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
290	[BUG]  [BUGGY]  return  fit(guess,  new  Parameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Parameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Parameter(),  guess,  observations);	  return    fit(guess,    new    GaussianParameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
291	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())).passes(guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())).passes(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())).passes(guess);	  (new    ParameterGuesser(getRealFunction()).guess();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
292	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[this.results.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[this.results.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[results.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  results	82	None	replace
293	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  null).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  null).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess),  null).guess();	  (new    ParameterGuesser(getParameters(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	20	None	replace
294	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  guess,  v);  [CE]  cannot  find  symbol  v  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  guess,  v);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  guess,  v);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  v	23	None	replace
295	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  guess,  p);  [CE]  cannot  find  symbol  p  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  guess,  p);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  guess,  p);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  p	23	None	replace
296	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().computeTreeParameters();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().computeTreeParameters();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().computeTreeParameters();	  final    double[]    observations    =    getObservations().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
297	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  1,  observations);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  1,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  1,  observations);	  return    fit(new    GaussianFitter.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
298	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).returnNull();  [CE]  not  a  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).returnNull();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())),  guess).returnNull();	  (new    ParameterGuesser(getRealFunctions())),    guess).guess();    	non-compiled	[CE]  not  a  statement	10	None	replace
299	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).check();  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())),  guess).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())),  guess).check();	  (new    ParameterGuesser(getRealFunctions())),    guess).guess();    	non-compiled	[CE]  not  a  statement	10	None	replace
300	[BUG]  [BUGGY]  return  fit(guess,  new  ParameterGuesser.Parameter(),  parameters);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  ParameterGuesser.Parameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  ParameterGuesser.Parameter(),  parameters);	  return    fit(guess,    new    Gaussian.Parameter(),    parameters);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
301	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter().Parameter(),  parameters);  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter().Parameter(),  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter().Parameter(),  parameters);	  return    fit(guess,    new    Gaussian.Parameter(),    parameters);    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	7	None	replace
302	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[success.size()  ]);  [CE]  cannot  find  symbol  success  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[success.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[success.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[results.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  success	82	None	replace
303	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ],  guess);  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ],  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoint[temps.size()  ],  guess);	  final    double[]    observations    =    getObservedPoints().toArray(new    WeightedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
304	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).passes();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
305	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).passes();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).passes();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).passes();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).passes();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
306	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())).passes(guess);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())).passes(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())).passes(guess);	  (new    ParameterGuesser(getParameters()),    guess).guess();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
307	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFunction.Fitter());  [CE]  package  GaussianFunction  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFunction.Fitter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFunction.Fitter());	  return    fit(guess,    new    GaussianFunction.Parameter());    	non-compiled	[CE]  package  GaussianFunction  does  not  exist	41	None	replace
308	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).pass(guess);  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).pass(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).pass(guess);	  (new    ParameterGuesser(getRealFunctions())).pass(guess);    	non-compiled	[CE]  ')'  expected	72	None	replace
309	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().values(),  guess;  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().values(),  guess;  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().values(),  guess;	  final    double[]    observations    =    getObservations().values();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
310	[BUG]  [BUGGY]  g2.draw(guess,  guess.length);  [CE]  cannot  find  symbol  g2  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  g2.draw(guess,  guess.length);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	g2.draw(guess,  guess.length);	  g2.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  g2	24	None	replace
311	[BUG]  [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  parameters);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  parameters);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter.Parameter(),  guess,  parameters,  parameters);	  return    fit(new    GaussianFitter.Parameter(),    guess,    parameters);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
312	[BUG]  [BUGGY]  return  fit(new  GaussianFitter,  parameters.Parameter(),  guess);  [CE]  '('  or  '['  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  GaussianFitter,  parameters.Parameter(),  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  GaussianFitter,  parameters.Parameter(),  guess);	  return    fit(new    GaussianFitter.Parameter(),    guess,    parameters);    	non-compiled	[CE]  '('  or  '['  expected	6	None	replace
313	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.ParameterType(0));  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.ParameterType(0));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.ParameterType(0));	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
314	[BUG]  [BUGGY]  return  get(guess,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  get(guess,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  get(guess,  new  Gaussian.Parametric());	  returns    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
315	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ],  guess);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ],  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[returnNull()  ],  guess);	  final    double[]    observations    =    getObservations().toArray(new    double[returnNull()    ]);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
316	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  initialGuess,  guess);  [CE]  cannot  find  symbol  initialGuess  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  initialGuess,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  initialGuess,  guess);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol  initialGuess	23	None	replace
317	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  guess,  false);  [CE]  cannot  find  symbol  [FE]                        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  guess,  false);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  guess,  false);	  GaussianFitter.draw(guess,    guess);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
318	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  false);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[],boolean)  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  false);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  new  WeightedObservedPoint[0],  false);	  return    fit(new    Gaussian.Parametric(),    guess,    new    WeightedObservedPoint[0]);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],WeightedObservedPoint[],boolean)	88	None	replace
319	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).check();  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess).check();	  (new    ParameterGuesser(getRealFunction())),    guess).guess();    	non-compiled	[CE]  not  a  statement	44	None	replace
320	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions())).initialGuess();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions())).initialGuess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions())).initialGuess();	  (new    ParameterGuesser(getRealFunctions()),    guess).guess();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
321	[BUG]  [BUGGY]  (new  ParameterGuesser(getNumberOfObservations(),  guess)).guess();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getNumberOfObservations(),  guess)).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getNumberOfObservations(),  guess)).guess();	  (new    ParameterGuesser(getNumberOfObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
322	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianParameters.Parametric());  [CE]  package  GaussianParameters  does  not  exist  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianParameters.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianParameters.Parametric());	  return    fit(question,    new    Gaussian.Parametric());    	non-compiled	[CE]  package  GaussianParameters  does  not  exist	38	None	replace
323	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian());  [CE]  no  suitable  method  found  for  fit(double[],Gaussian)  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian());	  return    fit(question,    new    Gaussian.Parametric());    	non-compiled	[CE]  no  suitable  method  found  for  fit(double[],Gaussian)	38	None	replace
324	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter(this));  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter(this));  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter(this));	  return    fit(guess,    new    GaussianFitter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	81	None	replace
325	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1,  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  1,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  1,  observations);	  return    fit(new    Gaussian.Parametric(),    guess,    observations);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	33	None	replace
326	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  f.guess());  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction(),  guess),  f.guess());  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction(),  guess),  f.guess());	  (new    ParameterGuesser(getRealFunction(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	43	None	replace
327	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getStandardArgs())).guess();  (new  ParameterGuesser(getStandardArgs())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
328	[BUG]  [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).guess();  [CE]  cannot  find  symbol  [FE]      NotStrictlyPositiveException    [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]          (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	                (new        ParameterGuesser(getObservations())).guess();        (new    ParameterGuesser(getObservations())).guess();    (new  ParameterGuesser(getReturnPoints())).guess();  (new  ParameterGuesser(getReturnPoints())).guess();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
329	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null,  guess);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess)).checkState(guess  ==  null,  guess);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
330	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null,  guess);  [CE]  ')'  expected  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions()),  guess).checkState(guess  ==  null,  guess);	  (new    ParameterGuesser(getRealFunctions())).checkState(guess    ==    null,    guess);    	non-compiled	[CE]  ')'  expected	46	None	replace
331	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardArguments();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardArguments();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardArguments();	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
332	[BUG]  [BUGGY]  final  double[]  observations  =  getStandardObservations().toArray(guess);  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getStandardObservations().toArray(guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getStandardObservations().toArray(guess);	  final    double[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
333	[BUG]  [BUGGY]  return  fit(guess,  parameters,  new  Gaussian.Parameter());  [CE]  cannot  find  symbol  parameters  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameters,  new  Gaussian.Parameter());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameters,  new  Gaussian.Parameter());	  return    fit(guess,    guess,    new    Gaussian.Parameter());    	non-compiled	[CE]  cannot  find  symbol  parameters	40	None	replace
334	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).init(this);  [CE]  ')'  expected  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction()),  guess).init(this);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction()),  guess).init(this);	  (new    ParameterGuesser(getRealFunction()),    guess).guess();    	non-compiled	[CE]  ')'  expected	42	None	replace
335	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())).check();  [CE]  cannot  find  symbol  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())).check();	  (new    ParameterGuesser(getRealFunction()).guess();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
336	[BUG]  [BUGGY]  return  fit(guess,  parameters,  new  Gaussian.Parametric());  [CE]  cannot  find  symbol  parameters  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  parameters,  new  Gaussian.Parametric());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  parameters,  new  Gaussian.Parametric());	  return    fit(guess,    guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  cannot  find  symbol  parameters	49	None	replace
337	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoints());  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoints());  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedPoints());	  final    double[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
338	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArguments())).guess();  (new  ParameterGuesser(getStandardArguments())).check();  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArguments())).guess();  (new  ParameterGuesser(getStandardArguments())).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArguments())).guess();  (new  ParameterGuesser(getStandardArguments())).check();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).check();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
339	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  getParameters()).guess();  [CE]  ')'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  getParameters()).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  getParameters()).guess();	  (new    ParameterGuesser(getRealFunctions(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	8	None	replace
340	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess!=  null);  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess!=  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess!=  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess!=    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
341	[BUG]  [BUGGY]  return  fit(guess,  new  GaussianFitter()).Parameter();  [CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  GaussianFitter()).Parameter();  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  GaussianFitter()).Parameter();	  return    fit(guess,    new    GaussianFitter.Parameter());    	non-compiled	[CE]  constructor  GaussianFitter  in  class  GaussianFitter  cannot  be  applied  to  given  types;	39	None	replace
342	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  this).guess();  [CE]  ')'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters(),  guess),  this).guess();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters(),  guess),  this).guess();	  (new    ParameterGuesser(getParameters(),    guess)).guess();    	non-compiled	[CE]  ')'  expected	20	None	replace
343	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().length,  guess);  [CE]  ';'  expected  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().length,  guess);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().length,  guess);	  final    double[]    observations    =    getObservations().length;    	non-compiled	[CE]  ';'  expected	17	None	replace
344	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess  ==  null);  [CE]  ')'  expected  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess  ==  null);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunctions(),  guess),  guess).checkState(guess  ==  null);	  (new    ParameterGuesser(getRealFunctions(),    guess)).checkState(guess    ==    null);    	non-compiled	[CE]  ')'  expected	63	None	replace
345	[BUG]  [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  new  ParameterGuesser(getObservations())).guess();  }  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	if(guess  ==  null)  {  (new  ParameterGuesser(getObservations())).guess();  }  else  {  new  ParameterGuesser(getObservations())).guess();  }	          (new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	14	None	replace
346	[BUG]  [BUGGY]  Return  fit(guess,  new  Gaussian.ParameterTypes());  [CE]  ';'  expected  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  Return  fit(guess,  new  Gaussian.ParameterTypes());  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	Return  fit(guess,  new  Gaussian.ParameterTypes());	  Return    fit(guess,    new    Gaussian.Parametric());    	non-compiled	[CE]  ';'  expected	36	None	replace
347	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  false);  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(guess,  false);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(guess,  false);	  final    double[]    observations    =    getObservedPoints().toArray(guess);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
348	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).returnNull();  [CE]  not  a  statement  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).returnNull();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())),  guess).returnNull();	  (new    ParameterGuesser(getParameters())),    guess).guess();    	non-compiled	[CE]  not  a  statement	89	None	replace
349	[BUG]  [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).check();  [CE]  not  a  statement  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getParameters())),  guess).check();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getParameters())),  guess).check();	  (new    ParameterGuesser(getParameters())),    guess).guess();    	non-compiled	[CE]  not  a  statement	89	None	replace
350	[BUG]  [BUGGY]  return  fit(guess,  getParameter(),  guess,  observations);  [CE]  cannot  find  symbol  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  getParameter(),  guess,  observations);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  getParameter(),  guess,  observations);	  return    fit(guess.Parameter(),    guess,    observations);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
351	[BUG]  [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoints());  [CE]  cannot  find  symbol  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoints());  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoints());	  final    double[]    observations    =    getObservedPoints().values();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
352	[BUG]  [BUGGY]  (new  ParameterGuesser(getSeconds())).  skip();  [CE]  cannot  find  symbol  [FE]          NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getSeconds())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getSeconds())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
353	[BUG]  [BUGGY]  (new  ParameterGuesser(getStandardArgs())).  skip();  [CE]  cannot  find  symbol  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getStandardArgs())).  skip();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getStandardArgs())).  skip();	          (new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).    skip();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
354	[BUG]  [BUGGY]  final  int[]  observations  =  getObservations().toArray(guess,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]            NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  int[]  observations  =  getObservations().toArray(guess,  parameters);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  int[]  observations  =  getObservations().toArray(guess,  parameters);	  final    int[]    observations    =    getObservations().toArray(results);    	non-compiled	[CE]  cannot  find  symbol  parameters	71	None	replace
355	[BUG]  [BUGGY]  final  double  parameters  =  getParameterValues();  [CE]  cannot  find  symbol  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double  parameters  =  getParameterValues();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double  parameters  =  getParameterValues();	  final    double    parameters    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
356	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.toString();  [CE]  not  a  statement  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.toString();  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.toString();	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
357	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess());  [CE]  not  a  statement  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess());  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.initialGuess());	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
358	[BUG]  [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length);  [CE]  not  a  statement  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  (new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	(new  ParameterGuesser(getRealFunction())),  guess.initialGuess.length);	  (new    ParameterGuesser(getRealFunction())),    guess.guess();    	non-compiled	[CE]  not  a  statement	62	None	replace
359	[BUG]  [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[requires.size()  ]);  [CE]  cannot  find  symbol  requires  [FE]                NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  final  double[]  observations  =  getObservations().toArray(new  double[requires.size()  ]);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	final  double[]  observations  =  getObservations().toArray(new  double[requires.size()  ]);	  final    double[]    observations    =    getObservations().toArray(new    double[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  requires	83	None	replace
360	[BUG]  [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  observations,  guess);  [CE]  observations  has  private  access  in  CurveFitter  [FE]              NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(guess,  new  Gaussian.Parametric(),  observations,  guess);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(guess,  new  Gaussian.Parametric(),  observations,  guess);	  return    fit(guess,    new    Gaussian.Parametric(),    guess);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	50	None	replace
361	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  error);  [CE]  cannot  find  symbol  error  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  error);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  error);	  GaussianFitter.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  error	48	None	replace
362	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  g);  [CE]  cannot  find  symbol  g  [FE]                    NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  g);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  g);	  GaussianFitter.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  g	48	None	replace
363	[BUG]  [BUGGY]  GaussianFitter.draw(guess,  index);  [CE]  cannot  find  symbol  index  [FE]                      NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  GaussianFitter.draw(guess,  index);  [BUGGY]      return  fit(new  Gaussian.Parametric(),  guess);  }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	GaussianFitter.draw(guess,  index);	  GaussianFitter.draw(guess);    	non-compiled	[CE]  cannot  find  symbol  index	48	None	replace
364	[BUG]  [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  new  double[0]);  [CE]  no  suitable  method  found  for  fit(Parametric,double[],int,double[])  [FE]                  NotStrictlyPositiveException      [CONTEXT]      public  double[]  fit()  {  final  double[]  guess  =  (new  ParameterGuesser(getObservations())).guess();      [BUGGY]  return  fit(new  Gaussian.Parametric(),  guess,  0,  new  double[0]);  [BUGGY]      }  [CLASS]  GaussianFitter  1  ParameterGuesser  1  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  ParametricUnivariateRealFunction  f  g  boolean  WeightedObservedPoint[]  observations  double[]  guess  initialGuess  p  parameters  v  	projects/Math58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	0.4082482904638631	121	121	1	replace	return  fit(new  Gaussian.Parametric(),  guess,  0,  new  double[0]);	  return    fit(new    Gaussian.Parametric(),    guess,    0,    parameters);    	non-compiled	[CE]  no  suitable  method  found  for  fit(Parametric,double[],int,double[])	56	None	replace
