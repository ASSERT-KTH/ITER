bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  true;  [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	boolean  removed  =  true;	boolean  removed  =  false;  	compilable	  [FE]  AssertionFailedError	128	1
764	[BUG]  [BUGGY]  boolean  removed  =  true;  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  true;  [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	boolean  removed  =  true;	boolean  removed  =  false;  	compilable	  [FE]  AssertionFailedError	128	1
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  [BUGGY]  copy.add(item);  [BUGGY]  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1062	1062	1	add	copy.add(item);		compilable	  [FE]  AssertionFailedError	16	1
92	[BUG]  [BUGGY]  copy.add(item);  [FE]  AssertionFailedError  [CONTEXT]  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  [BUGGY]  copy.add(item);  [BUGGY]  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1062	1062	1	replace	copy.add(item);		compilable	  [FE]  AssertionFailedError	16	1
637	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  AssertionFailedError	107	1
638	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  AssertionFailedError	107	1
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	195	195	1	add	this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	64	1
380	[BUG]  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	195	195	1	replace	this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	64	1
949	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
950	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
951	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	654	654	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	34	1
200	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	654	654	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	34	1
566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if(item.getPeriod().compareTo(last)  ==  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	604	604	1	add	if(item.getPeriod().compareTo(last)  ==  0)  {	if  (item.getPeriod().compareTo(last)  >  0)  {  	compilable	  [FE]  AssertionFailedError	95	1
567	[BUG]  [BUGGY]  if(item.getPeriod().compareTo(last)  ==  0)  {  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if(item.getPeriod().compareTo(last)  ==  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	604	604	1	replace	if(item.getPeriod().compareTo(last)  ==  0)  {	if  (item.getPeriod().compareTo(last)  >  0)  {  	compilable	  [FE]  AssertionFailedError	95	1
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  [BUGGY]  this.maxY  =  Double.NaN  -  1;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  -  1;	this.maxY  =  Double.NaN;  	compilable	  [FE]  AssertionFailedError	61	1
363	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  -  1;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  [BUGGY]  this.maxY  =  Double.NaN  -  1;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  -  1;	this.maxY  =  Double.NaN;  	compilable	  [FE]  AssertionFailedError	61	1
475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  [BUGGY]  c  =  item.getPeriod().getClass();  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	582	582	1	add	c  =  item.getPeriod().getClass();		compilable	  [FE]  AssertionFailedError	80	1
476	[BUG]  [BUGGY]  c  =  item.getPeriod().getClass();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  [BUGGY]  c  =  item.getPeriod().getClass();  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	582	582	1	replace	c  =  item.getPeriod().getClass();		compilable	  [FE]  AssertionFailedError	80	1
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	44	1
260	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	44	1
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item)  {  add(item,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  double  maxY  minY  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	565	565	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	26	1
152	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item)  {  add(item,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  double  maxY  minY  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	565	565	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	26	1
817	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null)  {  [BUGGY]  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {	if  (item.getValue()  !=  null)  {  	compilable	  [FE]  AssertionFailedError	137	1
818	[BUG]  [BUGGY]  if(yN!=  null)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null)  {  [BUGGY]  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {	if  (item.getValue()  !=  null)  {  	compilable	  [FE]  AssertionFailedError	137	1
697	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	681	681	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	117	1
698	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	681	681	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	117	1
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  [BUGGY]  if(c!=  null)  {  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	add	if(c!=  null)  {	if  (this.timePeriodClass  ==  null)  {  	compilable	  [FE]  AssertionFailedError	77	1
458	[BUG]  [BUGGY]  if(c!=  null)  {  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  [BUGGY]  if(c!=  null)  {  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	replace	if(c!=  null)  {	if  (this.timePeriodClass  ==  null)  {  	compilable	  [FE]  AssertionFailedError	77	1
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(this.getItemCount()  >  1)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	if(this.getItemCount()  >  1)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  AssertionFailedError	124	1
741	[BUG]  [BUGGY]  if(this.getItemCount()  >  1)  {  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(this.getItemCount()  >  1)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	if(this.getItemCount()  >  1)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  AssertionFailedError	124	1
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1288	1288	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	155	1
926	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1288	1288	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	155	1
926	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1288	1288	1	add	if(Double.isNaN(a)||  Double.isInfinite(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	155	1
927	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1288	1288	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	155	1
746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount();		compilable	  [FE]  AssertionFailedError	125	1
747	[BUG]  [BUGGY]  int  count  =  getItemCount();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount();		compilable	  [FE]  AssertionFailedError	125	1
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	186	186	1	add	super(name,  domain);	super(name);  	compilable	  [FE]  AssertionFailedError	45	1
267	[BUG]  [BUGGY]  super(name,  domain);  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	186	186	1	replace	super(name,  domain);	super(name);  	compilable	  [FE]  AssertionFailedError	45	1
721	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	694	694	1	add	item.setValue(value);		compilable	  [FE]  AssertionFailedError	121	1
722	[BUG]  [BUGGY]  item.setValue(value);  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	694	694	1	replace	item.setValue(value);		compilable	  [FE]  AssertionFailedError	121	1
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	694	694	1	add	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	121	1
723	[BUG]  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	694	694	1	replace	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	121	1
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	this.timePeriodClass  =  timePeriodClass;	this.timePeriodClass  =  null;  	compilable	  [FE]  AssertionFailedError	51	1
302	[BUG]  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	this.timePeriodClass  =  timePeriodClass;	this.timePeriodClass  =  null;  	compilable	  [FE]  AssertionFailedError	51	1
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	  	this.timePeriodClass  =  null;  	compilable	  [FE]  AssertionFailedError	51	1
304	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	  	this.timePeriodClass  =  null;  	compilable	  [FE]  AssertionFailedError	51	1
811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  [BUGGY]  item.setValue(item.getValue());  [BUGGY]  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1211	1211	1	add	item.setValue(item.getValue());		compilable	  [FE]  AssertionFailedError	136	1
812	[BUG]  [BUGGY]  item.setValue(item.getValue());  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  [BUGGY]  item.setValue(item.getValue());  [BUGGY]  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1211	1211	1	replace	item.setValue(item.getValue());		compilable	  [FE]  AssertionFailedError	136	1
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	  	this.domain  =  domain;  	compilable	  [FE]  AssertionFailedError	47	1
280	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	  	this.domain  =  domain;  	compilable	  [FE]  AssertionFailedError	47	1
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	190	190	1	add	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	54	1
321	[BUG]  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	190	190	1	replace	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	54	1
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	add	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  AssertionFailedError	83	1
494	[BUG]  [BUGGY]  boolean  added  =  true;  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	replace	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  AssertionFailedError	83	1
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	add	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  AssertionFailedError	31	1
182	[BUG]  [BUGGY]  add(period,  value,  false);  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	replace	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  AssertionFailedError	31	1
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	60	1
356	[BUG]  [BUGGY]  this.minY  =  Double.NaN;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	60	1
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(added)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(added)  {	if  (notify)  {  	compilable	  [FE]  AssertionFailedError	109	1
650	[BUG]  [BUGGY]  if(added)  {  [FE]  AssertionFailedError  [CONTEXT]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(added)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(added)  {	if  (notify)  {  	compilable	  [FE]  AssertionFailedError	109	1
758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  duration  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  duration  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
759	[BUG]  [BUGGY]  long  duration  =  getTimePeriod(0).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  duration  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  duration  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  maximum  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
760	[BUG]  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  maximum  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
902	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
902	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
903	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(item.getValue());  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	667	667	1	add	item.setValue(item.getValue());		compilable	  [FE]  AssertionFailedError	38	1
226	[BUG]  [BUGGY]  item.setValue(item.getValue());  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(item.getValue());  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	667	667	1	replace	item.setValue(item.getValue());		compilable	  [FE]  AssertionFailedError	38	1
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  [BUGGY]  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c))  {	else  if  (!this.timePeriodClass.equals(c))  {  	compilable	  [FE]  AssertionFailedError	81	1
483	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  [BUGGY]  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c))  {	else  if  (!this.timePeriodClass.equals(c))  {  	compilable	  [FE]  AssertionFailedError	81	1
679	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	680	680	1	add	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  AssertionFailedError	114	1
680	[BUG]  [BUGGY]  add(period,  value,  false);  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	680	680	1	replace	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  AssertionFailedError	114	1
733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	695	695	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	123	1
734	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	695	695	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	123	1
631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);    [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	106	1
632	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);    [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	106	1
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item)  {  [BUGGY]  add(item,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  double  maxY  minY  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	564	564	1	add	add(item,  false);	add(item,  true);  	compilable	  [FE]  AssertionFailedError	23	1
134	[BUG]  [BUGGY]  add(item,  false);  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item)  {  [BUGGY]  add(item,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  double  maxY  minY  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	564	564	1	replace	add(item,  false);	add(item,  true);  	compilable	  [FE]  AssertionFailedError	23	1
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }		compilable	  [FE]  AssertionFailedError	138	1
824	[BUG]  [BUGGY]  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }		compilable	  [FE]  AssertionFailedError	138	1
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  [BUGGY]  fireSeriesChanged();  [BUGGY]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	104	1
621	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  [BUGGY]  fireSeriesChanged();  [BUGGY]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	104	1
771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	129	1
772	[BUG]  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	129	1
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [BUGGY]  if(this.data.size()  >  1)  {  [BUGGY]  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	add	if(this.data.size()  >  1)  {	if  (this.data.size()  >  0)  {  	compilable	  [FE]  AssertionFailedError	9	1
51	[BUG]  [BUGGY]  if(this.data.size()  >  1)  {  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [BUGGY]  if(this.data.size()  >  1)  {  [BUGGY]  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	replace	if(this.data.size()  >  1)  {	if  (this.data.size()  >  0)  {  	compilable	  [FE]  AssertionFailedError	9	1
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	62	1
369	[BUG]  [BUGGY]  this.minY  =  Double.NaN;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	62	1
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  AssertionFailedError	48	1
285	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  AssertionFailedError	48	1
877	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
878	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
878	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isInfinite(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
879	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  getRawDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	add	this.data.get(index);		compilable	  [FE]  AssertionFailedError	70	1
416	[BUG]  [BUGGY]  this.data.get(index);  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  getRawDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	replace	this.data.get(index);		compilable	  [FE]  AssertionFailedError	70	1
417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  getDataItem(index);  [BUGGY]  return  getRawDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	add	getDataItem(index);		compilable	  [FE]  AssertionFailedError	70	1
418	[BUG]  [BUGGY]  getDataItem(index);  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  getDataItem(index);  [BUGGY]  return  getRawDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	replace	getDataItem(index);		compilable	  [FE]  AssertionFailedError	70	1
601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	626	626	1	add	if(notify)  {	if  (added)  {  	compilable	  [FE]  AssertionFailedError	101	1
602	[BUG]  [BUGGY]  if(notify)  {  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	626	626	1	replace	if(notify)  {	if  (added)  {  	compilable	  [FE]  AssertionFailedError	101	1
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	192	192	1	add	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	58	1
345	[BUG]  [BUGGY]  this.minY  =  Double.NaN;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	192	192	1	replace	this.minY  =  Double.NaN;		compilable	  [FE]  AssertionFailedError	58	1
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN  -  1;  [BUGGY]  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  -  1;	this.minY  =  Double.NaN;  	compilable	  [FE]  AssertionFailedError	59	1
351	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  1;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.minY  =  Double.NaN  -  1;  [BUGGY]  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  -  1;	this.minY  =  Double.NaN;  	compilable	  [FE]  AssertionFailedError	59	1
626	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);    [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  [BUGGY]  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	add	if(this.data.size()  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]  AssertionFailedError	105	1
627	[BUG]  [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  [FE]  AssertionFailedError  [CONTEXT]  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);    [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  [BUGGY]  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	replace	if(this.data.size()  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]  AssertionFailedError	105	1
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  return  getDataItem(index).getPeriod();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	add	return  getDataItem(index).getPeriod();	return  getRawDataItem(index).getPeriod();  	compilable	  [FE]  AssertionFailedError	69	1
410	[BUG]  [BUGGY]  return  getDataItem(index).getPeriod();  [FE]  AssertionFailedError  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  return  getDataItem(index).getPeriod();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	replace	return  getDataItem(index).getPeriod();	return  getRawDataItem(index).getPeriod();  	compilable	  [FE]  AssertionFailedError	69	1
554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	add	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  	compilable	  [FE]  AssertionFailedError	93	1
555	[BUG]  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	replace	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  	compilable	  [FE]  AssertionFailedError	93	1
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  System.err.println( "Unable  to  add  cloned  item. ");  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	20	1
118	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  item. ");  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  System.err.println( "Unable  to  add  cloned  item. ");  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	20	1
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  double  getMinY()  {  [BUGGY]  double  minY  =  getMaximumItemCount();  [BUGGY]  return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	double  minY  =  getMaximumItemCount();		compilable	  [FE]  AssertionFailedError	28	1
166	[BUG]  [BUGGY]  double  minY  =  getMaximumItemCount();  [FE]  AssertionFailedError  [CONTEXT]  public  double  getMinY()  {  [BUGGY]  double  minY  =  getMaximumItemCount();  [BUGGY]  return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	double  minY  =  getMaximumItemCount();		compilable	  [FE]  AssertionFailedError	28	1
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	System.err.println( "Failed  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	6	1
34	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	System.err.println( "Failed  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	6	1
458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  [BUGGY]  if(c!=  this.timePeriodClass)  {  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	add	if(c!=  this.timePeriodClass)  {	if  (this.timePeriodClass  ==  null)  {  	compilable	  [FE]  AssertionFailedError	77	1
459	[BUG]  [BUGGY]  if(c!=  this.timePeriodClass)  {  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  [BUGGY]  if(c!=  this.timePeriodClass)  {  [BUGGY]  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	replace	if(c!=  this.timePeriodClass)  {	if  (this.timePeriodClass  ==  null)  {  	compilable	  [FE]  AssertionFailedError	77	1
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  1  &&  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	if(getItemCount()  >  1  &&  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  AssertionFailedError	124	1
741	[BUG]  [BUGGY]  if(getItemCount()  >  1  &&  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)  {  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  1  &&  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	if(getItemCount()  >  1  &&  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  AssertionFailedError	124	1
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	add	System.err.println( "Failed  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	4	1
22	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  System.err.println( "Failed  to  add  cloned  item. ");  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	replace	System.err.println( "Failed  to  add  cloned  item. ");		compilable	  [FE]  AssertionFailedError	4	1
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [BUGGY]  if(this.data.size()  >  0  ||  this.data.size()  >  0)  {  [BUGGY]  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	add	if(this.data.size()  >  0  ||  this.data.size()  >  0)  {	if  (this.data.size()  >  0)  {  	compilable	  [FE]  AssertionFailedError	9	1
51	[BUG]  [BUGGY]  if(this.data.size()  >  0  ||  this.data.size()  >  0)  {  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [BUGGY]  if(this.data.size()  >  0  ||  this.data.size()  >  0)  {  [BUGGY]  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	replace	if(this.data.size()  >  0  ||  this.data.size()  >  0)  {	if  (this.data.size()  >  0)  {  	compilable	  [FE]  AssertionFailedError	9	1
824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  item.setValue(yN);  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	item.setValue(yN);		compilable	  [FE]  AssertionFailedError	138	1
825	[BUG]  [BUGGY]  item.setValue(yN);  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  item.setValue(yN);  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	item.setValue(yN);		compilable	  [FE]  AssertionFailedError	138	1
645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  Collections.sort(this.data);  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	Collections.sort(this.data);		compilable	  [FE]  AssertionFailedError	108	1
646	[BUG]  [BUGGY]  Collections.sort(this.data);  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  Collections.sort(this.data);  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	Collections.sort(this.data);		compilable	  [FE]  AssertionFailedError	108	1
818	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null  &&  item.getValue()!=  null)  {  [BUGGY]  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null  &&  item.getValue()!=  null)  {	if  (item.getValue()  !=  null)  {  	compilable	  [FE]  AssertionFailedError	137	1
819	[BUG]  [BUGGY]  if(yN!=  null  &&  item.getValue()!=  null)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  if(yN!=  null  &&  item.getValue()!=  null)  {  [BUGGY]  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null  &&  item.getValue()!=  null)  {	if  (item.getValue()  !=  null)  {  	compilable	  [FE]  AssertionFailedError	137	1
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.clone();  [BUGGY]  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.clone();	TimeSeries  copy  =  (TimeSeries)  super.clone();  	compilable	  [FE]  AssertionFailedError	5	1
27	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.clone();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.clone();  [BUGGY]  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.clone();	TimeSeries  copy  =  (TimeSeries)  super.clone();  	compilable	  [FE]  AssertionFailedError	5	1
871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  [BUGGY]  item.setValue(yN);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1217	1217	1	add	item.setValue(yN);		compilable	  [FE]  AssertionFailedError	146	1
872	[BUG]  [BUGGY]  item.setValue(yN);  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  [BUGGY]  item.setValue(yN);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1217	1217	1	replace	item.setValue(yN);		compilable	  [FE]  AssertionFailedError	146	1
872	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  [BUGGY]  item.setValue(yN);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1217	1217	1	add	item.setValue(yN);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	146	1
873	[BUG]  [BUGGY]  item.setValue(yN);  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  [BUGGY]  item.setValue(yN);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1217	1217	1	replace	item.setValue(yN);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	146	1
607	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	626	626	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	102	1
608	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	626	626	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	102	1
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	84	1
501	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	84	1
878	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <=  0.0))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <=  0.0))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
879	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <=  0.0))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <=  0.0))  {  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <=  0.0))  {	if  (Double.isNaN(a))  {  	compilable	  [FE]  AssertionFailedError	147	1
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	600	600	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	92	1
548	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	600	600	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	92	1
944	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1289	1289	1	add	if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }		compilable	  [FE]  AssertionFailedError	158	1
945	[BUG]  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1289	1289	1	replace	if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }		compilable	  [FE]  AssertionFailedError	158	1
771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  max  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	129	1
772	[BUG]  [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  max  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	129	1
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	item  =(TimeSeriesDataItem)item.clone();		compilable	  [FE]  AssertionFailedError	72	1
428	[BUG]  [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	item  =(TimeSeriesDataItem)item.clone();		compilable	  [FE]  AssertionFailedError	72	1
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	48	1
284	[BUG]  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	48	1
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	48	1
285	[BUG]  [BUGGY]  this.timePeriodClass  =  name.getClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	48	1
968	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }		compilable	  [FE]  AssertionFailedError	162	1
969	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }		compilable	  [FE]  AssertionFailedError	162	1
897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1266	1266	1	add	if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }		compilable	  [FE]  AssertionFailedError	150	1
898	[BUG]  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  [BUGGY]  if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1266	1266	1	replace	if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }		compilable	  [FE]  AssertionFailedError	150	1
638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  AssertionFailedError	107	1
639	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]  }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  AssertionFailedError	107	1
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  Collections.sort(this.data);  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	Collections.sort(this.data);		compilable	  [FE]  AssertionFailedError	6	1
33	[BUG]  [BUGGY]  Collections.sort(this.data);  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  Collections.sort(this.data);  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data);		compilable	  [FE]  AssertionFailedError	6	1
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  yN  =  item.getValue();  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	yN  =  item.getValue();		compilable	  [FE]  AssertionFailedError	138	1
824	[BUG]  [BUGGY]  yN  =  item.getValue();  [FE]  AssertionFailedError  [CONTEXT]  private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();  [BUGGY]  yN  =  item.getValue();  [BUGGY]  if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	yN  =  item.getValue();		compilable	  [FE]  AssertionFailedError	138	1
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  AssertionFailedError	109	1
651	[BUG]  [BUGGY]  if(!notify)  {  [FE]  AssertionFailedError  [CONTEXT]  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  AssertionFailedError	109	1
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  e.printStackTrace();  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	e.printStackTrace();		compilable	  [FE]  AssertionFailedError	20	1
116	[BUG]  [BUGGY]  e.printStackTrace();  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  e.printStackTrace();  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	e.printStackTrace();		compilable	  [FE]  AssertionFailedError	20	1
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item. "  +  clone.toString());  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item. "  +  clone.toString());		compilable	  [FE]  AssertionFailedError	20	1
118	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item. "  +  clone.toString());  [FE]  AssertionFailedError  [CONTEXT]  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item. "  +  clone.toString());  [BUGGY]  }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item. "  +  clone.toString());		compilable	  [FE]  AssertionFailedError	20	1
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
902	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	151	1
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	606	606	1	add	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	100	1
597	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	606	606	1	replace	fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	100	1
920	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [BUGGY]  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }		compilable	  [FE]  AssertionFailedError	154	1
921	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [BUGGY]  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }		compilable	  [FE]  AssertionFailedError	154	1
921	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }		compilable	  [FE]  AssertionFailedError	154	1
922	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [FE]  AssertionFailedError  [CONTEXT]  private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }		compilable	  [FE]  AssertionFailedError	154	1
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
758	[BUG]  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  AssertionFailedError	127	1
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	50	1
296	[BUG]  [BUGGY]  this.timePeriodClass  =  name.getClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	50	1
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.timePeriodClass  =  name.getClass();  this.minY  =  minY;		compilable	  [FE]  AssertionFailedError	50	1
298	[BUG]  [BUGGY]  this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.timePeriodClass  =  name.getClass();  this.minY  =  minY;		compilable	  [FE]  AssertionFailedError	50	1
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	52	1
308	[BUG]  [BUGGY]  this.timePeriodClass  =  name.getClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  name.getClass();  [BUGGY]  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	this.timePeriodClass  =  name.getClass();		compilable	  [FE]  AssertionFailedError	52	1
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	52	1
309	[BUG]  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	52	1
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	60	1
358	[BUG]  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.timePeriodClass  =  getTimePeriodClass();		compilable	  [FE]  AssertionFailedError	60	1
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	695	695	1	add	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	123	1
735	[BUG]  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [FE]  AssertionFailedError  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  double  maxY  minY  value  TimeSeriesDataItem  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	695	695	1	replace	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  AssertionFailedError	123	1
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]  if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	598	598	1	add	if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {	if  (count  ==  0)  {  	compilable	  [FE]  AssertionFailedError	87	1
519	[BUG]  [BUGGY]  if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {  [FE]  AssertionFailedError  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]  if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	598	598	1	replace	if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {	if  (count  ==  0)  {  	compilable	  [FE]  AssertionFailedError	87	1
949	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
950	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]  private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]  return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {	if  (Double.isNaN(b))  {  	compilable	  [FE]  AssertionFailedError	159	1
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  AssertionFailedError	47	1
279	[BUG]  [BUGGY]  this.domain  = "domain ";  [FE]  AssertionFailedError  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  AssertionFailedError	47	1
