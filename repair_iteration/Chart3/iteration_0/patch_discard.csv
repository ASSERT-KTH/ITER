compilation error,881,add,[CE] illegal start of expression,,-(latest - getTimePeriod(0).getSerialIndex() - 1))) { this.data.remove(0);
compilation error,881,add,[CE] illegal start of expression,,&&(( latest - getTimePeriod(0).getSerialIndex() - 1)) < this.maximumItemAge)) { this.data.remove(0);
compilation error,881,add,[CE] illegal start of expression,,&&(( latest - getTimePeriod(0).getSerialIndex() - 1)) >= this.maximumItemAge)) { this.data.remove(0);
patch is same with buggy,1296,replace,,return Math.max(a, b); ,return Math.max(a, b);
increase failing tests,1296,replace, [FE] AssertionFailedError,return Math.max(a, b); ,return Math.min(a, b);
compilation error,1296,replace,[CE] no suitable method found for abs(double,double),return Math.max(a, b); ,return Math.abs(a, b);
compilation error,1071,replace,[CE] cannot find symbol clone,return copy; ,return clone;
compilation error,1071,replace,[CE] cannot find symbol clone,return copy; ,return copy.clone;
compilation error,1071,replace,[CE] cannot find symbol clone,return copy; ,return this.clone;
patch is same with buggy,463,replace,,return getRawDataItem(index).getPeriod(); ,return getRawDataItem(index).getPeriod();
compilation error,463,replace,[CE] cannot find symbol,return getRawDataItem(index).getPeriod(); ,return getSeries(index).getPeriod();
compilation error,1269,add,[CE] unreachable statement,,return Math.max(a, b);
compilation error,1269,add,[CE] unreachable statement,,return Math.min(a, b);
compilation error,1269,add,[CE] cannot find symbol A,,return Math.max(A, b);
patch is same with buggy,187,replace,,this.domain = domain; ,this.domain = domain;
compilation error,187,replace,[CE] cannot find symbol Domain,this.domain = domain; ,this.domain = Domain.DEFAULT_DOMAIN_DESCRIPTION;
compilation error,360,add,[CE] method get in interface List cannot be applied to given types;,,this.data.get(new Double(this.maxY));
compilation error,360,add,[CE] method get in interface List cannot be applied to given types;,,this.data.get(new Double(maxY));
compilation error,360,add,[CE] cannot find symbol,,checkPeriodClass();
compilation error,654,add,[CE] no suitable method found for add(RegularTimePeriod,double),,data.add(period, value);
increase failing tests,654,add, [FE] ClassCastException,,data.add(period);
patch is same with buggy,599,replace,,this.data.add(item); ,this.data.add(item);
increase failing tests,599,replace, [FE] AssertionFailedError,this.data.add(item); ,this.data.remove(item);
compilation error,599,replace,[CE] no suitable method found for add(TimeSeriesDataItem,boolean),this.data.add(item); ,this.data.add(item, notify);
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeriesDataItem)this.data.get(index);
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeriesDataItem)this.data.get(index); copy.add(clone);
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeriesDataItem)super.clone();
patch is same with buggy,429,replace,,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index);
increase failing tests,429,replace, [FE] ArrayIndexOutOfBoundsException,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index - 1);
increase failing tests,429,replace, [FE]  Size,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index + 1);
patch is same with buggy,634,replace,,removeAgedItems(false);// remove old items if necessary, but   // don't notify anyone, because that     // happens next anyway... ,removeAgedItems(false);// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
compilation error,634,replace,[CE] ,removeAgedItems(false);// remove old items if necessary, but   // don't notify anyone, because that     // happens next anyway... ,if(!removeAgedItems(false)) throw new IllegalArgumentException("");// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
patch is same with buggy,169,replace,,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
compilation error,169,replace,[CE] cannot find symbol DEFAULT_FIELD_NAME,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, DEFAULT_FIELD_NAME);
compilation error,169,replace,[CE] no suitable constructor found for TimeSeries(Comparable,String,String,int),this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, 0);
compilation error,188,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList();
compilation error,188,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.minY = minY;
compilation error,188,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.minY = null;
compilation error,187,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList();
compilation error,187,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.domain = domain;
patch is same with buggy,881,replace,,> this.maximumItemAge) { ,> this.maximumItemAge) {
increase failing tests,881,replace, [FE] AssertionFailedError,> this.maximumItemAge) { ,> this.maximumItemCount) {
increase failing tests,881,replace, [FE]  Size,> this.maximumItemAge) { ,> this.maximumItemAge + 1) {
compilation error,667,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(value);
compilation error,667,add,[CE] cannot find symbol,,item.addValue(); fireSeriesChanged();
compilation error,195,add,[CE] cannot find symbol,,if(range!= null) { this.data = new ArrayList(); this.domain = domain; this.range = range; } else { this.data.add(name); }
compilation error,195,add,[CE] cannot find symbol,,if(range!= null) { this.data = new ArrayList(); this.domain = domain; this.range = range; } else { this.data.addAll(name); }
compilation error,429,add,[CE] not a statement,,TimeSeriesDataItem this =(TimeSeriesDataItem)this.data.get(index);
compilation error,429,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { Class <?> timePeriodClass = getTimePeriodClass(); if(timePeriodClass!= DEFAULT_DOMAIN_DESCRIPTION) { return(TimeSeriesDataItem)this.data.get(index); }
compilation error,429,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { Class <?> timePeriodClass = getTimePeriodClass(); if(timePeriodClass!= DEFAULT_DOMAIN_DESCRIPTION) { this.data.add(getRawDataItem(index)); }
patch is same with buggy,190,replace,,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayList();
compilation error,190,replace,[CE] cannot find symbol,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayListWithCapacity(2);
compilation error,190,replace,[CE] cannot find symbol,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayListWithCapacity(32);
patch is same with buggy,627,replace,,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(item);
compilation error,627,replace,[CE] method updateBoundsForAddedItem in class TimeSeries cannot be applied to given types;,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(this.data);
compilation error,627,replace,[CE] cannot find symbol item,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(this.item);
patch is same with buggy,638,replace,,fireSeriesChanged(); ,fireSeriesChanged();
compilation error,638,replace,[CE] cannot find symbol,fireSeriesChanged(); ,updateBoundsForItem(item);
compilation error,638,replace,[CE] cannot find symbol,fireSeriesChanged(); ,updateBoundsForItemAdded(item);
patch is same with buggy,1058,replace,,if (this.data.size() > 0) { ,if(this.data.size() > 0) {
increase failing tests,1050,replace, [FE] IllegalArgumentException,if (start < 0) { ,if(start > 0) {
patch is same with buggy,1050,replace,,if (start < 0) { ,if(start < 0) {
increase failing tests,1050,replace, [FE] IllegalArgumentException,if (start < 0) { ,if(start >= 0) {
patch is same with buggy,1062,replace,,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone =(TimeSeriesDataItem)item.clone();
patch is same with buggy,1062,replace,,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone = (TimeSeriesDataItem)item.clone();
compilation error,1062,replace,[CE] cannot find symbol,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone =(TimeSeriesDataItem)item.get(index);
compilation error,597,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().compareTo(getItemCount() - 1) > 0) { this.data.add(item); added = true; }
compilation error,597,add,[CE] illegal start of expression,,while(item.getPeriod()!= null) { this.data.add(item); added = true;
compilation error,597,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().compareTo(this.item)> 0) { this.data.add(item); added = true; }
increase failing tests,564,add, [FE] SeriesException,,this.data.add(item);
increase failing tests,564,add, [FE] AssertionFailedError,,this.data.add(item); fireSeriesChanged();
compilation error,564,add,[CE] cannot find symbol,,this.data.add(item); updateBounds(item.getPeriod(), this.timePeriodClass);
compilation error,584,add,[CE] cannot find symbol b,,else if(!this.timePeriodClass.equals(c)) { b.append(", but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getClass().getName()); b.append(","); }
compilation error,584,add,[CE] cannot find symbol b,,else if(!this.timePeriodClass.equals(c)) { b.append(", but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getClass().getName()); b.append("."); }
compilation error,584,add,[CE] 'else' without 'if',,else if(!this.timePeriodClass.equals(c)) { b.append(", but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getClass().getName()); b.append(",");
patch is same with buggy,1057,replace,,copy.data = new java.util.ArrayList(); ,copy.data = new java.util.ArrayList();
compilation error,1057,replace,[CE] cannot find symbol,copy.data = new java.util.ArrayList(); ,copy.data = new java.util.ArrayListWithCapacity(this.data.size());
compilation error,1057,replace,[CE] cannot find symbol,copy.data = new java.util.ArrayList(); ,copy.data = new java.util.ArrayListWithCapacity(this.maximumItemCount);
compilation error,596,add,[CE] cannot find symbol b,,b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of");
compilation error,596,add,[CE] cannot find symbol b,,b.append(item.getPeriod().getClass().getName()); b.append(" but the TimeSeries is expecting an instance of");
compilation error,596,add,[CE] cannot find symbol b,,b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of ");
patch is same with buggy,194,replace,,this.maxY = Double.NaN; ,this.maxY = Double.NaN;
compilation error,194,replace,[CE] cannot find symbol NaN,this.maxY = Double.NaN; ,this.maxY = Long.NaN;
patch is same with buggy,1215,replace,,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maxIgnoreNaN(this.maxY, y);
increase failing tests,1215,replace, [FE] AssertionFailedError,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maxIgnoreNaN(this.maxY, y)+ 1;
compilation error,1215,replace,[CE] cannot find symbol,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maximumIgnoreNaN(this.maxY, y);
compilation error,603,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(item);
compilation error,603,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item = getDataItem(getItemCount() - 1);
compilation error,603,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(item); added = true;
compilation error,666,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,double,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
patch is same with buggy,666,replace,,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);
increase failing tests,666,replace, [FE] AssertionFailedError,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value + 1);
compilation error,1053,add,[CE] illegal start of expression,,if(end > start) { if(start > end) { throw new IllegalArgumentException(""); }
compilation error,1053,add,[CE] illegal start of expression,,if(end > start) { if(start > end) { throw new IllegalArgumentException("Requires start <= 0."); }
compilation error,1053,add,[CE] illegal start of expression,,if(end > start) { if(start > end) { throw new IllegalArgumentException("Requires start <= 0."); }
patch is same with buggy,1056,replace,,TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy =(TimeSeries)super.clone();
patch is same with buggy,1056,replace,,TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy = (TimeSeries)super.clone();
compilation error,1056,replace,[CE] variable start is already defined in method createCopy(int,int),TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy =(TimeSeries)super.clone(), start;
patch is same with buggy,1053,replace,,if (end < start) { ,if(end < start) {
increase failing tests,1053,replace, [FE] IllegalArgumentException,if (end < start) { ,if(end > start) {
compilation error,1053,replace,[CE] incompatible types,if (end < start) { ,if(end >> start) {
compilation error,1214,add,[CE] variable y is already defined in method updateBoundsForAddedItem(TimeSeriesDataItem),,double y = yN.doubleValue();
compilation error,1214,add,[CE] illegal start of expression,,if(item.getValue()!= null) { double y = yN.doubleValue(); if(item.getValue() == null) { item.getValue().add(item.getValue()); }
compilation error,1214,add,[CE] illegal start of expression,,if(item.getValue()!= null) { double y = yN.doubleValue(); if(item.getValue() == null) { item.getValue().setValue(item.getValue()); }
increase failing tests,627,add, [FE] AssertionFailedError,,this.data.add(item);
increase failing tests,627,add, [FE] NullPointerException,,this.data.remove(0);
patch is same with buggy,582,replace,,this.timePeriodClass = c; ,this.timePeriodClass = c;
compilation error,582,replace,[CE] cannot find symbol,this.timePeriodClass = c; ,this.timePeriodClass = c.getTimePeriodClass();
compilation error,582,replace,[CE] cannot find symbol timePeriodClass,this.timePeriodClass = c; ,this.timePeriodClass = c.timePeriodClass;
patch is same with buggy,637,replace,,if (notify) { ,if(notify) {
compilation error,582,add,[CE] unreachable statement,,throw new IllegalArgumentException("");
compilation error,582,add,[CE] cannot find symbol,,this.timePeriodClass = c.getTimePeriodClass();
compilation error,1062,add,[CE] illegal start of expression,,if(item!= null) { if(item.getValue() > 0) { throw new IllegalArgumentException(""); }
compilation error,1062,add,[CE] illegal start of expression,,if(item!= null) { if(item.getValue() > 0) { return item; }
compilation error,693,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value); notify = true;
compilation error,693,add,[CE] variable item is already defined in method add(RegularTimePeriod,Number,boolean),,TimeSeriesDataItem item = getDataItem(period);
compilation error,693,add,[CE] no suitable method found for add(RegularTimePeriod,Number,boolean),,this.data.add(period, value, notify);
increase failing tests,599,add, [FE] AssertionFailedError,,this.data.add(item);
increase failing tests,599,add, [FE]  Size,,this.data.remove(0);
increase failing tests,599,add, [FE] AssertionFailedError,,this.data.add(item); added = true;
compilation error,194,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MIN_VALUE;
compilation error,194,add,[CE] cannot find symbol minX,,this.minX = Double.NaN;
compilation error,653,add,[CE] no suitable method found for add(RegularTimePeriod,Double),,this.data.add(period, new Double(value));
compilation error,653,add,[CE] no suitable method found for add(RegularTimePeriod,double),,this.data.add(period, value);
increase failing tests,653,add, [FE] ClassCastException,,this.data.add(period);
compilation error,879,add,[CE] illegal start of expression,,while(( latest - getTimePeriod(0).getSerialIndex())> this.maximumItemAge) { this.data.remove(0);
compilation error,879,add,[CE] illegal start of expression,,while(( latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0);
increase failing tests,634,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol d,,this.data.add(item); d.setValue(item);
compilation error,634,add,[CE] cannot find symbol b,,this.data.add(item); b.setValue(item);
patch is same with buggy,345,replace,,return this.minY; ,return this.minY;
compilation error,345,replace,[CE] bad operand types for binary operator '/',return this.minY; ,return this.minY /(this.maxY - this.minY)/(this.maxY - this.maxY)/(this.maxY - this.maxY)/(this.data == null)? this.data.size() : minY;
increase failing tests,345,replace, [FE] AssertionFailedError,return this.minY; ,return this.minY *(this.maxY - this.minY)*(this.maxY - this.maxY);
compilation error,695,add,[CE] cannot find symbol,,item.addValue(); fireSeriesChanged();
increase failing tests,695,add, [FE] AssertionFailedError,,data.add(item); fireSeriesChanged();
patch is same with buggy,576,replace,,if (item == null) { ,if(item == null) {
increase failing tests,576,replace, [FE] IllegalArgumentException,if (item == null) { ,if(item == null || notify) {
increase failing tests,576,replace, [FE] IllegalArgumentException,if (item == null) { ,if(item!= null) {
compilation error,1212,add,[CE] illegal start of expression,,if(yN!= null) { double y = yN.doubleValue(); if(item.getValue()!= null) { item.setValue(item.getValue()); }
compilation error,1212,add,[CE] illegal start of expression,,if(yN!= null) { double y = yN.doubleValue(); if(item.getValue()!= null) { item.setValue(this.data); }
increase failing tests,885,add, [FE] AssertionFailedError,,this.data.remove(0);
increase failing tests,885,add, [FE] AssertionFailedError,,this.data.remove(0); removed = true;
increase failing tests,885,add, [FE] AssertionFailedError,,this.data.remove(0); removed = false;
compilation error,694,add,[CE] cannot find symbol,,item.addValue(value);
compilation error,1056,add,[CE] cannot find symbol,,super.createCopy(start, end);
increase failing tests,1056,add, [FE] IllegalArgumentException,,if(end > start) { throw new IllegalArgumentException(""); }
compilation error,1056,add,[CE] cannot find symbol,,super.createCopy(start, end); this.data = new java.util.ArrayList();
compilation error,1211,add,[CE] cannot find symbol,,item.setData(item);
increase failing tests,1211,add, [FE] ConcurrentModificationException,,this.data.add(item);
compilation error,666,add,[CE] no suitable method found for add(RegularTimePeriod,double),,this.data.add(period, value); notify = true;
compilation error,666,add,[CE] no suitable method found for add(RegularTimePeriod,Double),,this.data.add(period, new Double(value));
compilation error,666,add,[CE] variable item is already defined in method add(RegularTimePeriod,double,boolean),,TimeSeriesDataItem item = getDataItem(period);
compilation error,637,add,[CE] cannot find symbol,,item.removeChangeListener(this);
compilation error,637,add,[CE] cannot find symbol d,,d.removeChangeListener(this);
compilation error,637,add,[CE] ';' expected,,item.removeChangeListener(this));
patch is same with buggy,885,replace,,if (removed) { ,if(removed) {
compilation error,885,replace,[CE] cannot find symbol itemCount,if (removed) { ,if(removed ||!this.data.containsKey(itemCount)) {
compilation error,885,replace,[CE] cannot find symbol itemCount,if (removed) { ,if(removed &&!this.data.containsKey(itemCount)) {
increase failing tests,186,replace, [FE] AssertionFailedError,super(name); ,super(domain);
compilation error,186,replace,[CE] no suitable constructor found for Series(String,Comparable),super(name); ,super(domain, name);
patch is same with buggy,1273,replace,,return Math.min(a, b); ,return Math.min(a, b);
compilation error,1273,replace,[CE] ';' expected,return Math.min(a, b); ,return Math.min(a, b)|| Double.doubleToLongBits(b)|| Double.doubleToLongBits(a)|| Double.doubleToLongBits(b)|| Double.doubleToLongBits(a)|| Double.doubleToLongBits
compilation error,1273,replace,[CE] ';' expected,return Math.min(a, b); ,return Math.min(a, b)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)
patch is same with buggy,584,replace,,else if (!this.timePeriodClass.equals(c)) { ,else if(!this.timePeriodClass.equals(c)) {
patch is same with buggy,605,replace,,this.data.add(item); ,this.data.add(item);
compilation error,605,replace,[CE] no suitable method found for add(TimeSeriesDataItem,RegularTimePeriod),this.data.add(item); ,this.data.add(item, last);
compilation error,605,replace,[CE] no suitable method found for add(TimeSeriesDataItem,boolean),this.data.add(item); ,this.data.add(item, notify);
compilation error,681,replace,[CE] illegal start of expression,} ,this.data.add(period, value); fireSeriesChanged();
compilation error,681,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,681,replace,[CE] illegal start of expression,} ,this.data.add(period); fireSeriesChanged();
increase failing tests,598,replace, [FE] ArrayIndexOutOfBoundsException,if (count == 0) { ,if(count > 0) {
increase failing tests,598,replace, [FE] ArrayIndexOutOfBoundsException,if (count == 0) { ,if(count > 1) {
increase failing tests,598,replace, [FE] ArrayIndexOutOfBoundsException,if (count == 0) { ,if(count == 1) {
compilation error,638,add,[CE] cannot find symbol,,item.addChangeListener(this);
compilation error,638,add,[CE] cannot find symbol,,item.removeChangeListener(this);
compilation error,638,add,[CE] cannot find symbol,,item.addChangeListener(this); updateBoundsForItem(item);
patch is same with buggy,877,replace,,if (getItemCount() > 1) { ,if(getItemCount() > 1) {
compilation error,877,replace,[CE] no suitable method found for getItemCount(int),if (getItemCount() > 1) { ,if(getItemCount(1) > 1) {
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item = getDataItem(getItemCount() - 1);
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(item);
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item = getDataItem(getItemCount() - last);
compilation error,463,add,[CE] no suitable method found for add(int),,this.data.add(index);
compilation error,581,add,[CE] illegal start of expression,,while(c.hasChildren()) { c = c.getParent();
compilation error,581,add,[CE] illegal start of expression,,if(c!= null) { if(!this.data.contains(c)) { throw new IllegalArgumentException(""); }
compilation error,581,add,[CE] illegal start of expression,,if(c!= null) { if(!this.data.contains(c)) { b.append(","); }
compilation error,1050,add,[CE] variable item is already defined in method createCopy(int,int),,TimeSeriesDataItem item =(TimeSeriesDataItem)super.clone();
compilation error,1050,add,[CE] cannot find symbol item,,TimeSeriesDataItem clone =(TimeSeriesDataItem)item.clone();
compilation error,1050,add,[CE] variable clone is already defined in method createCopy(int,int),,TimeSeriesDataItem clone =(TimeSeriesDataItem)super.clone();
increase failing tests,606,replace, [FE] AssertionFailedError,added = true; ,added = false;
patch is same with buggy,606,replace,,added = true; ,added = true;
compilation error,606,replace,[CE] cannot find symbol adding,added = true; ,adding = false;
compilation error,681,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value); fireSeriesChanged();
increase failing tests,681,add, [FE] ClassCastException,,this.data.add(period); fireSeriesChanged();
compilation error,186,add,[CE] call to super must be first statement in constructor,,super(name); this.domain = domain;
compilation error,186,add,[CE] call to super must be first statement in constructor,,this(name, domain, range);
compilation error,186,add,[CE] no suitable constructor found for TimeSeries(Comparable,String,String,<null>),,this(name, domain, range, null);
compilation error,600,add,[CE] illegal start of expression,,if(item.getPeriod().compareTo(count)> 0) { if(!notify) { this.data.add(item); }
compilation error,600,add,[CE] illegal start of expression,,if(item.getPeriod().compareTo(this.timePeriodClass)> 0) { if(!notify) { this.data.add(item); }
compilation error,600,add,[CE] illegal start of expression,,if(item.getPeriod().compareTo(this.timePeriodClass) > 0) { if(!notify) { this.data.add(item); }
patch is same with buggy,360,replace,,return this.maxY; ,return this.maxY;
increase failing tests,360,replace, [FE] AssertionFailedError,return this.maxY; ,return this.maxY *(this.minY - this.maxY);
increase failing tests,360,replace, [FE] AssertionFailedError,return this.maxY; ,return this.maxY /(this.minY - this.maxY);
compilation error,626,replace,[CE] 'else' without 'if',if (added) { ,else if(notify) {
compilation error,626,replace,[CE] ')' expected,if (added) { ,if(not notify) {
increase failing tests,878,add, [FE] AssertionFailedError,,this.data.remove(0);
compilation error,565,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,565,replace,[CE] illegal start of expression,} ,this.data.add(item); fireSeriesChanged();
compilation error,565,replace,[CE] illegal start of expression,} ,fireDatasetChanged();
compilation error,345,add,[CE] cannot find symbol,,checkPeriodClass(); this.minY = new Double(this.maxY);
compilation error,345,add,[CE] method get in interface List cannot be applied to given types;,,this.data.get(new Double(minY));
compilation error,345,add,[CE] cannot find symbol,,checkPeriodClass();
patch is same with buggy,1211,replace,,Number yN = item.getValue(); ,Number yN = item.getValue();
compilation error,1211,replace,[CE] cannot find symbol,Number yN = item.getValue(); ,Number yN = item.getName();
compilation error,1211,replace,[CE] method getValue in class TimeSeriesDataItem cannot be applied to given types;,Number yN = item.getValue(); ,Number yN = item.getValue(0);
compilation error,1064,add,[CE] cannot find symbol data,,clone.data =(List)item.clone();
compilation error,1064,add,[CE] cannot find symbol data,,clone.data =(List)super.clone();
increase failing tests,1265,add, [FE] AssertionFailedError,,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1265,add,[CE] illegal start of expression,,if(a == 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
increase failing tests,1265,add, [FE] AssertionFailedError,,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(b)) { return a; }
compilation error,693,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,Number,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
patch is same with buggy,693,replace,,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);
compilation error,693,replace,[CE] bad operand types for binary operator '+',TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value + 1);
compilation error,1058,add,[CE] illegal start of expression,,if(copy.size() > 0) { for(int i = start; i < end; i++) { this.data.add(item); }
compilation error,1058,add,[CE] illegal start of expression,,if(copy.size() > 0) { if(!copy.data.contains(start)) { throw new IllegalArgumentException(""); }
compilation error,1058,add,[CE] illegal start of expression,,if(copy.size() > 0) { for(int i = start; i < end; ++i) { this.data.add(item); }
patch is same with buggy,1213,replace,,double y = yN.doubleValue(); ,double y = yN.doubleValue();
compilation error,1213,replace,[CE] cannot find symbol,double y = yN.doubleValue(); ,double y = item.doubleValue();
compilation error,1213,replace,[CE] incompatible types,double y = yN.doubleValue(); ,double y = item.getValue();
patch is same with buggy,193,replace,,this.minY = Double.NaN; ,this.minY = Double.NaN;
compilation error,193,replace,[CE] cannot find symbol naN,this.minY = Double.NaN; ,this.minY = Double.naN;
patch is same with buggy,603,replace,,RegularTimePeriod last = getTimePeriod(getItemCount() - 1); ,RegularTimePeriod last = getTimePeriod(getItemCount() - 1);
increase failing tests,603,replace, [FE]  Size,RegularTimePeriod last = getTimePeriod(getItemCount() - 1); ,RegularTimePeriod last = getTimePeriod(getItemCount());
compilation error,598,add,[CE] illegal start of expression,,if(count > 1) { if(item.getPeriod().compareTo(this.timePeriodClass)> 0) { this.data.add(item); added = true; }
compilation error,598,add,[CE] illegal start of expression,,if(count > 1) { if(item.getPeriod().compareTo(this.item)> 0) { this.data.add(item); added = true; }
compilation error,598,add,[CE] illegal start of expression,,if(count > 1) { if(item.getPeriod().compareTo(this.itemCount)> 0) { this.data.add(item); added = true; }
increase failing tests,600,replace, [FE] AssertionFailedError,added = true; ,added = false;
compilation error,600,replace,[CE] cannot find symbol Added,added = true; ,Added = false;
patch is same with buggy,600,replace,,added = true; ,added = true;
compilation error,191,replace,[CE] possible loss of precision,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = Long.MAX_VALUE;
patch is same with buggy,191,replace,,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = Integer.MAX_VALUE;
increase failing tests,191,replace, [FE] NullPointerException,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = Integer.MIN_VALUE;
patch is same with buggy,580,replace,,Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getClass();
compilation error,580,replace,[CE] cannot find symbol,Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getName();
compilation error,580,replace,[CE] cannot find symbol,Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getRowKey();
compilation error,1217,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(yN.doubleValue());
increase failing tests,1217,add, [FE] AssertionFailedError,,this.data.add(item);
patch is same with buggy,254,replace,,return this.data.size(); ,return this.data.size();
increase failing tests,254,replace, [FE] ArrayIndexOutOfBoundsException,return this.data.size(); ,return this.data.size() - 1;
increase failing tests,254,replace, [FE]  Size,return this.data.size(); ,return this.data.size() + 1;
patch is same with buggy,878,replace,,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();
increase failing tests,878,replace, [FE]  Size,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount() / 1).getSerialIndex();
increase failing tests,878,replace, [FE]  Size,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount()).getSerialIndex();
compilation error,1213,add,[CE] incompatible types,,double y = item.getValue();
compilation error,1213,add,[CE] incompatible types,,double x = item.getValue();
compilation error,1213,add,[CE] incompatible types,,double min = item.getValue();
compilation error,626,add,[CE] cannot find symbol b,,b.append(" but the series already contains an observation"); b.append(item.getPeriod().toString());
increase failing tests,626,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,626,add,[CE] illegal start of expression,,if(notify) { if(this.data.contains(item)) { removeAgedItems(false); }
compilation error,170,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,170,replace,[CE] illegal start of expression,} ,this.data.add(name);
compilation error,170,replace,[CE] illegal start of expression,} ,this.data = getDataItem(name);
compilation error,190,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList();
compilation error,190,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.minimumItemCount = 0;
compilation error,192,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MAX_VALUE;
compilation error,192,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MIN_VALUE;
increase failing tests,877,add, [FE]  Size,,this.data.remove(0);
increase failing tests,877,add, [FE]  Size,,this.data.remove(0); notify = true;
compilation error,195,replace,[CE] illegal start of expression,} ,this.minY = Double.NaN; this.maxY = Double.NaN;
compilation error,195,replace,[CE] illegal start of expression,} ,if(range!= null) { this.data.add(name); } else { this.data.add(name); }
compilation error,195,replace,[CE] illegal start of expression,} ,if(range!= null) { this.data.add(name); } else { this.data.add(domain); }
compilation error,1292,add,[CE] unreachable statement,,return Math.min(a, b);
compilation error,1292,add,[CE] unreachable statement,,return Math.max(a, b);
compilation error,1292,add,[CE] cannot find symbol A,,return Math.min(A, b);
increase failing tests,1288,add, [FE] AssertionFailedError,,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1288,add,[CE] reached end of file while parsing,,if(a > 0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1288,add,[CE] reached end of file while parsing,,if(a > 0.0) { if(Double.isNaN(b)) { return a; }
patch is same with buggy,579,replace,,item = (TimeSeriesDataItem) item.clone(); ,item =(TimeSeriesDataItem)item.clone();
compilation error,579,replace,[CE] cannot find symbol,item = (TimeSeriesDataItem) item.clone(); ,item =(TimeSeriesDataItem)this.data.clone();
patch is same with buggy,579,replace,,item = (TimeSeriesDataItem) item.clone(); ,item = (TimeSeriesDataItem)item.clone();
increase failing tests,597,replace, [FE] ArrayIndexOutOfBoundsException,int count = getItemCount(); ,int count = getItemCount() - 1;
compilation error,597,replace,[CE] cannot find symbol getItemCount,int count = getItemCount(); ,int count = getItemCount - 1;
compilation error,597,replace,[CE] no suitable method found for getItemCount(int),int count = getItemCount(); ,int count = getItemCount(0);
patch is same with buggy,680,replace,,add(period, value, true); ,add(period, value, true);
compilation error,680,replace,[CE] cannot find symbol,add(period, value, true); ,setValue(period, value, true);
compilation error,579,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(item);
compilation error,579,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone();
compilation error,579,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.clone();
patch is same with buggy,653,replace,,add(period, value, true); ,add(period, value, true);
compilation error,653,replace,[CE] cannot find symbol,add(period, value, true); ,setValue(period, value, true);
compilation error,565,add,[CE] cannot find symbol,,fireDatasetChanged();
increase failing tests,565,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,169,add,[CE] call to this must be first statement in constructor,,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
compilation error,169,add,[CE] no suitable constructor found for TimeSeries(Comparable,String),,this(name, DEFAULT_DOMAIN_DESCRIPTION);
compilation error,169,add,[CE] generics are not supported in -source 1.4,,super(name); this.data = new ArrayList < TimePeriodClass>();
compilation error,654,replace,[CE] illegal start of expression,} ,this.data.add(period); fireSeriesChanged();
compilation error,654,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,654,replace,[CE] illegal start of expression,} ,this.data.add(period, value); fireSeriesChanged();
compilation error,576,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(item);
compilation error,576,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone();
compilation error,576,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item = getDataItem(item.getPeriod());
compilation error,191,add,[CE] cannot find symbol minimumItemCount,,this.minimumItemCount = Integer.MAX_VALUE; this.minY = Integer.MINY;
compilation error,191,add,[CE] cannot find symbol minimumItemCount,,this.minimumItemCount = Integer.MIN_VALUE;
compilation error,191,add,[CE] cannot find symbol minimumItemCount,,this.minimumItemCount = Integer.MIN_VALUE; this.minY = Integer.MIN_VALUE;
increase failing tests,1266,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1266,add,[CE] unreachable statement,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; } else { return Math.min(a, b); }
compilation error,1266,add,[CE] unreachable statement,,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else { return Math.min(a, b); }
increase failing tests,1266,replace, [FE] AssertionFailedError,return b; ,return a;
patch is same with buggy,1266,replace,,return b; ,return b;
increase failing tests,1266,replace, [FE] AssertionFailedError,return b; ,return a + 1;
patch is same with buggy,694,replace,,add(item, notify); ,add(item, notify);
compilation error,694,replace,[CE] cannot find symbol,add(item, notify); ,item.addValue(item, notify);
compilation error,694,replace,[CE] cannot find symbol,add(item, notify); ,setValue(item, notify);
compilation error,680,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value);
compilation error,680,add,[CE] cannot find symbol,,TimePeriodClass c = getDataItem(period); this.data.add(c, value);
compilation error,680,add,[CE] cannot find symbol,,TimePeriodClass c = getDataItem(period);
compilation error,605,add,[CE] incompatible types,,item = item.getPeriod().compareTo(last);
increase failing tests,605,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,605,add,[CE] bad operand type TimeSeriesDataItem for unary operator '-',,this.data.add(-item);
compilation error,695,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,695,replace,[CE] illegal start of expression,} ,this.data.add(item);
compilation error,695,replace,[CE] illegal start of expression,} ,item.addValue(value);
compilation error,1212,replace,[CE] cannot find symbol,if (item.getValue() != null) { ,if(yN.getValue()!= null) {
compilation error,1212,replace,[CE] cannot find symbol,if (item.getValue() != null) { ,if(yN.getValue() == null) {
increase failing tests,1265,replace, [FE] AssertionFailedError,if (Double.isNaN(a)) { ,if(!Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,1214,replace,,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y);
patch is same with buggy,1214,replace,,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y);
increase failing tests,1214,replace, [FE] AssertionFailedError,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y + 1);
increase failing tests,1289,replace, [FE] AssertionFailedError,return b; ,return a;
increase failing tests,1289,replace, [FE] AssertionFailedError,return b; ,return a + b;
patch is same with buggy,1289,replace,,return b; ,return b;
compilation error,668,add,[CE] cannot find symbol,,item.addValue(); fireSeriesChanged();
increase failing tests,668,add, [FE] AssertionFailedError,,data.add(item); fireSeriesChanged();
increase failing tests,1288,replace, [FE] AssertionFailedError,if (Double.isNaN(a)) { ,if(!Double.isNaN(a)|| Double.isNaN(b)) {
increase failing tests,1060,add, [FE] AssertionFailedError,,this.data.remove(index);
increase failing tests,1060,add, [FE] ClassCastException,,this.data.add(index, copy);
compilation error,1060,add,[CE] no suitable method found for add(int),,this.data.add(index);
patch is same with buggy,192,replace,,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Long.MAX_VALUE;
increase failing tests,192,replace, [FE] AssertionFailedError,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Integer.MAX_VALUE;
increase failing tests,192,replace, [FE]  Size,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Long.MIN_VALUE;
increase failing tests,170,add, [FE] ClassCastException,,this.data.add(name);
compilation error,170,add,[CE] no suitable method found for getDataItem(Comparable),,this.data = getDataItem(name);
compilation error,1068,replace,[CE] illegal start of expression,} ,if(copy.size() > 0) { if(item.getValue()!= index) { e.printStackTrace(); }
compilation error,1068,replace,[CE] illegal start of expression,} ,clone.data.add(item);
compilation error,1068,replace,[CE] illegal start of expression,} ,if(copy.size() > 0) { if(item.getPeriodClass().getIndex() > index) { e.printStackTrace(); }
compilation error,189,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList();
compilation error,189,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE;
compilation error,189,add,[CE] incompatible types,,this.timePeriodClass = new java.util.ArrayList(); this.minimumItemCount = 0;
compilation error,879,replace,[CE] cannot assign a value to final variable removed,boolean removed = false; ,final boolean removed = false;
patch is same with buggy,879,replace,,boolean removed = false; ,boolean removed = false;
patch is same with buggy,1064,replace,,copy.add(clone); ,copy.add(clone);
compilation error,1064,replace,[CE] no suitable method found for add(TimeSeriesDataItem,int),copy.add(clone); ,copy.add(clone, index);
compilation error,1064,replace,[CE] no suitable method found for add(TimeSeriesDataItem,TimeSeriesDataItem),copy.add(clone); ,copy.add(clone, item);
patch is same with buggy,188,replace,,this.range = range; ,this.range = range;
patch is same with buggy,188,replace,,this.range = range; ,this.range = range;
increase failing tests,1059,add, [FE] AssertionFailedError,,this.data.remove(0);
compilation error,1059,add,[CE] no suitable constructor found for TimeSeriesDataItem(int,int),,this.data.remove(0); copy.add(new TimeSeriesDataItem(start, end));
increase failing tests,1059,add, [FE] AssertionFailedError,,this.data.remove(start);
patch is same with buggy,667,replace,,add(item, notify); ,add(item, notify);
compilation error,667,replace,[CE] cannot find symbol,add(item, notify); ,setValue(item, notify);
compilation error,667,replace,[CE] cannot find symbol,add(item, notify); ,item.add(item, notify);
compilation error,1215,add,[CE] cannot find symbol maxX,,this.maxX = maxIgnoreNaN(this.maxX, y);
compilation error,1215,add,[CE] cannot find symbol maxX,,this.maxX = minIgnoreNaN(this.maxX, y);
compilation error,1215,add,[CE] cannot find symbol maxX,,this.maxX = minIgnoreNaN(this.minX, y);
patch is same with buggy,604,replace,,if (item.getPeriod().compareTo(last) > 0) { ,if(item.getPeriod().compareTo(last)> 0) {
increase failing tests,604,replace, [FE] AssertionFailedError,if (item.getPeriod().compareTo(last) > 0) { ,if(item.getPeriod().compareTo(last) < 0) {
compilation error,1296,add,[CE] reached end of file while parsing,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(!Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,1296,add,[CE] reached end of file while parsing,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(!Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1296,add,[CE] reached end of file while parsing,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(!Double.isNaN(a)|| Double.isNaN(b)) { return b; } else {
increase failing tests,581,replace, [FE] NullPointerException,if (this.timePeriodClass == null) { ,if(c == null) {
compilation error,606,add,[CE] illegal start of expression,,if(item.getPeriod().compareTo(last)> 0) { if(!notify) { this.data.add(item); }
compilation error,606,add,[CE] illegal start of expression,,if(item.getPeriod().equals(last)) { if(!notify) { this.data.add(item); }
compilation error,606,add,[CE] illegal start of expression,,if(item.getPeriod().compareTo(last)> 0) { this.data.add(item); if(notify) { add = true; }
patch is same with buggy,596,replace,,boolean added = false; ,boolean added = false;
patch is same with buggy,1060,replace,,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index);
patch is same with buggy,1060,replace,,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item = (TimeSeriesDataItem)this.data.get(index);
increase failing tests,1060,replace, [FE] ArrayIndexOutOfBoundsException,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index - 1);
compilation error,580,add,[CE] illegal start of expression,,while(item.getPeriod()!= null) { item = item.getPeriod();
compilation error,580,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod()!= null) { item = item.getPeriod(); } else { throw new IllegalArgumentException(""); }
compilation error,580,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod()!= null) { item = item.getPeriod(); }
compilation error,254,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < TimeZone>(); for(int i = 0; i < this.data.size(); i++) { this.data.add(i); }
compilation error,254,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < TimeZone>(); for(int i = 0; i < this.data.size(); i++) { this.data.remove(0); }
compilation error,254,add,[CE] generics are not supported in -source 1.4,,if(this.data!= null) { this.data = new ArrayList < TimeZone>(); for(int i = 0; i < this.data.size(); ++i) { this.data.add(i); }
compilation error,189,replace,[CE] incompatible types,this.timePeriodClass = null; ,this.timePeriodClass = new java.util.ArrayList();
compilation error,189,replace,[CE] cannot find symbol,this.timePeriodClass = null; ,this.timePeriodClass = TimePeriodClass.class;
compilation error,1068,add,[CE] cannot find symbol data,,clone.data.add(item);
compilation error,1068,add,[CE] cannot find symbol,,clone.add(item);
compilation error,1068,add,[CE] cannot find symbol data,,clone.data.add(item); copy.close();
compilation error,1217,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,1217,replace,[CE] illegal start of expression,} ,this.data.add(item);
compilation error,1217,replace,[CE] illegal start of expression,} ,item.setValue(yN);
increase failing tests,1289,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1289,add,[CE] reached end of file while parsing,,if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return a; }
compilation error,1289,add,[CE] unreachable statement,,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else { return Math.min(a, b); }
compilation error,1273,add,[CE] illegal start of expression,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(!Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,1273,add,[CE] illegal start of expression,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(!Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1273,add,[CE] illegal start of expression,,if(Double.isInfinite(a)|| Double.isInfinite(b)) { if(!Double.isInfinite(a)|| Double.isInfinite(b)) { return a; }
compilation error,668,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,668,replace,[CE] illegal start of expression,} ,item.addValue(); fireSeriesChanged();
compilation error,668,replace,[CE] illegal start of expression,} ,item.addValue(value); fireSeriesChanged();
patch is same with buggy,629,replace,,if (getItemCount() > this.maximumItemCount) { ,if(getItemCount() > this.maximumItemCount) {
compilation error,629,replace,[CE] bad operand types for binary operator '>',if (getItemCount() > this.maximumItemCount) { ,if(this.data.get(0) > getItemCount() && item.getSeriesCount() > this.maximumItemCount) {
compilation error,564,replace,[CE] cannot find symbol,add(item, true); ,set(item, true);
compilation error,564,replace,[CE] cannot find symbol,add(item, true); ,set(item, false);
patch is same with buggy,1059,replace,,for (int index = start; index <= end; index++) { ,for(int index = start; index <= end; index++) {
increase failing tests,1059,replace, [FE] AssertionFailedError,for (int index = start; index <= end; index++) { ,for(int index = start; index < end; index++) {
increase failing tests,1059,replace, [FE] AssertionFailedError,for (int index = start; index <= end; index++) { ,for(int index = 0; index <= end; index++) {
compilation error,193,add,[CE] cannot find symbol minimumItemCount,,this.minimumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE;
compilation error,193,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE;
compilation error,1057,add,[CE] illegal start of expression,,if(copy.size() > 0) { if(!copy.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,1057,add,[CE] illegal start of expression,,if(copy.length > 0) { if(!copy.size() > 0) { throw new IllegalArgumentException(""); }
compilation error,1057,add,[CE] no suitable method found for add(int),,copy.add(start);
increase failing tests,629,add, [FE] AssertionFailedError,,this.data.add(item);
increase failing tests,629,add, [FE] AssertionFailedError,,this.data.add(item); removeAgedItems(false);
patch is same with buggy,1058,replace,,if (this.data.size() > 0) { ,if(this.data.size() > 0) {
increase failing tests,1058,replace, [FE]  Size,if (this.data.size() > 0) { ,if(this.data.size() < 0) {
increase failing tests,1058,replace, [FE] AssertionFailedError,if (this.data.size() > 0) { ,if(this.data.size() == 0) {
compilation error,653,add,[CE] no suitable method found for add(RegularTimePeriod,Double),,this.data.add(period, new Double(value));
increase failing tests,653,add, [FE] SeriesException,,add(period, new Double(value));
compilation error,653,add,[CE] no suitable method found for add(RegularTimePeriod,double),,this.data.add(period, value);
patch is same with buggy,603,replace,,RegularTimePeriod last = getTimePeriod(getItemCount() - 1); ,RegularTimePeriod last = getTimePeriod(getItemCount() - 1);
increase failing tests,603,replace, [FE]  Size,RegularTimePeriod last = getTimePeriod(getItemCount() - 1); ,RegularTimePeriod last = getTimePeriod(getItemCount());
compilation error,603,replace,[CE] cannot find symbol,RegularTimePeriod last = getTimePeriod(getItemCount() - 1); ,RegularTimePeriod last = getTimePeriod(getItemCount()).add(item);
compilation error,186,replace,[CE] cannot find symbol Domain,super(name); ,super(name, Domain.UNSPECIFIED_TYPE);
patch is same with buggy,186,replace,,super(name); ,super(name);
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(last);
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item = getDataItem(last);
compilation error,604,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)getDataItem(last);
patch is same with buggy,194,replace,,this.maxY = Double.NaN; ,this.maxY = Double.NaN;
compilation error,194,replace,[CE] cannot find symbol NaN,this.maxY = Double.NaN; ,this.maxY = Long.NaN;
compilation error,1060,add,[CE] no suitable method found for add(int,int),,this.data.add(-index - 1, copy.data.size());
compilation error,1060,add,[CE] no suitable method found for add(int,int),,copy.add(0, index);
compilation error,1060,add,[CE] no suitable constructor found for TimeSeriesDataItem(int,int),,copy.add(-index - 1, new TimeSeriesDataItem(start, index));
compilation error,681,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value); fireSeriesChanged();
compilation error,681,add,[CE] no suitable constructor found for Double(Number),,this.data.add(period, new Double(value)); fireSeriesChanged();
compilation error,1212,add,[CE] cannot find symbol yY,,yY = item.getValue();
compilation error,1212,add,[CE] incompatible types,,double yy = item.getValue();
compilation error,254,add,[CE] illegal start of expression,,for(int i = 0; i < this.data.size(); i++) { if(getItemCount(i) >= this.data.size()) { throw new SeriesException(""); }
compilation error,254,add,[CE] illegal start of expression,,for(int i = 0; i < this.data.size(); i++) { if(getItemCount(i)> this.maximumItemCount) { this.data.add(i); }
compilation error,254,add,[CE] illegal start of expression,,for(int i = 0; i < this.data.size(); i++) { if(getItemCount(i) >= this.data.size()) { throw new IllegalArgumentException(""); }
compilation error,1056,add,[CE] unreachable statement,,return createCopy(start, end);
compilation error,1056,add,[CE] no suitable method found for add(int),,this.data.add(start);
increase failing tests,1266,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
increase failing tests,1266,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return Math.min(a, b); }
increase failing tests,1289,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; }
increase failing tests,1289,add, [FE] AssertionFailedError,,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1269,add,[CE] unreachable statement,,return Math.max(a, b);
compilation error,1269,add,[CE] unreachable statement,,return Math.min(a, b);
compilation error,1269,add,[CE] variable a is already defined in method minIgnoreNaN(double,double),,double a = Double.parseDouble(a, b);
compilation error,637,add,[CE] cannot find symbol,,item.addChangeListener(this);
increase failing tests,637,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,637,add,[CE] cannot find symbol value,,item.setValue(value);
compilation error,668,add,[CE] cannot find symbol,,item.addValue(value); fireSeriesChanged();
compilation error,668,add,[CE] cannot find symbol,,item.addValue(value); notifyListeners(new DataItem(period, false));
compilation error,695,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,695,replace,[CE] illegal start of expression,} ,if(value!= null) { TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify); item.addValue(); } else { fireSeriesChanged(); }
compilation error,695,replace,[CE] illegal start of expression,} ,if(value!= null) { TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify); item.setValue(value); } else { throw new SeriesException(""); }
increase failing tests,627,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,627,add,[CE] bad operand type TimeSeriesDataItem for unary operator '-',,this.data.add(-item);
compilation error,191,replace,[CE] possible loss of precision,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = Long.MAX_VALUE;
compilation error,191,replace,[CE] class expected,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = long.MAX_VALUE;
compilation error,191,replace,[CE] possible loss of precision,this.maximumItemCount = Integer.MAX_VALUE; ,this.maximumItemCount = Double.MAX_VALUE;
increase failing tests,638,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,638,add,[CE] cannot find symbol,,this.data.add(item); notifyListeners(new DataItem(item, getPeriodClass()));
compilation error,638,add,[CE] cannot find symbol,,this.data.add(item); notifyListeners(new DataItem(item, this));
increase failing tests,605,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,605,add,[CE] no suitable method found for add(TimeSeriesDataItem,RegularTimePeriod),,this.data.add(item, last);
compilation error,605,add,[CE] bad operand type RegularTimePeriod for unary operator '-',,this.data.add(-item.getPeriod());
compilation error,1292,add,[CE] unreachable statement,,return Math.min(a, b);
compilation error,1292,add,[CE] variable a is already defined in method maxIgnoreNaN(double,double),,double a = Double.parseDouble(a); b = Double.parseDouble(b);
compilation error,1292,add,[CE] variable a is already defined in method maxIgnoreNaN(double,double),,double a = Double.parseDouble(a, b);
increase failing tests,598,replace, [FE] ArrayIndexOutOfBoundsException,if (count == 0) { ,if(count > 0) {
compilation error,598,replace,[CE] method compareTo in interface Comparable cannot be applied to given types;,if (count == 0) { ,if(count == 0 && item.getPeriod().compareTo(getItemCount())> 0) {
compilation error,598,add,[CE] illegal start of expression,,if(count < 1) { if(item.getPeriod().compareTo("")> 0) { this.data.add(item); }
compilation error,598,add,[CE] illegal start of expression,,if(count < 1) { if(item.getPeriod().compareTo(this.data.size())> 0) { this.data.add(item); }
compilation error,598,add,[CE] illegal start of expression,,if(count < 1) { if(item.getPeriod().equals(getItemCount())) { this.data.add(item); }
compilation error,429,add,[CE] ';' expected,,for(int index = 0; index < this.data.size(); i++) { TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index); if(item == null) { fireSeriesChanged(); }
compilation error,429,add,[CE] ';' expected,,for(int index = 0; index < this.data.size(); i++) { TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index); if(item == null) { throw new SeriesException(""); }
compilation error,429,add,[CE] unclosed string literal,,for(int index = 0; index < this.data.size(); i++) { TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index); if(item == null) { throw new SeriesException("TimeSeriesDataItem instanceof TimeSeriesDataItem
compilation error,565,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,565,replace,[CE] illegal start of expression,} ,this.data.add(item); fireSeriesChanged();
compilation error,565,replace,[CE] illegal start of expression,} ,this.data.add(item); notifyListeners(new DatasetChangeEvent(this));
patch is same with buggy,582,replace,,this.timePeriodClass = c; ,this.timePeriodClass = c;
compilation error,582,replace,[CE] cannot find symbol ClassUtil,this.timePeriodClass = c; ,this.timePeriodClass = ClassUtil.safeMultiply(this.timePeriodClass, notify);
compilation error,582,replace,[CE] cannot find symbol ClassUtil,this.timePeriodClass = c; ,this.timePeriodClass = ClassUtil.safeMultiply(this.timePeriodClass, c);
increase failing tests,878,add, [FE] NullPointerException,,this.data.remove(0);
increase failing tests,654,add, [FE] SeriesException,,add(period, new Double(value));
increase failing tests,654,add, [FE] SeriesException,,add(period, value, true);
patch is same with buggy,1060,replace,,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(index);
patch is same with buggy,1060,replace,,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item = (TimeSeriesDataItem)this.data.get(index);
compilation error,1060,replace,[CE] cannot find symbol,TimeSeriesDataItem item  = (TimeSeriesDataItem) this.data.get(index); ,TimeSeriesDataItem item =(TimeSeriesDATAItem)this.data.get(index);
increase failing tests,195,add, [FE] StackOverflowError,,if(domain!= null && range!= null) { this.data.add(new TimeSeries(name, domain, range)); } else { this.data.add(name); }
increase failing tests,195,add, [FE] NullPointerException,,this.timePeriodClass = name.getClass();
compilation error,169,replace,[CE] no suitable constructor found for TimeSeries(Comparable,String,String,Comparable),this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, name);
compilation error,169,replace,[CE] no suitable constructor found for TimeSeries(Comparable,String,String,boolean),this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, false);
compilation error,169,replace,[CE] cannot reference timePeriodClass before supertype constructor has been called,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); ,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, timePeriodClass);
compilation error,1068,replace,[CE] illegal start of expression,} ,e.printStackTrace();
compilation error,1068,replace,[CE] illegal start of expression,} ,if(copy.size() > this.maximumItemCount) { TimeSeries copy =(TimeSeries)super.clone(); if(copy.get(index)!= 0) { copy.add(clone); }
compilation error,1068,replace,[CE] illegal start of expression,} ,if(copy.size() > this.maximumItemCount) { TimeSeries copy =(TimeSeries)super.clone(); if(copy.get(index)!= 0) { copy.add(item); }
patch is same with buggy,1213,replace,,double y = yN.doubleValue(); ,double y = yN.doubleValue();
compilation error,1213,replace,[CE] incompatible types,double y = yN.doubleValue(); ,double y = item.getValue();
increase failing tests,1213,replace, [FE] AssertionFailedError,double y = yN.doubleValue(); ,double y = yN.doubleValue() + 1;
compilation error,1213,add,[CE] incompatible types,,double y = item.getValue();
compilation error,1213,add,[CE] incompatible types,,double min = item.getValue();
compilation error,1213,add,[CE] incompatible types,,double x = item.getValue();
patch is same with buggy,638,replace,,fireSeriesChanged(); ,fireSeriesChanged();
compilation error,638,replace,[CE] cannot find symbol,fireSeriesChanged(); ,updateBoundsForItem(item);
compilation error,638,replace,[CE] cannot find symbol,fireSeriesChanged(); ,notifyListeners(new DataItem(item));
increase failing tests,600,replace, [FE] AssertionFailedError,added = true; ,added = false;
patch is same with buggy,600,replace,,added = true; ,added = true;
compilation error,345,add,[CE] method parseDouble in class Double cannot be applied to given types;,,double minY = Double.parseDouble(this.minY, this.maxY);
compilation error,345,add,[CE] incompatible types,,double minY = Double.valueOf(this.minY);
compilation error,345,add,[CE] method parseDouble in class Double cannot be applied to given types;,,double minY = Double.parseDouble(this.minY);
increase failing tests,877,add, [FE]  Size,,this.data.remove(0);
increase failing tests,877,add, [FE]  Size,,this.data.clear();
compilation error,877,add,[CE] cannot find symbol,,super.removeAgedItems(notify);
increase failing tests,360,replace, [FE] AssertionFailedError,return this.maxY; ,return this.maxY *(this.maxY - this.minY);
patch is same with buggy,360,replace,,return this.maxY; ,return this.maxY;
compilation error,360,replace,[CE] cannot find symbol,return this.maxY; ,return this.maxY * getDataItemCount();
compilation error,564,replace,[CE] cannot find symbol,add(item, true); ,updateBounds(item, true);
compilation error,564,replace,[CE] cannot find symbol,add(item, true); ,updateBounds(item, false);
increase failing tests,360,add, [FE] StackOverflowError,,double maxY = getMaxY(); this.data.add(new Double(maxY));
increase failing tests,360,add, [FE] StackOverflowError,,this.data.add(new Double(getMaxY()));
compilation error,360,add,[CE] incompatible types,,double maxY = getMaxY(); if(maxY > this.maxY) { this.maxY = new Double(getMaxY() * getItemCount() / 2); }
increase failing tests,564,add, [FE] SeriesException,,this.data.add(item);
compilation error,564,add,[CE] cannot find symbol,,this.data.add(item); updateBounds(item.getPeriod(), this.data.size() - 1);
increase failing tests,564,add, [FE] SeriesException,,this.data.add(item); fireSeriesChanged();
increase failing tests,1058,add, [FE]  Size,,this.data.add(copy);
compilation error,1058,add,[CE] cannot find symbol,,this.data.add(Copy.class);
compilation error,1058,add,[CE] no suitable method found for sort(TimeSeries),,Collections.sort(copy);
patch is same with buggy,580,replace,,Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getClass();
compilation error,580,replace,[CE] bad operand types for binary operator '+',Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getClass() + notify;
compilation error,580,replace,[CE] cannot find symbol,Class c = item.getPeriod().getClass(); ,Class c = item.getPeriod().getName();
compilation error,191,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Integer.MIN_VALUE; this.maximumItemCount = Integer.MAX_VALUE;
compilation error,191,add,[CE] cannot find symbol minItemCount,,this.data.add(new TimeSeries(name, domain, range)); this.minItemCount = Integer.MIN_VALUE;
compilation error,191,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Integer.MIN_VALUE; this.maximumItemCount = Long.MIN_VALUE;
compilation error,1062,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(index);
compilation error,1062,add,[CE] cannot find symbol,,java.util.ArrayList(item.getDataItemCount() - 1);
patch is same with buggy,694,replace,,add(item, notify); ,add(item, notify);
compilation error,694,replace,[CE] cannot find symbol,add(item, notify); ,updateBounds(item, notify);
compilation error,694,replace,[CE] cannot find symbol,add(item, notify); ,item.add(item, notify);
patch is same with buggy,429,replace,,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index);
increase failing tests,429,replace, [FE] ArrayIndexOutOfBoundsException,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index - 1);
increase failing tests,429,replace, [FE]  Size,return (TimeSeriesDataItem) this.data.get(index); ,return(TimeSeriesDataItem)this.data.get(index * 2);
compilation error,680,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value);
compilation error,680,add,[CE] no suitable constructor found for Double(Number),,this.data.add(period, new Double(value));
compilation error,680,add,[CE] no suitable constructor found for Long(Number),,this.data.add(period, new Long(value));
compilation error,1050,add,[CE] variable item is already defined in method createCopy(int,int),,TimeSeriesDataItem item =(TimeSeriesDataItem)super.clone();
compilation error,1050,add,[CE] variable item is already defined in method createCopy(int,int),,TimeSeriesDataItem item =(TimeSeriesDataItem)super.clone(); if(start < 0) { throw new IllegalArgumentException(""); }
compilation error,1050,add,[CE] for-each loops are not supported in -source 1.4,,for(TimeSeriesDataItem item :(TimeSeriesDataItem)item.clone()) { TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone(); item.getDataItem(0); if(start < 0) { throw new IllegalArgumentException(""); }
patch is same with buggy,667,replace,,add(item, notify); ,add(item, notify);
compilation error,667,replace,[CE] cannot find symbol,add(item, notify); ,updateBounds(item, notify);
compilation error,667,replace,[CE] cannot find symbol,add(item, notify); ,setItem(item, notify);
compilation error,600,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().compareTo(count)> 0) { this.data.add(item); }
compilation error,600,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().compareTo("")> 0) { this.data.add(item); }
compilation error,881,add,[CE] illegal start of expression,,&&(( longest - getTimePeriod(0).getSerialIndex())> this.maximumItemAge)) { removed = true;
compilation error,881,add,[CE] illegal start of expression,,&&(( last - getTimePeriod(0).getSerialIndex())> this.maximumItemAge)) { removed = true;
compilation error,881,add,[CE] illegal start of expression,,&&(( longest - getTimePeriod(0).getSerialIndex())> this.maximumItemAge)) { this.data.remove(0);
compilation error,565,add,[CE] cannot find symbol,,updateBounds(item.getPeriod(), this.data); fireSeriesChanged();
compilation error,565,add,[CE] cannot find symbol,,updateBounds(item.getPeriod(), this); fireSeriesChanged();
compilation error,1214,add,[CE] illegal start of expression,,if(item.getValue() == null) { y = yN.doubleValue(); if(item.getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,1214,add,[CE] illegal start of expression,,if(item.getValue() == null) { y = yN.doubleValue(); if(item.getValue().getType() == Token.FUNCTION) { this.data.add(item); }
compilation error,1214,add,[CE] illegal start of expression,,if(item.getValue() == null) { if(yN.doubleValue() > this.maximumItemCount) { this.data.add(item); }
compilation error,1068,add,[CE] no suitable method found for printStackTrace(StackTraceElement[]),,e.printStackTrace(e.getStackTrace());
increase failing tests,1212,replace, [FE] AssertionFailedError,if (item.getValue() != null) { ,if(yN!= null && item.getValue() == null) {
compilation error,1212,replace,[CE] bad operand types for binary operator '<',if (item.getValue() != null) { ,if(yN!= null && item.getValue() < null) {
compilation error,629,add,[CE] cannot find symbol b,,b.append(" for that time period. Duplicates are not"); b.append(" for that time period. Duplicates are not");
increase failing tests,629,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,626,replace,[CE] cannot find symbol Notify,if (added) { ,if(Notify) {
compilation error,626,replace,[CE] cannot find symbol notified,if (added) { ,if(notified) {
increase failing tests,597,replace, [FE] ArrayIndexOutOfBoundsException,int count = getItemCount(); ,int count = getItemCount() - 1;
compilation error,597,replace,[CE] cannot find symbol getItemCount,int count = getItemCount(); ,int count = getItemCount - 1;
compilation error,597,replace,[CE] no suitable method found for getItemCount(int),int count = getItemCount(); ,int count = getItemCount(0);
patch is same with buggy,188,replace,,this.range = range; ,this.range = range;
compilation error,188,replace,[CE] bad operand types for binary operator '-',this.range = range; ,this.range = range - 1;
compilation error,188,replace,[CE] ';' expected,this.range = range; ,this.range = range, range;
compilation error,579,add,[CE] no suitable method found for add(TimeSeriesDataItem,boolean),,this.data.add(item, notify);
increase failing tests,579,add, [FE] SeriesException,,this.data.add(item);
increase failing tests,579,add, [FE] SeriesException,,this.data.add(item); notify = false;
increase failing tests,634,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,,items.add(item);
compilation error,654,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,654,replace,[CE] illegal start of expression,} ,add(period, new Double(value));
compilation error,654,replace,[CE] illegal start of expression,} ,this.data.add(period, new Double(value));
compilation error,195,replace,[CE] illegal start of expression,} ,if(domain!= null && range!= null) { this.data.add(new TimeSeries(name, domain, range)); } else { this.data.add(name); }
compilation error,195,replace,[CE] illegal start of expression,} ,this.timePeriodClass = getTimePeriodClass();
compilation error,195,replace,[CE] illegal start of expression,} ,if(domain!= null && range!= null) { this.data.add(name); } else { this.data.add(name); }
compilation error,170,add,[CE] cannot find symbol Calendar,,peg(Calendar.getInstance());
increase failing tests,170,add, [FE] ClassCastException,,this.data.add(name);
compilation error,1296,add,[CE] reached end of file while parsing,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1296,add,[CE] reached end of file while parsing,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(Double.isNaN(a)|| Double.isNaN(b)) { return Math.min(a, b); }
increase failing tests,606,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,606,add,[CE] bad operand type TimeSeriesDataItem for unary operator '-',,this.data.add(-item);
compilation error,1273,add,[CE] illegal start of expression,,if(Double.isNaN(a)|| Double.isNaN(b)) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
patch is same with buggy,463,replace,,return getRawDataItem(index).getPeriod(); ,return getRawDataItem(index).getPeriod();
compilation error,463,replace,[CE] cannot find symbol,return getRawDataItem(index).getPeriod(); ,return getDataItem(index).getTimePeriod();
increase failing tests,1059,add, [FE] AssertionFailedError,,this.data.remove(0);
increase failing tests,1059,add, [FE] AssertionFailedError,,this.data.add(copy);
compilation error,1059,add,[CE] illegal start of expression,,this.data.add(--> start);
increase failing tests,626,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,626,add,[CE] cannot find symbol b,,b.append(" but the series already contains an observation");
patch is same with buggy,1064,replace,,copy.add(clone); ,copy.add(clone);
compilation error,1064,replace,[CE] no suitable method found for add(TimeSeriesDataItem,TimeSeriesDataItem),copy.add(clone); ,copy.add(clone, item);
compilation error,1064,replace,[CE] no suitable method found for add(TimeSeriesDataItem,List),copy.add(clone); ,copy.add(clone, data);
compilation error,186,add,[CE] no suitable constructor found for TimeSeries(),,this();
compilation error,186,add,[CE] call to super must be first statement in constructor,,super(name);
compilation error,186,add,[CE] no suitable constructor found for Series(),,super();
compilation error,1217,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,1217,replace,[CE] illegal start of expression,} ,if(item.getValue() == null) { TimeSeriesDataItem item = getDataItem(item.getPeriodClass); item.setValue(yN); } else { fireSeriesChanged(); }
compilation error,1217,replace,[CE] illegal start of expression,} ,if(item.getValue() == null) { TimeSeriesDataItem item = getDataItem(item); item.setValue(yN); } else { fireSeriesChanged(); }
compilation error,187,add,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domain);
increase failing tests,1289,replace, [FE] AssertionFailedError,return b; ,return a;
increase failing tests,1289,replace, [FE] AssertionFailedError,return b; ,return a *(a - b);
increase failing tests,1289,replace, [FE] AssertionFailedError,return b; ,return a + b;
increase failing tests,603,add, [FE] SeriesException,,this.data.add(item);
increase failing tests,603,add, [FE] SeriesException,,this.data.add(item); added = true;
increase failing tests,603,add, [FE] SeriesException,,this.data.add(item); added = false;
compilation error,193,add,[CE] cannot find symbol TimePeriodClass,,this.timePeriodClass = TimePeriodClass.getInstance(domain); this.data.add(name);
compilation error,193,add,[CE] cannot find symbol TimePeriodClass,,this.timePeriodClass = TimePeriodClass.getInstance();
patch is same with buggy,1062,replace,,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone =(TimeSeriesDataItem)item.clone();
patch is same with buggy,1062,replace,,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone = (TimeSeriesDataItem)item.clone();
compilation error,1062,replace,[CE] cannot find symbol,TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); ,TimeSeriesDataItem clone =(TimeSeriesDataItem)item.getDataItem(index);
patch is same with buggy,193,replace,,this.minY = Double.NaN; ,this.minY = Double.NaN;
compilation error,667,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(value);
compilation error,667,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(value); fireSeriesChanged();
compilation error,667,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(value); notifyListeners(new DataItem(item, false));
patch is same with buggy,599,replace,,this.data.add(item); ,this.data.add(item);
compilation error,599,replace,[CE] cannot find symbol index,this.data.add(item); ,this.data.add(-index - 1, item);
compilation error,599,replace,[CE] cannot find symbol index,this.data.add(item); ,this.data.add(-index - 1);
patch is same with buggy,629,replace,,if (getItemCount() > this.maximumItemCount) { ,if(getItemCount() > this.maximumItemCount) {
increase failing tests,629,replace, [FE] AssertionFailedError,if (getItemCount() > this.maximumItemCount) { ,if(getItemCount() > this.data.size()) {
compilation error,596,replace,[CE] cannot assign a value to final variable added,boolean added = false; ,final boolean added = false;
patch is same with buggy,596,replace,,boolean added = false; ,boolean added = false;
patch is same with buggy,881,replace,,> this.maximumItemAge) { ,> this.maximumItemAge) {
increase failing tests,881,replace, [FE] AssertionFailedError,> this.maximumItemAge) { ,> this.maximumItemAge - 1) {
increase failing tests,881,replace, [FE]  Size,> this.maximumItemAge) { ,> this.maximumItemAge + 1) {
compilation error,576,add,[CE] no suitable method found for add(TimeSeriesDataItem,boolean),,this.data.add(item, notify);
compilation error,576,add,[CE] cannot find symbol,,Item item =(TimeSeriesDataItem)item.clone();
patch is same with buggy,190,replace,,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayList();
increase failing tests,190,replace, [FE] NullPointerException,this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayList(this.data);
compilation error,190,replace,[CE] no suitable constructor found for ArrayList(Class),this.data = new java.util.ArrayList(); ,this.data = new java.util.ArrayList(this.timePeriodClass);
patch is same with buggy,878,replace,,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();
increase failing tests,878,replace, [FE]  Size,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount()).getSerialIndex();
increase failing tests,878,replace, [FE]  Size,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); ,long latest = getTimePeriod(getItemCount() + 1).getSerialIndex();
compilation error,693,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,Number,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
patch is same with buggy,693,replace,,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);
compilation error,693,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,Number,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
compilation error,1288,add,[CE] reached end of file while parsing,,if(a <= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1288,add,[CE] reached end of file while parsing,,if(a <= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1288,add,[CE] variable a is already defined in method maxIgnoreNaN(double,double),,double a = Math.max(a, b);
patch is same with buggy,680,replace,,add(period, value, true); ,add(period, value, true);
compilation error,680,replace,[CE] cannot find symbol,add(period, value, true); ,setValue(period, value, true);
compilation error,169,add,[CE] call to this must be first statement in constructor,,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
compilation error,169,add,[CE] cannot find symbol TimePeriodClass,,this(name, TimePeriodClass.DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
compilation error,169,add,[CE] call to this must be first statement in constructor,,this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); fireSeriesChanged();
patch is same with buggy,1056,replace,,TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy =(TimeSeries)super.clone();
patch is same with buggy,1056,replace,,TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy = (TimeSeries)super.clone();
patch is same with buggy,1056,replace,,TimeSeries copy = (TimeSeries) super.clone(); ,TimeSeries copy =(TimeSeries)super.clone() ;
patch is same with buggy,584,replace,,else if (!this.timePeriodClass.equals(c)) { ,else if(!this.timePeriodClass.equals(c)) {
compilation error,194,add,[CE] cannot find symbol minItemAge,,this.minItemAge = Long.MIN_VALUE;
compilation error,194,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MIN_VALUE;
compilation error,194,add,[CE] cannot find symbol TimePeriodClass,,this.timePeriodClass = TimePeriodClass.getInstance(domain); this.data.add(name);
compilation error,581,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)c.getDataItem(item);
compilation error,581,add,[CE] cannot find symbol,,TimeSeriesDataItem d =(TimeSeriesDataItem)c.getDataItem(item); if(added) { throw new SeriesException(""); }
compilation error,581,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)c.getDataItem(item); if(added) { throw new SeriesException(""); }
compilation error,189,replace,[CE] cannot find symbol,this.timePeriodClass = null; ,this.timePeriodClass = TimePeriodClass.class;
compilation error,189,replace,[CE] cannot find symbol,this.timePeriodClass = null; ,this.timePeriodClass = new TimePeriodClass();
compilation error,695,add,[CE] cannot find symbol,,item.setValue(value); notifyListeners(new DataItem(item, false));
compilation error,668,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,668,replace,[CE] illegal start of expression,} ,if(value < 0.0) { TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify); item.addValue(); } else { fireSeriesChanged(); }
compilation error,668,replace,[CE] illegal start of expression,} ,if(value < 0.0) { TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify); item.addValue(value); } else { throw new SeriesException(""); }
increase failing tests,1288,replace, [FE] AssertionFailedError,if (Double.isNaN(a)) { ,if(Double.isNaN(a)|| Double.isNaN(b)||(a <= 0.0)||(b <= 0.0)) {
patch is same with buggy,1215,replace,,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maxIgnoreNaN(this.maxY, y);
compilation error,1215,replace,[CE] cannot find symbol,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maximumIgnoreNaN(this.maxY, y);
patch is same with buggy,1215,replace,,this.maxY = maxIgnoreNaN(this.maxY, y); ,this.maxY = maxIgnoreNaN(this.maxY, y);
patch is same with buggy,1214,replace,,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y);
increase failing tests,1214,replace, [FE] AssertionFailedError,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y + 1);
patch is same with buggy,1214,replace,,this.minY = minIgnoreNaN(this.minY, y); ,this.minY = minIgnoreNaN(this.minY, y);
compilation error,694,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,,item.setValue(value, notify);
compilation error,879,add,[CE] variable latest is already defined in method removeAgedItems(boolean),,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();
patch is same with buggy,605,replace,,this.data.add(item); ,this.data.add(item);
compilation error,605,replace,[CE] no suitable method found for add(TimeSeriesDataItem,RegularTimePeriod),this.data.add(item); ,this.data.add(item, last);
compilation error,605,replace,[CE] bad operand type TimeSeriesDataItem for unary operator '-',this.data.add(item); ,this.data.add(-item);
compilation error,599,add,[CE] cannot find symbol index,,this.data.add(-index - 1, item);
increase failing tests,599,add, [FE] AssertionFailedError,,this.data.add(item);
compilation error,599,add,[CE] incompatible types,,item = getTimePeriod(0);
compilation error,1217,add,[CE] method updateBoundsForAddedItem in class TimeSeries cannot be applied to given types;,,updateBoundsForAddedItem(item, yN);
patch is same with buggy,1057,replace,,copy.data = new java.util.ArrayList(); ,copy.data = new java.util.ArrayList();
increase failing tests,1057,replace, [FE] AssertionFailedError,copy.data = new java.util.ArrayList(); ,copy.data = new java.util.ArrayList(this.data);
patch is same with buggy,1059,replace,,for (int index = start; index <= end; index++) { ,for(int index = start; index <= end; index++) {
increase failing tests,1059,replace, [FE]  Size,for (int index = start; index <= end; index++) { ,for(int index = start; index < end; index++) {
patch is same with buggy,1059,replace,,for (int index = start; index <= end; index++) { ,for (int index = start; index <= end; index++) {
compilation error,1071,replace,[CE] cannot find symbol clone,return copy; ,return clone;
compilation error,1071,replace,[CE] cannot find symbol clone,return copy; ,return this.clone;
compilation error,1071,replace,[CE] cannot find symbol copy,return copy; ,return this.copy;
compilation error,192,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MIN_VALUE;
compilation error,192,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Long.MAX_VALUE;
compilation error,192,add,[CE] cannot find symbol minItemCount,,this.minItemCount = Integer.MIN_VALUE;
patch is same with buggy,604,replace,,if (item.getPeriod().compareTo(last) > 0) { ,if(item.getPeriod().compareTo(last)> 0) {
compilation error,604,replace,[CE] cannot find symbol,if (item.getPeriod().compareTo(last) > 0) { ,if(item.getPeriod().compareTo(last)> 0 && item.getYear().compareTo(last) < 0) {
compilation error,604,replace,[CE] cannot find symbol,if (item.getPeriod().compareTo(last) > 0) { ,if(item.getPeriod().compareTo(last)> 0 && item.getSize() == getItemCount() - 1) {
increase failing tests,1266,replace, [FE] AssertionFailedError,return b; ,return a;
increase failing tests,1266,replace, [FE] AssertionFailedError,return b; ,return a *(a + b)* Math.min(a, b);
increase failing tests,1266,replace, [FE] AssertionFailedError,return b; ,return a *(a - b)* Math.min(a, b);
compilation error,693,add,[CE] no suitable method found for add(RegularTimePeriod,Number,boolean),,this.data.add(period, value, notify);
compilation error,693,add,[CE] no suitable method found for add(RegularTimePeriod,Number),,this.data.add(period, value); notifyListeners(new DataItem(period, value, false));
compilation error,693,add,[CE] variable period is already defined in method add(RegularTimePeriod,Number,boolean),,RegularTimePeriod period = getTimePeriod(period);
compilation error,666,add,[CE] no suitable method found for add(RegularTimePeriod,double,boolean),,this.data.add(period, value, notify);
compilation error,666,add,[CE] no suitable method found for add(RegularTimePeriod,Double),,this.data.add(period, new Double(value));
compilation error,666,add,[CE] no suitable method found for add(RegularTimePeriod,Double,boolean),,this.data.add(period, new Double(value), notify);
compilation error,1265,add,[CE] variable a is already defined in method minIgnoreNaN(double,double),,double a = Math.min(a, b);
compilation error,1265,add,[CE] illegal start of expression,,if(a >= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1265,add,[CE] illegal start of expression,,if(a >= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return Math.min(a, b); }
patch is same with buggy,1296,replace,,return Math.max(a, b); ,return Math.max(a, b);
compilation error,1296,replace,[CE] no suitable method found for min(double),return Math.max(a, b); ,return Math.max(a, Math.min(b), Math.max(a, b));
compilation error,1296,replace,[CE] no suitable method found for min(double),return Math.max(a, b); ,return Math.max(a, Math.min(b));
increase failing tests,1215,add, [FE] AssertionFailedError,,this.maxY = yN.doubleValue();
compilation error,1215,add,[CE] cannot find symbol,,this.maxY = maximumIgnoreNaN(this.maxY, y);
patch is same with buggy,254,replace,,return this.data.size(); ,return this.data.size();
increase failing tests,254,replace, [FE]  Size,return this.data.size(); ,return this.data.size() + 1;
increase failing tests,254,replace, [FE] ArrayIndexOutOfBoundsException,return this.data.size(); ,return this.data.size() - 1;
compilation error,189,add,[CE] cannot find symbol,,this.data = new ArrayList();
patch is same with buggy,877,replace,,if (getItemCount() > 1) { ,if(getItemCount() > 1) {
compilation error,877,replace,[CE] no suitable method found for getItemCount(int),if (getItemCount() > 1) { ,if(getItemCount(1) > this.maximumItemAge) {
compilation error,877,replace,[CE] no suitable method found for getItemCount(int),if (getItemCount() > 1) { ,if(getItemCount(0) > 1) {
compilation error,188,add,[CE] cannot find symbol,,this.timePeriodClass = name.getTimePeriodClass();
increase failing tests,192,replace, [FE] AssertionFailedError,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Integer.MAX_VALUE;
patch is same with buggy,192,replace,,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Long.MAX_VALUE;
compilation error,192,replace,[CE] possible loss of precision,this.maximumItemAge = Long.MAX_VALUE; ,this.maximumItemAge = Double.MAX_VALUE;
patch is same with buggy,653,replace,,add(period, value, true); ,add(period, value, true);
compilation error,653,replace,[CE] cannot find symbol,add(period, value, true); ,setValue(period, value, true);
patch is same with buggy,1050,replace,,if (start < 0) { ,if(start < 0) {
increase failing tests,1050,replace, [FE] IllegalArgumentException,if (start < 0) { ,if(start >= 0) {
increase failing tests,1050,replace, [FE] IllegalArgumentException,if (start < 0) { ,if(start <= 0) {
compilation error,666,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,double,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
patch is same with buggy,666,replace,,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);
compilation error,666,replace,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,double,boolean),TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); ,TimeSeriesDataItem item = new TimeSeriesDataItem(period, value, notify);
compilation error,584,add,[CE] 'else' without 'if',,fireSeriesChanged();
compilation error,584,add,[CE] 'else' without 'if',,this.data.add(item, c);
compilation error,584,add,[CE] 'else' without 'if',,c = c.getSuperclass();
increase failing tests,596,add, [FE] SeriesException,,this.data.add(item);
increase failing tests,596,add, [FE] SeriesException,,this.data.add(item); notify = true;
patch is same with buggy,187,replace,,this.domain = domain; ,this.domain = domain;
compilation error,187,replace,[CE] cannot find symbol Domain,this.domain = domain; ,this.domain = Domain;
compilation error,170,replace,[CE] illegal start of expression,} ,peg(Calendar.getInstance());
compilation error,170,replace,[CE] illegal start of expression,} ,this.data.add(name);
compilation error,170,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,879,replace,[CE] cannot assign a value to final variable removed,boolean removed = false; ,final boolean removed = false;
compilation error,879,replace,[CE] cannot assign a value to final variable removed,boolean removed = false; ,final boolean removed = true;
increase failing tests,885,add, [FE] AssertionFailedError,,this.data.remove(0);
compilation error,885,add,[CE] no suitable method found for add(long),,this.data.add(-latest); removed = true;
increase failing tests,885,add, [FE] AssertionFailedError,,this.data.remove(0); removed = true;
patch is same with buggy,1211,replace,,Number yN = item.getValue(); ,Number yN = item.getValue();
compilation error,1211,replace,[CE] bad operand types for binary operator '+',Number yN = item.getValue(); ,Number yN = item.getValue() + 1;
compilation error,1211,replace,[CE] cannot find symbol,Number yN = item.getValue(); ,Number yN = item.getYValue();
compilation error,885,replace,[CE] cannot find symbol Feature,if (removed) { ,if(removed && isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,885,replace,[CE] cannot find symbol Feature,if (removed) { ,if(removed && isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,885,replace,[CE] cannot find symbol,if (removed) { ,if(removed && isSeriesVisible()) {
patch is same with buggy,579,replace,,item = (TimeSeriesDataItem) item.clone(); ,item =(TimeSeriesDataItem)item.clone();
compilation error,579,replace,[CE] cannot find symbol,item = (TimeSeriesDataItem) item.clone(); ,item =(TimeSeriesDataItem)item.getDataItem(notify);
patch is same with buggy,579,replace,,item = (TimeSeriesDataItem) item.clone(); ,item = (TimeSeriesDataItem)item.clone();
compilation error,1211,add,[CE] cannot find symbol,,item.setDataItem(item);
increase failing tests,1211,add, [FE] ConcurrentModificationException,,this.data.add(item);
compilation error,597,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().equals(getItemCount())) { this.data.add(item); }
compilation error,597,add,[CE] illegal start of expression,,if(notify) { if(item.getPeriod().equals(getItemCount())) { throw new SeriesException(""); }
compilation error,597,add,[CE] for-each loops are not supported in -source 1.4,,for(TimeSeriesDataItem item : getDataItem(item.getPeriod())) { if(!notify) { this.data.add(item); }
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeries)super.clone(); copy.add(item);
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeries)this.data.get(index); copy.add(clone);
compilation error,1071,add,[CE] variable copy is already defined in method createCopy(int,int),,TimeSeries copy =(TimeSeries)super.clone(); clone.data.add(item);
increase failing tests,345,replace, [FE] AssertionFailedError,return this.minY; ,return this.minY /(( double)this.maxY);
compilation error,345,replace,[CE] ';' expected,return this.minY; ,return this.minY *(( double)minY /(double)maxY));
increase failing tests,345,replace, [FE] AssertionFailedError,return this.minY; ,return this.minY *(( double)maxY / this.minY);
increase failing tests,606,replace, [FE] AssertionFailedError,added = true; ,added = false;
increase failing tests,606,replace, [FE] AssertionFailedError,added = true; ,added =!notify;
patch is same with buggy,606,replace,,added = true; ,added = true;
patch is same with buggy,627,replace,,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(item);
compilation error,627,replace,[CE] method updateBoundsForAddedItem in class TimeSeries cannot be applied to given types;,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(item, notify);
compilation error,627,replace,[CE] cannot find symbol b,updateBoundsForAddedItem(item); ,updateBoundsForAddedItem(item, b);
patch is same with buggy,1273,replace,,return Math.min(a, b); ,return Math.min(a, b);
compilation error,1273,replace,[CE] no suitable method found for min(double),return Math.min(a, b); ,return Math.min(a, Math.min(b));
compilation error,1273,replace,[CE] ')' expected,return Math.min(a, b); ,return Math.min(a, Math.min(b);
compilation error,190,add,[CE] cannot find symbol,,this.data = new ArrayList();
compilation error,190,add,[CE] cannot find symbol TimePeriodClass,,this.timePeriodClass = TimePeriodClass.getInstance();
patch is same with buggy,576,replace,,if (item == null) { ,if(item == null) {
compilation error,576,replace,[CE] bad operand types for binary operator '!=',if (item == null) { ,if(item == null || item.getPeriod().getClass()!= getItemCount()) {
compilation error,576,replace,[CE] bad operand types for binary operator '!=',if (item == null) { ,if(item == null || item.getPeriod().getClass()!= notify) {
compilation error,1057,add,[CE] cannot find symbol,,copy.setSeriesIndex(start);
compilation error,1057,add,[CE] no suitable method found for add(int),,copy.add(start);
compilation error,1057,add,[CE] cannot find symbol,,copy.init(start);
compilation error,463,add,[CE] cannot find symbol,,checkPeriod(getDataItem(index));
increase failing tests,463,add, [FE] AssertionFailedError,,this.data.add(getDataItem(index));
compilation error,463,add,[CE] method getTimePeriod in class TimeSeries cannot be applied to given types;,,checkPeriod(getTimePeriod());
patch is same with buggy,1053,replace,,if (end < start) { ,if(end < start) {
compilation error,1053,replace,[CE] cannot find symbol EMPTY,if (end < start) { ,if(end < start || end > Collections.EMPTY) {
compilation error,1053,replace,[CE] bad operand types for binary operator '>',if (end < start) { ,if(end < start || end > Collections.EMPTY_LIST) {
compilation error,580,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone();
compilation error,580,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)item.getDataItem(notify);
compilation error,580,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean),,TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone(); add(item, notify);
compilation error,1053,add,[CE] illegal start of expression,,if(start > end) { TimeSeriesDataItem item =(TimeSeriesDataItem)super.clone(); if(item!= null) { throw new IllegalArgumentException(""); }
compilation error,1053,add,[CE] illegal start of expression,,if(start > end) { TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(start); if(item!= null) { throw new IllegalArgumentException(""); }
compilation error,1053,add,[CE] illegal start of expression,,if(start > end) { TimeSeriesDataItem item =(TimeSeriesDataItem)super.clone(); if(item == null) { throw new IllegalArgumentException(""); }
compilation error,582,add,[CE] no suitable constructor found for TimeSeriesDataItem(RegularTimePeriod,boolean),,c = new TimeSeriesDataItem(item.getPeriod(), notify);
compilation error,582,add,[CE] no suitable constructor found for TimeSeriesDataItem(Class),,c = new TimeSeriesDataItem(item.getPeriod().getClass());
compilation error,1064,add,[CE] cannot find symbol data,,clone.data =(TimeSeriesDataItem)item.clone();
compilation error,1064,add,[CE] cannot find symbol data,,clone.data.add(item);
compilation error,681,replace,[CE] illegal start of expression,} ,fireSeriesChanged();
compilation error,681,replace,[CE] illegal start of expression,} ,this.data.add(period, value); fireSeriesChanged();
compilation error,681,replace,[CE] illegal start of expression,} ,this.data.add(period, new Double(value)); fireSeriesChanged();
