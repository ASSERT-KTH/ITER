bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	patch
1	[BUG] [BUGGY] if (start < 0) { [FE] AssertionFailedError [CONTEXT] public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { [BUGGY] if (start < 0) { [BUGGY] throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	
2	[BUG] [BUGGY] if (end < start) { [FE] AssertionFailedError [CONTEXT] public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } [BUGGY] if (end < start) { [BUGGY] throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	
3	[BUG] [BUGGY] TimeSeries copy = (TimeSeries) super.clone(); [FE] AssertionFailedError [CONTEXT] public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } [BUGGY] TimeSeries copy = (TimeSeries) super.clone(); [BUGGY] copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	
4	[BUG] [BUGGY] copy.data = new java.util.ArrayList(); [FE] AssertionFailedError [CONTEXT] public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); [BUGGY] copy.data = new java.util.ArrayList(); [BUGGY] if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	
5	[BUG] [BUGGY] if (this.data.size() > 0) { [FE] AssertionFailedError [CONTEXT] public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); [BUGGY] if (this.data.size() > 0) { [BUGGY] for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	
6	[BUG] [BUGGY] for (int index = start; index <= end; index++) { [FE] AssertionFailedError [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { [BUGGY] for (int index = start; index <= end; index++) { [BUGGY] TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1059	1059	1	
7	[BUG] [BUGGY] TimeSeriesDataItem item   = (TimeSeriesDataItem) this.data.get(index);  TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [FE] AssertionFailedError [CONTEXT] if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { [BUGGY] TimeSeriesDataItem item            = (TimeSeriesDataItem) this.data.get(index);        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [BUGGY] = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } } } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1060	1062	1	
8	[BUG] [BUGGY] TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [FE] AssertionFailedError [CONTEXT] } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); [BUGGY] TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [BUGGY] try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } } } return copy; } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1062	1062	1	
9	[BUG] [BUGGY] copy.add(clone); [FE] AssertionFailedError [CONTEXT] throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { [BUGGY] copy.add(clone); [BUGGY] } catch (SeriesException e) { e.printStackTrace(); } } } return copy; } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1064	1064	1	
10	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); [BUGGY] } [BUGGY] } } return copy; } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	
11	[BUG] [BUGGY] return copy; [FE] AssertionFailedError [CONTEXT] = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } } } [BUGGY] return copy; [BUGGY] } [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean double maxY minY oldY value yy TimeSeriesDataItem clone item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1071	1071	1	
12	[BUG] [BUGGY] add(item, true); [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item) { [BUGGY] add(item, true); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean double maxY minY TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	564	564	1	
13	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item) { add(item, true); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean double maxY minY TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	565	565	1	
14	[BUG] [BUGGY] return this.minY; [FE] AssertionFailedError [CONTEXT] public double getMinY() { [BUGGY] return this.minY; [BUGGY] } [CLASS] TimeSeries [METHOD] getMinY [RETURN_TYPE] double  [VARIABLES] boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	
15	[BUG] [BUGGY] return this.maxY; [FE] AssertionFailedError [CONTEXT] public double getMaxY() { [BUGGY] return this.maxY; [BUGGY] } [CLASS] TimeSeries [METHOD] getMaxY [RETURN_TYPE] double  [VARIABLES] boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	360	360	1	
16	[BUG] [BUGGY] add(period, value, true); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, double value) {  [BUGGY] add(period, value, true); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double maxY minY value Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	
17	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, double value) {  add(period, value, true); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value [VARIABLES] boolean double maxY minY value Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	654	654	1	
18	[BUG] [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, double value, boolean notify) {  [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value boolean notify [VARIABLES] boolean notify double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	666	666	1	
19	[BUG] [BUGGY] add(item, notify); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, double value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value boolean notify [VARIABLES] boolean notify double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	667	667	1	
20	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, double value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); add(item, notify); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period double value boolean notify [VARIABLES] boolean notify double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	668	668	1	
21	[BUG] [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name) { [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); [BUGGY] } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	169	169	1	
22	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name) { this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	
23	[BUG] [BUGGY] super(name); [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { [BUGGY] super(name); [BUGGY] this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	186	186	1	
24	[BUG] [BUGGY] this.domain = domain; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); [BUGGY] this.domain = domain; [BUGGY] this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	
25	[BUG] [BUGGY] this.range = range; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; [BUGGY] this.range = range; [BUGGY] this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	
26	[BUG] [BUGGY] this.timePeriodClass = null; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; [BUGGY] this.timePeriodClass = null; [BUGGY] this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	
27	[BUG] [BUGGY] this.data = new java.util.ArrayList(); [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; [BUGGY] this.data = new java.util.ArrayList(); [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	190	190	1	
28	[BUG] [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; [BUGGY] this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	191	191	1	
29	[BUG] [BUGGY] this.maximumItemAge = Long.MAX_VALUE; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; [BUGGY] this.maximumItemAge = Long.MAX_VALUE; [BUGGY] this.minY = Double.NaN; this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	192	192	1	
30	[BUG] [BUGGY] this.minY = Double.NaN; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; [BUGGY] this.minY = Double.NaN; [BUGGY] this.maxY = Double.NaN; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	
31	[BUG] [BUGGY] this.maxY = Double.NaN; [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; [BUGGY] this.maxY = Double.NaN; [BUGGY] } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	
32	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public TimeSeries(Comparable name, String domain, String range) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = null; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; this.minY = Double.NaN; this.maxY = Double.NaN; [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] String)  Comparable name String domain String range [VARIABLES] Comparable name boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	195	195	1	
33	[BUG] [BUGGY] return this.data.size(); [FE] AssertionFailedError [CONTEXT] public int getItemCount() { [BUGGY] return this.data.size(); [BUGGY] } [CLASS] TimeSeries [METHOD] getItemCount [RETURN_TYPE] int  [VARIABLES] boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	254	254	1	
34	[BUG] [BUGGY] return (TimeSeriesDataItem) this.data.get(index); [FE] AssertionFailedError [CONTEXT] TimeSeriesDataItem getRawDataItem(int index) { [BUGGY] return (TimeSeriesDataItem) this.data.get(index); [BUGGY] } [CLASS] TimeSeries [METHOD] getRawDataItem [RETURN_TYPE] TimeSeriesDataItem  int index [VARIABLES] boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	429	429	1	
35	[BUG] [BUGGY] return getRawDataItem(index).getPeriod(); [FE] AssertionFailedError [CONTEXT] public RegularTimePeriod getTimePeriod(int index) { [BUGGY] return getRawDataItem(index).getPeriod(); [BUGGY] } [CLASS] TimeSeries [METHOD] getTimePeriod [RETURN_TYPE] RegularTimePeriod  int index [VARIABLES] boolean double maxY minY Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long maximumItemAge periods serialVersionUID int count index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	463	463	1	
36	[BUG] [BUGGY] if (item == null) { [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { [BUGGY] if (item == null) { [BUGGY] throw new IllegalArgumentException("Null 'item' argument."); } item = (TimeSeriesDataItem) item.clone(); Class c = item.getPeriod().getClass(); if (this.timePeriodClass == null) { this.timePeriodClass = c; } else if (!this.timePeriodClass.equals(c)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	
37	[BUG] [BUGGY] item = (TimeSeriesDataItem) item.clone(); [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } [BUGGY] item = (TimeSeriesDataItem) item.clone(); [BUGGY] Class c = item.getPeriod().getClass(); if (this.timePeriodClass == null) { this.timePeriodClass = c; } else if (!this.timePeriodClass.equals(c)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	579	579	1	
38	[BUG] [BUGGY] Class c = item.getPeriod().getClass(); [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } item = (TimeSeriesDataItem) item.clone(); [BUGGY] Class c = item.getPeriod().getClass(); [BUGGY] if (this.timePeriodClass == null) { this.timePeriodClass = c; } else if (!this.timePeriodClass.equals(c)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	580	580	1	
39	[BUG] [BUGGY] if (this.timePeriodClass == null) { [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } item = (TimeSeriesDataItem) item.clone(); Class c = item.getPeriod().getClass(); [BUGGY] if (this.timePeriodClass == null) { [BUGGY] this.timePeriodClass = c; } else if (!this.timePeriodClass.equals(c)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	
40	[BUG] [BUGGY] this.timePeriodClass = c; [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } item = (TimeSeriesDataItem) item.clone(); Class c = item.getPeriod().getClass(); if (this.timePeriodClass == null) { [BUGGY] this.timePeriodClass = c; [BUGGY] } else if (!this.timePeriodClass.equals(c)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	582	582	1	
41	[BUG] [BUGGY] else if (!this.timePeriodClass.equals(c)) { [FE] AssertionFailedError [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } item = (TimeSeriesDataItem) item.clone(); Class c = item.getPeriod().getClass(); if (this.timePeriodClass == null) { this.timePeriodClass = c; } [BUGGY] else if (!this.timePeriodClass.equals(c)) { [BUGGY] StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	
42	[BUG] [BUGGY] boolean added = false; [FE] AssertionFailedError [CONTEXT] b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  [BUGGY] boolean added = false; [BUGGY] int count = getItemCount(); if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	
43	[BUG] [BUGGY] int count = getItemCount(); [FE] AssertionFailedError [CONTEXT] b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; [BUGGY] int count = getItemCount(); [BUGGY] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	597	597	1	
44	[BUG] [BUGGY] if (count == 0) { [FE] AssertionFailedError [CONTEXT] b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); [BUGGY] if (count == 0) { [BUGGY] this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	598	598	1	
45	[BUG] [BUGGY] this.data.add(item); [FE] AssertionFailedError [CONTEXT] b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); if (count == 0) { [BUGGY] this.data.add(item); [BUGGY] added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	599	599	1	
46	[BUG] [BUGGY] added = true; [FE] AssertionFailedError [CONTEXT] b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); if (count == 0) { this.data.add(item); [BUGGY] added = true; [BUGGY] } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	600	600	1	
47	[BUG] [BUGGY] RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [FE] AssertionFailedError [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { [BUGGY] RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [BUGGY] if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	
48	[BUG] [BUGGY] if (item.getPeriod().compareTo(last) > 0) { [FE] AssertionFailedError [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [BUGGY] if (item.getPeriod().compareTo(last) > 0) { [BUGGY] this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	604	604	1	
49	[BUG] [BUGGY] this.data.add(item); [FE] AssertionFailedError [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { [BUGGY] this.data.add(item); [BUGGY] added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { StringBuffer b = new StringBuffer(); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	605	605	1	
50	[BUG] [BUGGY] added = true; [FE] AssertionFailedError [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); [BUGGY] added = true; [BUGGY] } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { StringBuffer b = new StringBuffer(); b.append("You are attempting to add an observation for "); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	606	606	1	
51	[BUG] [BUGGY] if (added) { [FE] AssertionFailedError [CONTEXT] b.append("You are attempting to add an observation for "); b.append("the time period "); b.append(item.getPeriod().toString()); b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not "); b.append("permitted.Try using the addOrUpdate() method."); throw new SeriesException(b.toString()); } } } [BUGGY] if (added) { [BUGGY] updateBoundsForAddedItem(item);  if (getItemCount() > this.maximumItemCount) { TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } removeAgedItems(false);// remove old items if necessary, but   [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	626	626	1	
52	[BUG] [BUGGY] updateBoundsForAddedItem(item); [FE] AssertionFailedError [CONTEXT] b.append("the time period "); b.append(item.getPeriod().toString()); b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not "); b.append("permitted.Try using the addOrUpdate() method."); throw new SeriesException(b.toString()); } } } if (added) { [BUGGY] updateBoundsForAddedItem(item); [BUGGY]  if (getItemCount() > this.maximumItemCount) { TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	
53	[BUG] [BUGGY] if (getItemCount() > this.maximumItemCount) { [FE] AssertionFailedError [CONTEXT] b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not "); b.append("permitted.Try using the addOrUpdate() method."); throw new SeriesException(b.toString()); } } } if (added) { updateBoundsForAddedItem(item);  [BUGGY] if (getItemCount() > this.maximumItemCount) { [BUGGY] TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { fireSeriesChanged(); } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	
54	[BUG] [BUGGY] removeAgedItems(false);// remove old items if necessary, but     // don't notify anyone, because that     // happens next anyway... [FE] AssertionFailedError [CONTEXT] } } if (added) { updateBoundsForAddedItem(item);  if (getItemCount() > this.maximumItemCount) { TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } [BUGGY] removeAgedItems(false);// remove old items if necessary, but                   // don't notify anyone, because that                   // happens next anyway... [BUGGY]   if (notify) { fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	
55	[BUG] [BUGGY] if (notify) { [FE] AssertionFailedError [CONTEXT] updateBoundsForAddedItem(item);  if (getItemCount() > this.maximumItemCount) { TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } removeAgedItems(false);// remove old items if necessary, but   [BUGGY] if (notify) { [BUGGY] fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	
56	[BUG] [BUGGY] fireSeriesChanged(); [FE] AssertionFailedError [CONTEXT]  if (getItemCount() > this.maximumItemCount) { TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0); updateBoundsForRemovedItem(d); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { [BUGGY] fireSeriesChanged(); [BUGGY] } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify double maxY minY TimeSeriesDataItem d item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	638	638	1	
58	[BUG] [BUGGY] add(period, value, true); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, Number value) {  [BUGGY] add(period, value, true); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value [VARIABLES] boolean Number value double maxY minY value Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	680	680	1	
59	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, Number value) {  add(period, value, true); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value [VARIABLES] boolean Number value double maxY minY value Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	681	681	1	
60	[BUG] [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	693	693	1	
61	[BUG] [BUGGY] add(item, notify); [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	694	694	1	
62	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); add(item, notify); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value double maxY minY value TimeSeriesDataItem item Class c timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	695	695	1	
63	[BUG] [BUGGY] if (getItemCount() > 1) { [FE] AssertionFailedError [CONTEXT] public void removeAgedItems(boolean notify) {   [BUGGY] if (getItemCount() > 1) { [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed) { findBoundsByIteration(); if (notify) { [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] boolean notify removed double maxY minY oldY value yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	
64	[BUG] [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [FE] AssertionFailedError [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [BUGGY] boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed) { findBoundsByIteration(); if (notify) { fireSeriesChanged(); [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] boolean notify removed double maxY minY oldY value yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	
65	[BUG] [BUGGY] boolean removed = false; [FE] AssertionFailedError [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [BUGGY] boolean removed = false; [BUGGY] while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed) { findBoundsByIteration(); if (notify) { fireSeriesChanged(); } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] boolean notify removed double maxY minY oldY value yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	
66	[BUG] [BUGGY] > this.maximumItemAge) { [FE] AssertionFailedError [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) [BUGGY] > this.maximumItemAge) { [BUGGY] this.data.remove(0); removed = true; } if (removed) { findBoundsByIteration(); if (notify) { fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] boolean notify removed double maxY minY oldY value yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	881	881	1	
67	[BUG] [BUGGY] if (removed) { [FE] AssertionFailedError [CONTEXT]   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } [BUGGY] if (removed) { [BUGGY] findBoundsByIteration(); if (notify) { fireSeriesChanged(); } } } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] boolean notify removed double maxY minY oldY value yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	885	885	1	
69	[BUG] [BUGGY] Number yN = item.getValue(); [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { [BUGGY] Number yN = item.getValue(); [BUGGY] if (item.getValue() != null) { double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, y); this.maxY = maxIgnoreNaN(this.maxY, y); } } [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1211	1211	1	
70	[BUG] [BUGGY] if (item.getValue() != null) { [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { Number yN = item.getValue(); [BUGGY] if (item.getValue() != null) { [BUGGY] double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, y); this.maxY = maxIgnoreNaN(this.maxY, y); } } [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	
71	[BUG] [BUGGY] double y = yN.doubleValue(); [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { Number yN = item.getValue(); if (item.getValue() != null) { [BUGGY] double y = yN.doubleValue(); [BUGGY] this.minY = minIgnoreNaN(this.minY, y); this.maxY = maxIgnoreNaN(this.maxY, y); } } [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1213	1213	1	
72	[BUG] [BUGGY] this.minY = minIgnoreNaN(this.minY, y); [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { Number yN = item.getValue(); if (item.getValue() != null) { double y = yN.doubleValue(); [BUGGY] this.minY = minIgnoreNaN(this.minY, y); [BUGGY] this.maxY = maxIgnoreNaN(this.maxY, y); } } [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1214	1214	1	
73	[BUG] [BUGGY] this.maxY = maxIgnoreNaN(this.maxY, y); [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { Number yN = item.getValue(); if (item.getValue() != null) { double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, y); [BUGGY] this.maxY = maxIgnoreNaN(this.maxY, y); [BUGGY] } } [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1215	1215	1	
74	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] private void updateBoundsForAddedItem(TimeSeriesDataItem item) { Number yN = item.getValue(); if (item.getValue() != null) { double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, y); this.maxY = maxIgnoreNaN(this.maxY, y); } [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] updateBoundsForAddedItem [RETURN_TYPE] void  TimeSeriesDataItem item [VARIABLES] boolean Number yN double maxY minY oldY value y yy TimeSeriesDataItem item Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1217	1217	1	
75	[BUG] [BUGGY] if (Double.isNaN(a)) { [FE] AssertionFailedError [CONTEXT] private double minIgnoreNaN(double a, double b) { [BUGGY] if (Double.isNaN(a)) { [BUGGY] return b; } else { if (Double.isNaN(b)) { return a; } else { return Math.min(a, b); } } [CLASS] TimeSeries [METHOD] minIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	
76	[BUG] [BUGGY] return b; [FE] AssertionFailedError [CONTEXT] private double minIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { [BUGGY] return b; [BUGGY] } else { if (Double.isNaN(b)) { return a; } else { return Math.min(a, b); } } } [CLASS] TimeSeries [METHOD] minIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1266	1266	1	
77	[BUG] [BUGGY] if (Double.isNaN(b)) { [FE] AssertionFailedError [CONTEXT] private double minIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { return b; } else { [BUGGY] if (Double.isNaN(b)) { [BUGGY] return a; } else { return Math.min(a, b); } } } [CLASS] TimeSeries [METHOD] minIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	
78	[BUG] [BUGGY] return Math.min(a, b); [FE] AssertionFailedError [CONTEXT] private double minIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { return b; } else { if (Double.isNaN(b)) { return a; } else { [BUGGY] return Math.min(a, b); [BUGGY] } } } [CLASS] TimeSeries [METHOD] minIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	
79	[BUG] [BUGGY] if (Double.isNaN(a)) { [FE] AssertionFailedError [CONTEXT] private double maxIgnoreNaN(double a, double b) { [BUGGY] if (Double.isNaN(a)) { [BUGGY] return b; } else { if (Double.isNaN(b)) { return a; } else { return Math.max(a, b); } } [CLASS] TimeSeries [METHOD] maxIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1288	1288	1	
80	[BUG] [BUGGY] return b; [FE] AssertionFailedError [CONTEXT] private double maxIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { [BUGGY] return b; [BUGGY] } else { if (Double.isNaN(b)) { return a; } else { return Math.max(a, b); } } } [CLASS] TimeSeries [METHOD] maxIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1289	1289	1	
81	[BUG] [BUGGY] if (Double.isNaN(b)) { [FE] AssertionFailedError [CONTEXT] private double maxIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { return b; } else { [BUGGY] if (Double.isNaN(b)) { [BUGGY] return a; } else { return Math.max(a, b); } } } [CLASS] TimeSeries [METHOD] maxIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	
82	[BUG] [BUGGY] return Math.max(a, b); [FE] AssertionFailedError [CONTEXT] private double maxIgnoreNaN(double a, double b) { if (Double.isNaN(a)) { return b; } else { if (Double.isNaN(b)) { return a; } else { [BUGGY] return Math.max(a, b); [BUGGY] } } } [CLASS] TimeSeries [METHOD] maxIgnoreNaN [RETURN_TYPE] double  double a double b [VARIABLES] boolean double a b maxY minY oldY value y yy Class c periodClass timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain msg old range long index latest maximumItemAge periods serialVersionUID int count end endIndex i index maximum maximumItemCount result start startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	
