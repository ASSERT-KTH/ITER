bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	add	if  (start  <  0  ||  end  >  0)  {	  if    (start    <    0    ||    end    <    =    0)    {    	compilable	  [FE]  IllegalArgumentException  	13	3	replace
2	[BUG]  [BUGGY]  if  (start  <  0  ||  end  >  0)  {  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	if  (start  <  0  ||  end  >  0)  {	  if    (start    <    0    ||    end    <    =    0)    {    	compilable	  [FE]  IllegalArgumentException  	13	3	replace
3	[BUG]  [BUGGY]  if  (start  <  0  ||  end  >  periodClass.timePeriodClass)  {  [CE]  cannot  find  symbol  periodClass  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  periodClass.timePeriodClass)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	if  (start  <  0  ||  end  >  periodClass.timePeriodClass)  {	  if    (start    <    0    ||    end    >    this.timePeriodClass)    {    	non-compiled	[CE]  cannot  find  symbol  periodClass	6	None	replace
4	[BUG]  [BUGGY]  Class  <?>  start  =  item.getItemCount();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  Class  <?>  start  =  item.getItemCount();  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	Class  <?>  start  =  item.getItemCount();	  Class    <?>    start    =    item.getItemClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
5	[BUG]  [BUGGY]  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	if    (start    <    0    ||    end    >    getItemCount()    -    1)    {    if  (start  <  0  ||  end  >  getItemCount()  -  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  If  (start  <  0  ||  end  >  getItemCount()  -  1)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  getItemCount()  -  1)  {  If  (start  <  0  ||  end  >  getItemCount()  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	if    (start    <    0    ||    end    >    getItemCount()    -    1)    {    If  (start  <  0  ||  end  >  getItemCount()  -  1)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
7	[BUG]  [BUGGY]  int  start  =  this.periodClass.get(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  int  start  =  this.periodClass.get(start,  end  -  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	int  start  =  this.periodClass.get(start,  end  -  1);	  int    start    =    this.periodClass.get(start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  int  start  =  this.periodClass.get(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  int  start  =  this.periodClass.get(start,  end  +  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	int  start  =  this.periodClass.get(start,  end  +  1);	  int    start    =    this.periodClass.get(start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  Class  <?>  start  =  this.item.getRangeClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  Class  <?>  start  =  this.item.getRangeClass();  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	Class  <?>  start  =  this.item.getRangeClass();	  Class    <?>    start    =    item.getRangeClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
10	[BUG]  [BUGGY]  Class  <?>  start  =  item.getColumnClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  Class  <?>  start  =  item.getColumnClass();  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	Class  <?>  start  =  item.getColumnClass();	  Class    <?>    start    =    item.getRowClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
11	[BUG]  [BUGGY]  int  start  =  this.periodClass.getIndex(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  int  start  =  this.periodClass.getIndex(start,  end  -  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	int  start  =  this.periodClass.getIndex(start,  end  -  1);	  int    start    =    this.periodClass.getIndex(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  int  start  =  this.periodClass.getIndex(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  int  start  =  this.periodClass.getIndex(start,  end  +  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	int  start  =  this.periodClass.getIndex(start,  end  +  1);	  int    start    =    this.periodClass.getIndex(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(start,  end  -  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(start,  end  -  1);	  TimeSeries    start    =(TimeSeries)this.data.get(start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  TimeSeries  start  =(TimeSeries)this.data.get(start,  end  +  1);  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	TimeSeries  start  =(TimeSeries)this.data.get(start,  end  +  1);	  TimeSeries    start    =(TimeSeries)this.data.get(start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  int  start  =  getItemCount()  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  int  start  =  getItemCount()  /  1;  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	int  start  =  getItemCount()  /  1;	  int    start    =    getItemCount()    +    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  if  (start  <  0  ||  end  >  this.periodClass)  {  If  (start  <  0  ||  end  >  getItemCount())  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  if  (start  <  0  ||  end  >  this.periodClass)  {  If  (start  <  0  ||  end  >  getItemCount())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	if  (start  <  0  ||  end  >  this.periodClass)  {  If  (start  <  0  ||  end  >  getItemCount())  {	  if    (start    <    0    ||    end    >    getItemCount())    {    If    (start    <    0    ||    end    >    getItemCount())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
17	[BUG]  [BUGGY]  Class  <?>  start  =  item.getStartClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {      [BUGGY]  Class  <?>  start  =  item.getStartClass();  [BUGGY]      if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1050	1050	1	replace	Class  <?>  start  =  item.getStartClass();	  Class    <?>    start    =    item.getRangeClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
