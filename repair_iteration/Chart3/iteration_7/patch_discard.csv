compilation error,188,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 2;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  +(Double.MAX_VALUE);  ,this.minY = Double.NaN * 4 +(Double.MAX_VALUE);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  4  +(Double.MAX_VALUE);  ,this.minY = Double.NaN * 2 +(Double.MAX_VALUE);
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  2  :  0);  ,this.minY =(0 < minY? 2 : 0);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  2.0;  ,this.maxY = Double.NaN / 2.0;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN % 3 + 1;
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN * 1;
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN * 4 +(Double.MAX_VALUE);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  10.0;  ,this.minY = Double.NaN / 10.0;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anybody, because that // happens next anyway; }
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  10  +  1;  , 
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that // happens next anyway; }!
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;!
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;! if(notify) { fireSeriesChanged(); } ;
compilation error,634,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // remove old items if necessary, // don't notify anybody, because that // happens next anyway; } ;
patch is same with buggy,188,replace,, this.maxY  =  1;  , 
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN - 2 + 1;
patch is same with buggy,188,replace,, this.minY  =  minY  /  4;  ,this.minY = minY / 4;
patch is same with buggy,634,replace,, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ; if(
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ; if(
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  12.0;  ,this.minY = Double.NaN / 12.0;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 10.0;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  1;  , 
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }  ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anybody, because that // happens next anyway; }
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 3;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 3;
patch is same with buggy,188,replace,, this.minY  =  minY  /  2  +  1;  ,this.minY = minY / 2 + 1;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0 + 1;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 2.0;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN % 2.0;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(notify)) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; ; // removeAgedItems(true);, // removeAgedItems(false); } ;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(notify)) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; ; if(stillAgedItems(true);, // removeAgedItems(false); } ;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  2L;  ,this.maxY = Double.NaN % 2L;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  2;  ,this.minY = Double.NaN * 2 / 2;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 7;
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 2.0;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 2.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  1000;  ,this.minY = Double.NaN / 1000;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  10;  ,this.minY = Double.NaN / 10;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 1000;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  2;  ,this.minY = Double.NaN / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  2.0;  , 
patch is same with buggy,188,replace,, this.maxY  =  minY  *  2;  ,this.maxY = minY * 2;
compilation error,634,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN * 2 / 2;
compilation error,634,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, // don't notify anybody, because that // happens next anyway; } if(notify) { fireSeriesChanged();
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  -  2;  , 
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  /  2;  ,this.maxY = Double.NaN / 2;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN % 20.0;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2;  ,this.minY = Double.NaN * 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10.0;  ,this.minY = Double.NaN % 10.0;
patch is same with buggy,188,replace,, this.minY  =  minY  *  2;  ,this.minY = minY * 2;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; &/ removeAgedItems(false); &/ remove old items if needed, // don't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; &/ removeAgedItems(false); &/ remove old items if needed, // don't notify anyone, because that // happens next anyway; }!
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  necessary,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }  ;  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if necessary, // don't notify anybody, because that // happens next anyway; } ;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  necessary,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }  ;  ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); luckily ; // removeAgedItems(false); // remove old items if necessary, // don't notify anybody, because that // happens next anyway; } ;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  3;  , 
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(notify) { fireSeriesChanged(); & ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ; if(notify
patch is same with buggy,634,replace,, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(notify  ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ; if(notify
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(notify  ,if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; // removeAgedItems(true);, // removeAgedItems(false); } ; if(notify
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN * 2 / 3;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1;  , 
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN / 100 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  ,this.minY = Double.NaN * 4 /(Double.MAX_VALUE);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  ,this.minY = Double.NaN * 2 -(Double.MAX_VALUE);
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  , 
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN % 2L;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN % 2L;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  %  100  +  1;  ,this.minY = Double.NaN % 100;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  %  100  +  1;  ,this.minY = Double.NaN % 1000 + 1;
patch is same with buggy,188,replace,, this.minY  =  maxY  /  2;  ,this.minY = maxY / 2;
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN % 2 + 1;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN % 2 + 1;
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  1  :  0);  ,this.minY =(0 < minY? 1 : 0);
compilation error,188,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 2;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  2L;  ,this.maxY = Double.NaN % 2L;
compilation error,634,replace,[CE] cannot find symbol b, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,b.setValue(item.getValue());
compilation error,634,replace,[CE] cannot find symbol, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,b.setItemCount(item.getItemCount() - 1);
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  /  2;  ,this.maxY = Double.NaN / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  2;  ,this.minY = Double.NaN / 2;
patch is same with buggy,188,replace,, this.minY  =  minY  /  4;  ,this.minY = minY / 4;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  12.0;  ,this.minY = Double.NaN / 12.0;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  2;  , 
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  2;  , 
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  10;  ,this.minY = Double.NaN / 10;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
patch is same with buggy,188,replace,, this.minY  =  minY  *  2;  ,this.minY = minY * 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  ,this.minY = Double.NaN / 4 -(Double.MAX_VALUE);
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  , 
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1;  , 
compilation error,194,add,[CE] cannot find symbol miniY, ,this.miniY = Double.NaN % 10 + 1;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(notify  ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(notify  ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  2.0;  ,this.maxY = Double.NaN / 2.0;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  1;  , 
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 1000;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  1000  +  1;  ,this.minY = Double.NaN % 1000 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10.0;  , 
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN % 2.0;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2;  ,this.minY = Double.NaN * 2;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(add) { if(notify) { fireSeriesChanged(); bodied ; if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(add) { if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  2.0;  ,this.minY = Double.NaN % 2.0;
compilation error,634,add,[CE] cannot find symbol b, ,b.append(item.getPeriod());
compilation error,634,add,[CE] cannot find symbol b, ,b.append(item);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  1000;  ,this.minY = Double.NaN / 1000;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2;  , 
compilation error,634,replace,[CE] cannot find symbol d, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,d.getPeriod().setValue(getItemCount() - this.data.size() - 1);
compilation error,634,replace,[CE] cannot find symbol d, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,d.getPeriod().setValue(getItemCount() - this.maximumItemCount);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  10  +  1;  , 
compilation error,194,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Long.MAX_VALUE % 2L;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  %  100  +  1;  ,this.minY = Double.NaN % 1000;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  %  100  +  1;  , 
compilation error,634,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount) { TimeSeriesDataItem item =(TimeSeriesDataItem)c.get(item); if(add) { fireSeriesChanged(); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  3  +  1;  ,this.minY = Double.NaN % 3 + 1;
compilation error,194,add,[CE] cannot find symbol miniY, ,this.miniY = Double.NaN - 2 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  4  +(Double.MAX_VALUE);  ,this.minY = Double.NaN * 7 +(Double.MAX_VALUE);
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  +(Double.MAX_VALUE);  , 
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 2.0;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(add) { if(notify) { fireSeriesChanged(); if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); figured
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  1  :  0);  ,this.minY =(0 < minY? 1 : 0);
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  1  :  0);  , 
compilation error,188,replace,[CE] bad operand types for binary operator '*', this.maxY  =  minY  *  2;  ,this.maxY = range * 2;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
compilation error,188,replace,[CE] cannot find symbol MinY, this.maxY  =  1;  ,this.maxY = MinY;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  10.0;  ,this.minY = Double.NaN / 10.0;
patch is same with buggy,188,replace,, this.minY  =  minY  /  2  +  1;  ,this.minY = minY / 2 + 1;
patch is same with buggy,188,replace,, this.maxY  =  maxY  /  7;  ,this.maxY = maxY / 7;
compilation error,188,add,[CE] bad operand types for binary operator '/', ,this.maxY = range / 1;
compilation error,188,replace,[CE] ')' expected, this.maxY  =  1;  ,this.maxY =(this.minY = 0, this.maxY);
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  2  :  0);  ,this.minY =(0 < minY? 2 : 0);
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  2  :  0);  , 
compilation error,188,add,[CE] incompatible types, ,this.minY =(this.minY > 0);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); figured
compilation error,194,add,[CE] cannot find symbol minItemAge, ,this.minItemAge = Double.NaN % 2L;
patch is same with buggy,188,replace,, this.minY  =  minY  /  4;  , 
patch is same with buggy,188,replace,, this.minY  =  maxY  -  1;  ,this.minY = maxY - 1;
compilation error,188,add,[CE] no suitable method found for max(double), ,this.maxY = Math.max(Double.NaN / 10);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1;  , 
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  2L;  ,this.maxY = Double.NaN % 2L;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  1000;  ,this.minY = Double.NaN / 1000;
patch is same with buggy,188,replace,, this.minY  =  maxY  /  2;  ,this.minY = maxY / 2;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  2;  ,this.minY = Double.NaN / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  2.0;  ,this.minY = Double.NaN % 2.0;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  -(Double.MAX_VALUE);  ,this.minY = Double.NaN * 4 -(Double.MAX_VALUE);
compilation error,188,replace,[CE] incompatible types, this.maxY  =  1;  ,this.maxY = range;
patch is same with buggy,188,replace,, this.maxY  =  1;  , 
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that's next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }  ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  2  :  0);  ,this.minY =(0 < minY? 2 : 0);
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  /  2;  ,this.maxY = Double.NaN / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
patch is same with buggy,188,replace,, this.maxY  =  maxY  /  7;  , 
patch is same with buggy,188,replace,, this.minY  =  minY  /  2  +  1;  ,this.minY = minY / 2 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
compilation error,188,add,[CE] class expected, ,this.minY = double.NaN / 2;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); // remove old items if needed, // don't notify anybody, because that's next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated
patch is same with buggy,188,replace,, this.minY  =  minY  *  2;  ,this.minY = minY * 2;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  1;  ,this.maxY = Double.NaN * 1;
compilation error,188,add,[CE] class expected, ,this.minY = double.NaN + 1;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); if(notify) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression, ,if(!added) { if(notify) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression, ,if(!added) { if(getNotify) { fireSeriesChanged(); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10.0;  , 
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2;  ,this.minY = Double.NaN * 2;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2;  , 
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anybody, because that's next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  }!  ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that's next anyway; }
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  4  +(Double.MAX_VALUE);  ,this.minY = Double.NaN * 4 +(Double.MAX_VALUE);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // don't notify anyone, because that
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  10.0;  , 
compilation error,188,replace,[CE] incompatible types, this.maxY  =  1;  ,this.maxY =(this.minY == 0);
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  -  2;  ,this.maxY = Double.NaN - 2;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  -  2  +  1;  ,this.maxY = Double.NaN - 2 + 1;
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  1  :  0);  ,this.minY =(0 < minY? 1 : 0);
patch is same with buggy,188,replace,, this.minY  =(0  <  minY?  1  :  0);  , 
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  10;  ,this.minY = Double.NaN / 10;
compilation error,634,add,[CE] illegal start of expression, ,if(item!= null) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  2.0;  ,this.minY = Double.NaN / 2.0;
compilation error,188,add,[CE] no suitable method found for max(double,String), ,this.maxY = Math.max(minY, range);
compilation error,188,add,[CE] cannot find symbol maximumY, ,this.maxY = maximumY / 1;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  2.0;  ,this.maxY = Double.NaN / 2.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  20.0;  ,this.minY = Double.NaN % 20.0;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; if(!offset) { fireSeriesChanged(); } ; if(
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(  ,if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; if(!intValue) { fireSeriesChanged(); } ; if(
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  12.0;  , 
compilation error,188,add,[CE] no suitable method found for max(double), ,this.maxY = Math.max(Double.NaN / 2);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(true);,  //  removeAgedItems(false);  }  ;  if(notify  ,if(notify) { fireSeriesChanged(); slated ; if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ;
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN / 7;
