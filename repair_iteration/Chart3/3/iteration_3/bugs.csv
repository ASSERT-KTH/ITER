bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end  -  start);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end  -  start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end  -  start);	  TimeSeries    copy    =(TimeSeries)this.data.createCopy(start,    end);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
2	[BUG]  [BUGGY]  Collections.sort(this.data,  start,  end);  [CE]  no  suitable  method  found  for  sort(List,int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data,  start,  end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data,  start,  end);	  Collections.sort(this.data,    start);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,int,int)	3	None	replace
3	[BUG]  [BUGGY]  Collections.sort(this.data,  start,  this.maxY);  [CE]  no  suitable  method  found  for  sort(List,int,double)  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data,  start,  this.maxY);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data,  start,  this.maxY);	  Collections.sort(this.data,    start);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,int,double)	3	None	replace
4	[BUG]  [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [CE]  variable  data  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  createCopy(int,int)	11	None	add
5	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    Collections.sort(this.data);	  	compilable	  [FE]  ClassCastException  	11	3	add
6	[BUG]  [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    Collections.sort(this.data);	  	compilable	  [FE]  ClassCastException  	11	3	add
7	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  TimeSeries  c  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    Collections.sort(this.data);  TimeSeries  c  =(TimeSeries)this.data.get(start);	  	compilable	  [FE]  ClassCastException  	11	3	add
8	[BUG]  [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  TimeSeries  c  =(TimeSeries)this.data.get(start);  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  Collections.sort(this.data);  TimeSeries  c  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    Collections.sort(this.data);  TimeSeries  c  =(TimeSeries)this.data.get(start);	  	compilable	  [FE]  ClassCastException  	11	3	add
9	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	15	None	add
10	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  TimeSeries  copy  =(TimeSeries)data.get(start  -  start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  TimeSeries  copy  =(TimeSeries)data.get(start  -  start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    TimeSeries  copy  =(TimeSeries)data.get(start  -  start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	15	None	add
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	3	replace
12	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	3	replace
13	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	compilable	  [FE]  ClassCastException  	16	3	replace
14	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	compilable	  [FE]  ClassCastException  	16	3	replace
15	[BUG]  [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start,  end);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start,  end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Class  <?>  rangeClass  =  getRangeClass(start,  end);	  Class    <?>    rangeClass    =    getRangeClass(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
16	[BUG]  [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start  +  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start  +  1);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Class  <?>  rangeClass  =  getRangeClass(start  +  1);	  Class    <?>    rangeClass    =    getRangeClass(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
17	[BUG]  [BUGGY]  TimeSeries  super.createCopy(start,  end  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  super.createCopy(start,  end  -  1);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.createCopy(start,  end  -  1);	  TimeSeries    super.createCopy(start,    end    -    start);    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  TimeSeries  super.createCopy(start,  end  -  start  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  super.createCopy(start,  end  -  start  +  1);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.createCopy(start,  end  -  start  +  1);	  TimeSeries    super.createCopy(start,    end    -    start);    	non-compiled	[CE]  not  a  statement	5	None	replace
19	[BUG]  [BUGGY]  Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(end);  [CE]  cannot  find  symbol  copy  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(end);	          Collections.sort(this.data);    TimeSeries    data    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  cannot  find  symbol  copy	12	None	replace
20	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(0);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.data.get(0);	  TimeSeries    copy    =(TimeSeries)this.data.get(end);    	compilable	  [FE]  ClassCastException  	8	3	replace
21	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(0);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(0);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(0);	  TimeSeries    copy    =(TimeSeries)this.data.get(end);    	compilable	  [FE]  ClassCastException  	8	3	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	                Collections.sort(this.data);        Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
23	[BUG]  [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	                Collections.sort(this.data);        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
25	[BUG]  [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
26	[BUG]  [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        Collections.sort(this.data);    List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	add
27	[BUG]  [BUGGY]  if(this.data!=  null)  {  Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  if(this.data!=  null)  {  Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  }  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	if(this.data!=  null)  {  Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  }	          Collections.sort(this.data);    List    <    TimeSeries>    this.data    =    new    ArrayList    <    TimeSeries>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
28	[BUG]  [BUGGY]  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);	          Collections.sort(this.data);    List    <    TimeSeries>    this.data    =    new    ArrayList    <    TimeSeries>(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
29	[BUG]  [BUGGY]  if(this.data!=  null)  {  Collections.sort(this.data);  }  [CE]  cannot  find  symbol  copy  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  if(this.data!=  null)  {  Collections.sort(this.data);  }  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	if(this.data!=  null)  {  Collections.sort(this.data);  }	          Collections.sort(this.data);    Collections.sort(this.data);    	non-compiled	[CE]  cannot  find  symbol  copy	10	None	replace
30	[BUG]  [BUGGY]  TimeSeries  super.set(start,  end  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  super.set(start,  end  -  1);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.set(start,  end  -  1);	  TimeSeries    super.set(start,    end    -    start);    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  TimeSeries  super.set(start,  end  -  start  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  super.set(start,  end  -  start  +  1);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.set(start,  end  -  start  +  1);	  TimeSeries    super.set(start,    end    -    start);    	non-compiled	[CE]  not  a  statement	2	None	replace
32	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(end);    TimeSeries  copy  =(TimeSeries)this.data.get(end);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	7	None	add
33	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]      ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(end);    TimeSeries  copy  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	7	None	add
34	[BUG]  [BUGGY]  TimeSeries  data  =(TimeSeries)this.data.get(start);  [CE]  cannot  find  symbol  copy  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  data  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  data  =(TimeSeries)this.data.get(start);	          Collections.sort(this.data);    TimeSeries    data    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  cannot  find  symbol  copy	12	None	replace
35	[BUG]  [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [CE]  variable  data  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        TimeSeries    data    =(TimeSeries)this.data.get(start);    TimeSeries  data  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  createCopy(int,int)	11	None	add
36	[BUG]  [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(start);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(start);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        Collections.sort(this.data);    TimeSeries  this.data  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  not  a  statement	9	None	add
37	[BUG]  [BUGGY]  ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();	          Collections.sort(this.data);    List    <    TimeSeries>    this.data    =    new    ArrayList    <    TimeSeries>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
38	[BUG]  [BUGGY]  Collections.sort(this.data,  start,  this.maximumItemCount);  [CE]  no  suitable  method  found  for  sort(List,int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data,  start,  this.maximumItemCount);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data,  start,  this.maximumItemCount);	  Collections.sort(this.data,    start);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,int,int)	3	None	replace
39	[BUG]  [BUGGY]  if(start  >  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [CE]  cannot  find  symbol  copy  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  if(start  >  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	if(start  >  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }	          Collections.sort(this.data);    Collections.sort(this.data);    	non-compiled	[CE]  cannot  find  symbol  copy	10	None	replace
40	[BUG]  [BUGGY]  if(start  <  0)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [CE]  cannot  find  symbol  copy  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  if(start  <  0)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	if(start  <  0)  {  Collections.sort(this.data);  Collections.sort(this.data);  }	          Collections.sort(this.data);    Collections.sort(this.data);    	non-compiled	[CE]  cannot  find  symbol  copy	10	None	replace
41	[BUG]  [BUGGY]  Collections.sort(this.data,  start,  this.maximumItemAge);  [CE]  no  suitable  method  found  for  sort(List,int,long)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data,  start,  this.maximumItemAge);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data,  start,  this.maximumItemAge);	  Collections.sort(this.data,    start);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,int,long)	3	None	replace
42	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);	  TimeSeries    copy    =(TimeSeries)this.data.get(start);    TimeSeries    copy    =(TimeSeries)this.data.get(end);    	non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	18	None	replace
43	[BUG]  [BUGGY]  Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(end);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(end);	          Collections.sort(this.data);    TimeSeries    this.data    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  not  a  statement	14	None	replace
44	[BUG]  [BUGGY]  if(start  <  =  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  if(start  <  =  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	if(start  <  =  end)  {  Collections.sort(this.data);  Collections.sort(this.data);  }	          Collections.sort(this.data);    Collections.sort(this.data);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Set  <  TimeSeries>  this.data  =  Sets.newHashSet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]          Collections.sort(this.data);    Collections.sort(this.data);  Set  <  TimeSeries>  this.data  =  Sets.newHashSet();  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	                Collections.sort(this.data);        Collections.sort(this.data);    Set  <  TimeSeries>  this.data  =  Sets.newHashSet();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	add
46	[BUG]  [BUGGY]  ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	ArrayList  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);	          Collections.sort(this.data);    List    <    TimeSeries>    this.data    =    new    ArrayList    <    TimeSeries>(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
47	[BUG]  [BUGGY]  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(end);	          Collections.sort(this.data);    List    <    TimeSeries>    this.data    =    new    ArrayList    <    TimeSeries>(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
48	[BUG]  [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(end);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }      [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(end);  [BUGGY]      TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Class  <?>  rangeClass  =  getRangeClass(end);	  Class    <?>    rangeClass    =    getRangeClass(start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
