bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  Class  <?>  rangeClass  =  getRangeClass(start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Class  <?>  rangeClass  =  getRangeClass(start);	      Class    <?>    rangeClass    =    getRangeClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
2	[BUG]  [BUGGY]  TimeSeries  super.set(start,  end  -  start);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  super.set(start,  end  -  start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.set(start,  end  -  start);	      TimeSeries    super.set(start,    end);    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  Collections.sort(this.data,  start);  [CE]  no  suitable  method  found  for  sort(List,int)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  Collections.sort(this.data,  start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	Collections.sort(this.data,  start);	      Collections.sort(this.data);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,int)	4	None	replace
4	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.createCopy(start,  end);	  TimeSeries    copy    =(TimeSeries)super.createCopy(start,    end);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
5	[BUG]  [BUGGY]  TimeSeries  super.createCopy(start,  end  -  start);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  super.createCopy(start,  end  -  start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  super.createCopy(start,  end  -  start);	      TimeSeries    super.createCopy(start,    end);    	non-compiled	[CE]  not  a  statement	1	None	replace
6	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(start);    TimeSeries  copy  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	add
7	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.data.get(end);	  TimeSeries    copy    =(TimeSeries)this.data.get(start);    	compilable	  [FE]  ClassCastException  	6	3	replace
8	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(end);	  TimeSeries    copy    =(TimeSeries)this.data.get(start);    	compilable	  [FE]  ClassCastException  	6	3	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
10	[BUG]  [BUGGY]      Collections.sort(this.data);  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
11	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	        Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);	  	compilable	  [FE]  ClassCastException  	3	3	add
12	[BUG]  [BUGGY]      Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  TimeSeries  data  =(TimeSeries)this.data.get(start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	        Collections.sort(this.data);    TimeSeries  data  =(TimeSeries)this.data.get(start);	  	compilable	  [FE]  ClassCastException  	3	3	add
13	[BUG]  [BUGGY]      Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	        Collections.sort(this.data);    List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	add
14	[BUG]  [BUGGY]      Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(start);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  TimeSeries  this.data  =(TimeSeries)this.data.get(start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	        Collections.sort(this.data);    TimeSeries  this.data  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  not  a  statement	3	None	add
15	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);	  TimeSeries    copy    =(TimeSeries)this.data.get(start);    	compilable	  [FE]  ClassCastException  	6	3	replace
16	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);	  TimeSeries    copy    =(TimeSeries)this.data.get(start);    	compilable	  [FE]  ClassCastException  	6	3	replace
17	[BUG]  [BUGGY]      Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]      Collections.sort(this.data);  List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	        Collections.sort(this.data);    List  <  TimeSeries>  this.data  =  new  ArrayList  <  TimeSeries>(start);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	add
18	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start);  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    ClassCastException    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start);  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	TimeSeries    copy    =(TimeSeries)this.data.get(start);    TimeSeries  copy  =(TimeSeries)this.data.get(end);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	add
