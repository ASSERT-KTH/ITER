bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
32487	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5415	1
32488	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5415	1
17367	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    notify)    {        	compilable	  [FE]  AssertionFailedError	2895	1
17368	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getClass().isAssignableFrom(c))  {    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    notify)    {        	compilable	  [FE]  AssertionFailedError	2895	1
19953	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      if        (count        ==        0)        {        this.data.add(item);        added        =        true;        }        else        {                      [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]                      if        (item.getPeriod().compareTo(last)        >        0)        {        this.data.add(item);        added        =        true;        }        else        {        int        index        =        Collections.binarySearch(this.data,        item);        if        (index        <        0)        {        this.data.add(-index        -        1,        item);        added        =        true;        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	add	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);	      	compilable	  [FE]  AssertionFailedError	3326	1
19954	[BUG]  [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);    [FE]  AssertionFailedError  [CONTEXT]                      if        (count        ==        0)        {        this.data.add(item);        added        =        true;        }        else        {                      [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]                      if        (item.getPeriod().compareTo(last)        >        0)        {        this.data.add(item);        added        =        true;        }        else        {        int        index        =        Collections.binarySearch(this.data,        item);        if        (index        <        0)        {        this.data.add(-index        -        1,        item);        added        =        true;        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	replace	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);	      	compilable	  [FE]  AssertionFailedError	3326	1
6529	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(RegularTimePeriod        period,        double        value)        {                              [BUGGY]  add(period,  new  Double(value),  true);  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                RegularTimePeriod        period        double        value        [VARIABLES]        boolean        double        maxY        minY        value        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        period        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	add	add(period,  new  Double(value),  true);	  add(period,    new    Double(value),    false);        	compilable	  [FE]  AssertionFailedError	1089	1
6530	[BUG]  [BUGGY]  add(period,  new  Double(value),  true);    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(RegularTimePeriod        period,        double        value)        {                              [BUGGY]  add(period,  new  Double(value),  true);  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                RegularTimePeriod        period        double        value        [VARIABLES]        boolean        double        maxY        minY        value        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        period        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	replace	add(period,  new  Double(value),  true);	  add(period,    new    Double(value),    false);        	compilable	  [FE]  AssertionFailedError	1089	1
22333	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
22334	[BUG]  [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
22335	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.add(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.add(item);  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
22336	[BUG]  [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.add(item);  }    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.add(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.add(item);  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
22987	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
22988	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
12614	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  2;	      	compilable	  [FE]  AssertionFailedError	2103	1
12615	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  2;	      	compilable	  [FE]  AssertionFailedError	2103	1
32444	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	5408	1
32445	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	5408	1
23414	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                                      [BUGGY]  if(notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                      fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	3903	1
23415	[BUG]  [BUGGY]  if(notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }    [FE]  AssertionFailedError  [CONTEXT]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                                      [BUGGY]  if(notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                      fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	3903	1
11018	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;                      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }	      	compilable	  [FE]  AssertionFailedError	1837	1
11019	[BUG]  [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;                      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }	      	compilable	  [FE]  AssertionFailedError	1837	1
32456	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32457	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32457	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32458	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
12585	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  4;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  4;	  this.minY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2098	1
12586	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  4;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  4;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  4;	  this.minY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2098	1
26829	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                                      [BUGGY]  int  count  =  getItemCount()  -  2;  [BUGGY]                      if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount()  -  2;	      	compilable	  [FE]  AssertionFailedError	4472	1
26830	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                                      [BUGGY]  int  count  =  getItemCount()  -  2;  [BUGGY]                      if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount()  -  2;	      	compilable	  [FE]  AssertionFailedError	4472	1
11066	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;                      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(name!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.domain  =  domain;  this.range  =  range;  }	      	compilable	  [FE]  AssertionFailedError	1845	1
11067	[BUG]  [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.domain  =  domain;  this.range  =  range;  }    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;                      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(name!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.domain  =  domain;  this.range  =  range;  }	      	compilable	  [FE]  AssertionFailedError	1845	1
12619	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  2;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  2;	  this.minY    =    Double.NaN    +    2;        	compilable	  [FE]  AssertionFailedError	2104	1
12620	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  2;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  2;	  this.minY    =    Double.NaN    +    2;        	compilable	  [FE]  AssertionFailedError	2104	1
10670	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.maxY  =  minY;  [BUGGY]                      this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.maxY  =  minY;	  this.maxY    =    maxY;        	compilable	  [FE]  AssertionFailedError	1779	1
10671	[BUG]  [BUGGY]  this.maxY  =  minY;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.maxY  =  minY;  [BUGGY]                      this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.maxY  =  minY;	  this.maxY    =    maxY;        	compilable	  [FE]  AssertionFailedError	1779	1
12615	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  0;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  0;	      	compilable	  [FE]  AssertionFailedError	2103	1
12616	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  0;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  0;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  0;	      	compilable	  [FE]  AssertionFailedError	2103	1
22329	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(item.getPeriod().equals(this.timePeriodClass))  {  updateBoundsForAddedItem(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	if(item.getPeriod().equals(this.timePeriodClass))  {  updateBoundsForAddedItem(item);  }	      	compilable	  [FE]  AssertionFailedError	3722	1
22330	[BUG]  [BUGGY]  if(item.getPeriod().equals(this.timePeriodClass))  {  updateBoundsForAddedItem(item);  }    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(item.getPeriod().equals(this.timePeriodClass))  {  updateBoundsForAddedItem(item);  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	if(item.getPeriod().equals(this.timePeriodClass))  {  updateBoundsForAddedItem(item);  }	      	compilable	  [FE]  AssertionFailedError	3722	1
17408	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.equals(c)||  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.equals(c)||  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.equals(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	2902	1
17409	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.equals(c)||  item.getClass().isAssignableFrom(c))  {    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.equals(c)||  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.equals(c)||  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.equals(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	2902	1
32481	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  >  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  >  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5414	1
32482	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  >  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  >  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  >  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5414	1
13051	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  *  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  *  2;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
13052	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  *  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  *  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  *  2;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
1383	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  end);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start  +  end);	  copy.data    =    new    java.util.ArrayList(end);        	compilable	  [FE]  AssertionFailedError	231	1
1384	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  end);    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  end);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start  +  end);	  copy.data    =    new    java.util.ArrayList(end);        	compilable	  [FE]  AssertionFailedError	231	1
34178	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
34179	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
33098	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
33099	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
33099	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
33100	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
34183	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
34184	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
10663	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.minY  =  minY;  [BUGGY]                      this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.minY  =  minY;	      	compilable	  [FE]  AssertionFailedError	1778	1
10664	[BUG]  [BUGGY]  this.minY  =  minY;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.minY  =  minY;  [BUGGY]                      this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.minY  =  minY;	      	compilable	  [FE]  AssertionFailedError	1778	1
13010	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  +  1;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  +  1;	      	compilable	  [FE]  AssertionFailedError	2169	1
13011	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  +  1;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  +  1;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  +  1;	      	compilable	  [FE]  AssertionFailedError	2169	1
34251	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
34252	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
13045	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  2;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
13046	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  2;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
13046	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  4;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  4;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
13047	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  4;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  4;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  4;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
10245	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);                      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]                      this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    else    {    this.domain    =    domain;    this.range    =    range;    }        	compilable	  [FE]  AssertionFailedError	1708	1
10246	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);                      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]                      this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    else    {    this.domain    =    domain;    this.range    =    range;    }        	compilable	  [FE]  AssertionFailedError	1708	1
34184	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
34185	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
34185	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
34186	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5698	1
1425	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(end  +  1);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
1426	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(end  +  1);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
22981	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }	      	compilable	  [FE]  AssertionFailedError	3831	1
22982	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }	      	compilable	  [FE]  AssertionFailedError	3831	1
22983	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!	      	compilable	  [FE]  AssertionFailedError	3831	1
22984	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway;  }!	      	compilable	  [FE]  AssertionFailedError	3831	1
34179	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)&&  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
34180	[BUG]  [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)&&  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
23023	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3838	1
23024	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3838	1
32481	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5414	1
32482	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5414	1
27728	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();                      [BUGGY]  long  maximal  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        }        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  maximal  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4622	1
27729	[BUG]  [BUGGY]  long  maximal  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();                      [BUGGY]  long  maximal  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        }        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  maximal  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4622	1
13039	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  1;	      	compilable	  [FE]  AssertionFailedError	2174	1
13040	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  1;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  1;	      	compilable	  [FE]  AssertionFailedError	2174	1
13040	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  2;	      	compilable	  [FE]  AssertionFailedError	2174	1
13041	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  2;	      	compilable	  [FE]  AssertionFailedError	2174	1
13052	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  1L;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  1L;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
13053	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  1L;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  1L;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  1L;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
32455	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32456	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32445	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	5408	1
32446	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	5408	1
34215	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isInfinite(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||(a    >=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5703	1
34216	[BUG]  [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isInfinite(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||(a    >=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5703	1
4191	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();                      [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  this.data.toString());  [BUGGY]                      }        }        }        return        copy;        }        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item.... "  +  this.data.toString());	      	compilable	  [FE]  AssertionFailedError	699	1
4192	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  this.data.toString());    [FE]  AssertionFailedError  [CONTEXT]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();                      [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  this.data.toString());  [BUGGY]                      }        }        }        return        copy;        }        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item.... "  +  this.data.toString());	      	compilable	  [FE]  AssertionFailedError	699	1
15345	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {                      [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                      if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }        else        if        (!this.timePeriodClass.equals(c))        {        StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2558	1
15346	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {                      [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                      if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }        else        if        (!this.timePeriodClass.equals(c))        {        StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2558	1
29601	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        void        updateBoundsForAddedItem(TimeSeriesDataItem        item)        {        Number        yN        =        item.getValue();                      [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  [BUGGY]                      if        (item.getValue()        !=        null)        {        double        y        =        yN.doubleValue();        this.minY        =        minIgnoreNaN(this.minY,        y);        this.maxY        =        maxIgnoreNaN(this.maxY,        y);        }        }        [CLASS]        TimeSeries        [METHOD]        updateBoundsForAddedItem        [RETURN_TYPE]        void                TimeSeriesDataItem        item        [VARIABLES]        boolean        Number        yN        double        maxY        minY        oldY        value        y        yy        TimeSeriesDataItem        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  yN  =  item.getValue();  }	      	compilable	  [FE]  AssertionFailedError	4934	1
29602	[BUG]  [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }    [FE]  AssertionFailedError  [CONTEXT]                      private        void        updateBoundsForAddedItem(TimeSeriesDataItem        item)        {        Number        yN        =        item.getValue();                      [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  [BUGGY]                      if        (item.getValue()        !=        null)        {        double        y        =        yN.doubleValue();        this.minY        =        minIgnoreNaN(this.minY,        y);        this.maxY        =        maxIgnoreNaN(this.maxY,        y);        }        }        [CLASS]        TimeSeries        [METHOD]        updateBoundsForAddedItem        [RETURN_TYPE]        void                TimeSeriesDataItem        item        [VARIABLES]        boolean        Number        yN        double        maxY        minY        oldY        value        y        yy        TimeSeriesDataItem        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  yN  =  item.getValue();  }	      	compilable	  [FE]  AssertionFailedError	4934	1
13047	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  10;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  10;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
13048	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  10;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  /  10;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  10;	  this.maxY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2175	1
23409	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                                      [BUGGY]  if(!added)  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist:   "  +  this);  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                      fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!added)  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist:   "  +  this);  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	      	compilable	  [FE]  AssertionFailedError	3902	1
23410	[BUG]  [BUGGY]  if(!added)  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist:   "  +  this);  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }    [FE]  AssertionFailedError  [CONTEXT]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                                      [BUGGY]  if(!added)  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist:   "  +  this);  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                      fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!added)  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist:   "  +  this);  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	      	compilable	  [FE]  AssertionFailedError	3902	1
34256	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5710	1
34257	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5710	1
12579	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  10;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  10;	      	compilable	  [FE]  AssertionFailedError	2097	1
12580	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  10;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  10;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  10;	      	compilable	  [FE]  AssertionFailedError	2097	1
27224	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {                      [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4538	1
27225	[BUG]  [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {                      [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4538	1
32487	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5415	1
32488	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(a))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5415	1
17354	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2893	1
17355	[BUG]  [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2893	1
17355	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2893	1
17356	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2893	1
17359	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2894	1
17360	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2894	1
13053	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  -  1D;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  -  1D;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
13054	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  -  1D;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;                      [BUGGY]  this.maxY  =  Double.NaN  -  1D;  [BUGGY]                      }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  -  1D;	  this.maxY    =    Double.NaN    -    1L;        	compilable	  [FE]  AssertionFailedError	2176	1
17403	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(this.timePeriodClass.equals(item.getPeriod()))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(this.timePeriodClass.equals(item.getPeriod()))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2901	1
17404	[BUG]  [BUGGY]  else  if(this.timePeriodClass.equals(item.getPeriod()))  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(this.timePeriodClass.equals(item.getPeriod()))  {  throw  new  SeriesException( " ");  }  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(this.timePeriodClass.equals(item.getPeriod()))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	2901	1
1424	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  2);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start  +  2);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
1425	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  2);    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  2);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start  +  2);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
1425	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  3);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start  +  3);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
1426	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  3);    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries        createCopy(int        start,        int        end)        throws        CloneNotSupportedException        {        if        (start        <        0)        {        throw        new        IllegalArgumentException(       "Requires        start        >=        0.       ");        }        if        (end        <        start)        {        throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();                      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  3);  [BUGGY]                      if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {        copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start  +  3);	  copy.data    =    new    java.util.ArrayList(start    +    1);        	compilable	  [FE]  AssertionFailedError	238	1
31623	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0)&&(b  <=  0.0))  {  [BUGGY]                      return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {        return        Math.min(a,        b);        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0)&&(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0)||(b    <    0.0))    {        	compilable	  [FE]  AssertionFailedError	5271	1
31624	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0)&&(b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0)&&(b  <=  0.0))  {  [BUGGY]                      return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {        return        Math.min(a,        b);        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0)&&(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0)||(b    <    0.0))    {        	compilable	  [FE]  AssertionFailedError	5271	1
34179	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
34180	[BUG]  [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
22988	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
22989	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
22989	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
22990	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	3832	1
32529	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5422	1
32530	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5422	1
34179	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
34180	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	5697	1
32523	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
32524	[BUG]  [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isInfinite(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
12615	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  +  3;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  +  3;	      	compilable	  [FE]  AssertionFailedError	2103	1
12616	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  3;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  +  3;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  +  3;	      	compilable	  [FE]  AssertionFailedError	2103	1
34249	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
34250	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
34250	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
34251	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        maxIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.max(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        maxIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5709	1
26654	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                                      [BUGGY]  if(this.data.size()  >  0)  {  [BUGGY]                      long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	if(this.data.size()  >  0)  {	  if(this.data.size()    >    1)    {        	compilable	  [FE]  AssertionFailedError	4443	1
26655	[BUG]  [BUGGY]  if(this.data.size()  >  0)  {    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                                      [BUGGY]  if(this.data.size()  >  0)  {  [BUGGY]                      long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();        boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	if(this.data.size()  >  0)  {	  if(this.data.size()    >    1)    {        	compilable	  [FE]  AssertionFailedError	4443	1
22947	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3825	1
22948	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3825	1
17408	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.equals( " ")&&  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.equals( " ")&&  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.equals(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	2902	1
17409	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.equals( " ")&&  item.getClass().isAssignableFrom(c))  {    [FE]  AssertionFailedError  [CONTEXT]                      public        void        add(TimeSeriesDataItem        item,        boolean        notify)        {        if        (item        ==        null)        {        throw        new        IllegalArgumentException(       "Null        'item'        argument.       ");        }        item        =        (TimeSeriesDataItem)        item.clone();        Class        c        =        item.getPeriod().getClass();        if        (this.timePeriodClass        ==        null)        {        this.timePeriodClass        =        c;        }                      [BUGGY]  else  if(!this.timePeriodClass.equals( " ")&&  item.getClass().isAssignableFrom(c))  {  [BUGGY]                      StringBuffer        b        =        new        StringBuffer();        b.append(       "You        are        trying        to        add        data        where        the        time        period        class               ");        b.append(       "is               ");        b.append(item.getPeriod().getClass().getName());        b.append(       ",        but        the        TimeSeries        is        expecting        an        instance        of               ");        b.append(this.timePeriodClass.getName());        b.append(       ".       ");        throw        new        SeriesException(b.toString());        }                [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.equals( " ")&&  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.equals(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	2902	1
12615	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  2  +  1;	      	compilable	  [FE]  AssertionFailedError	2103	1
12616	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  2  +  1;	      	compilable	  [FE]  AssertionFailedError	2103	1
22334	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  throw  new  SeriesException( " ");  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  throw  new  SeriesException( " ");  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
22335	[BUG]  [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                      b.append(       "the        time        period               ");        b.append(item.getPeriod().toString());        b.append(       "        but        the        series        already        contains        an        observation       ");        b.append(       "        for        that        time        period.        Duplicates        are        not               ");        b.append(       "permitted.Try        using        the        addOrUpdate()        method.       ");        throw        new        SeriesException(b.toString());        }        }        }        if        (added)        {                      [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  throw  new  SeriesException( " ");  }  [BUGGY]                      updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }        removeAgedItems(false);//        remove        old        items        if        necessary,        but                        if        (notify)        {        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  throw  new  SeriesException( " ");  }	  updateBoundsForAddedItem(item);        	compilable	  [FE]  AssertionFailedError	3723	1
23025	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3838	1
23026	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....    [FE]  AssertionFailedError  [CONTEXT]                      }        }        if        (added)        {        updateBoundsForAddedItem(item);                if        (getItemCount()        >        this.maximumItemCount)        {        TimeSeriesDataItem        d        =        (TimeSeriesDataItem)        this.data.remove(0);        updateBoundsForRemovedItem(d);        }                      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....  [BUGGY]                                      if        (notify)        {        fireSeriesChanged();        }        }        }        [CLASS]        TimeSeries        [METHOD]        add        [RETURN_TYPE]        void                TimeSeriesDataItem        item        boolean        notify        [VARIABLES]        StringBuffer        b        boolean        added        notify        double        maxY        minY        TimeSeriesDataItem        d        item        Class        c        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        old        range        RegularTimePeriod        last        long        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	3838	1
12585	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  12;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  12;	  this.minY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2098	1
12586	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  12;    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;        this.range        =        range;        this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;                      [BUGGY]  this.minY  =  Double.NaN  /  12;  [BUGGY]                      this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  12;	  this.minY    =    Double.NaN    /    1;        	compilable	  [FE]  AssertionFailedError	2098	1
3723	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();        copy.data        =        new        java.util.ArrayList();        if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {                      [BUGGY]  if(clone  ==  null)  {  copy.add(clone);  }  else  {  copy.add(item);  }  [BUGGY]                      copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        }        }        }        return        copy;        }        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1064	1064	1	add	if(clone  ==  null)  {  copy.add(clone);  }  else  {  copy.add(item);  }	  if(clone!=    null)    {    copy.add(clone);    }    else    {    copy.add(item);    }        	compilable	  [FE]  AssertionFailedError	621	1
3724	[BUG]  [BUGGY]  if(clone  ==  null)  {  copy.add(clone);  }  else  {  copy.add(item);  }    [FE]  AssertionFailedError  [CONTEXT]                      throw        new        IllegalArgumentException(       "Requires        start        <=        end.       ");        }        TimeSeries        copy        =        (TimeSeries)        super.clone();        copy.data        =        new        java.util.ArrayList();        if        (this.data.size()        >        0)        {        for        (int        index        =        start;        index        <=        end;        index++)        {        TimeSeriesDataItem        item        =        (TimeSeriesDataItem)        this.data.get(index);        TimeSeriesDataItem        clone        =        (TimeSeriesDataItem)        item.clone();        try        {                      [BUGGY]  if(clone  ==  null)  {  copy.add(clone);  }  else  {  copy.add(item);  }  [BUGGY]                      copy.add(clone);        }        catch        (SeriesException        e)        {        e.printStackTrace();        }        }        }        return        copy;        }        [CLASS]        TimeSeries        [METHOD]        createCopy        [RETURN_TYPE]        TimeSeries                int        start        int        end        [VARIABLES]        TimeSeries        copy        boolean        double        maxY        minY        oldY        value        yy        TimeSeriesDataItem        clone        item        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        SeriesException        e        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        i        index        maximum        maximumItemCount        start                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1064	1064	1	replace	if(clone  ==  null)  {  copy.add(clone);  }  else  {  copy.add(item);  }	  if(clone!=    null)    {    copy.add(clone);    }    else    {    copy.add(item);    }        	compilable	  [FE]  AssertionFailedError	621	1
33097	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
33098	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {        if        (Double.isNaN(b))        {        return        a;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                      return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	5517	1
10448	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.timePeriodClass  =  getTimePeriodClass();	      	compilable	  [FE]  AssertionFailedError	1742	1
10449	[BUG]  [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();    [FE]  AssertionFailedError  [CONTEXT]                      public        TimeSeries(Comparable        name,        String        domain,        String        range)        {        super(name);        this.domain        =        domain;                      [BUGGY]  this.timePeriodClass  =  getTimePeriodClass();  [BUGGY]                      this.timePeriodClass        =        null;        this.data        =        new        java.util.ArrayList();        this.maximumItemCount        =        Integer.MAX_VALUE;        this.maximumItemAge        =        Long.MAX_VALUE;        this.minY        =        Double.NaN;        this.maxY        =        Double.NaN;        }        [CLASS]        TimeSeries        [METHOD]        <init>        [RETURN_TYPE]        String)                Comparable        name        String        domain        String        range        [VARIABLES]        Comparable        name        boolean        double        maxY        minY        Class        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        domain        range        long        maximumItemAge        serialVersionUID        int        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.timePeriodClass  =  getTimePeriodClass();	      	compilable	  [FE]  AssertionFailedError	1742	1
32521	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
32522	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
32522	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
32523	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	5421	1
32457	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
32458	[BUG]  [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                      private        double        minIgnoreNaN(double        a,        double        b)        {        if        (Double.isNaN(a))        {        return        b;        }        else        {                      [BUGGY]  if(Double.isNaN(a)&&  Double.isInfinite(b))  {  [BUGGY]                      return        a;        }        else        {        return        Math.min(a,        b);        }        }        }        [CLASS]        TimeSeries        [METHOD]        minIgnoreNaN        [RETURN_TYPE]        double                double        a        double        b        [VARIABLES]        boolean        double        a        b        maxY        minY        oldY        value        y        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        index        latest        maximumItemAge        periods        serialVersionUID        int        count        end        endIndex        i        index        maximum        maximumItemCount        result        start        startIndex                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)&&  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	5410	1
27729	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();                      [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        }        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4622	1
27730	[BUG]  [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();    [FE]  AssertionFailedError  [CONTEXT]                      public        void        removeAgedItems(boolean        notify)        {                        if        (getItemCount()        >        1)        {        long        latest        =        getTimePeriod(getItemCount()        -        1).getSerialIndex();                      [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]                      boolean        removed        =        false;        while        ((latest        -        getTimePeriod(0).getSerialIndex())        >        this.maximumItemAge)        {        this.data.remove(0);        removed        =        true;        }        if        (removed)        {        findBoundsByIteration();        if        (notify)        {        fireSeriesChanged();        }        [CLASS]        TimeSeries        [METHOD]        removeAgedItems        [RETURN_TYPE]        void                boolean        notify        [VARIABLES]        boolean        notify        removed        double        maxY        minY        oldY        value        yy        Class        c        periodClass        timePeriodClass        List        data        String        DEFAULT_DOMAIN_DESCRIPTION        DEFAULT_RANGE_DESCRIPTION        description        domain        msg        old        range        long        latest        maximumItemAge        periods        serialVersionUID        int        count        i        index        maximum        maximumItemCount                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	4622	1
