bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
194666	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	32445	1
194667	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	32445	1
64022	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.maxY  =  Double.NaN;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.maxY  =  Double.NaN;	  this.maxY    =    minY;        	compilable	  [FE]  AssertionFailedError	10671	1
64023	[BUG]  [BUGGY]  this.maxY  =  Double.NaN;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.maxY  =  Double.NaN;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.maxY  =  Double.NaN;	  this.maxY    =    minY;        	compilable	  [FE]  AssertionFailedError	10671	1
75687	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  -  3;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  -  3;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
75688	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  3;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  -  3;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  -  3;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
75692	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  0;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  0;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
75693	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  0;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  0;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  0;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
205106	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34185	1
205107	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34185	1
205496	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205497	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  >=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205070	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)&&  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34179	1
205071	[BUG]  [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a)||  Double.isNaN(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(b)&&  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)&&  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34179	1
194738	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32457	1
194739	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32457	1
163340	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                removeAgedItems(boolean                notify)                {                                                if                (getItemCount()                >                1)                {                                              [BUGGY]  long  first  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();  [BUGGY]                                              long                latest                =                getTimePeriod(getItemCount()                -                1).getSerialIndex();                boolean                removed                =                false;                while                ((latest                -                getTimePeriod(0).getSerialIndex())                >                this.maximumItemAge)                {                this.data.remove(0);                removed                =                true;                }                if                (removed)                {                findBoundsByIteration();                if                (notify)                {                fireSeriesChanged();                [CLASS]                TimeSeries                [METHOD]                removeAgedItems                [RETURN_TYPE]                void                                boolean                notify                [VARIABLES]                boolean                notify                removed                double                maxY                minY                oldY                value                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                latest                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  first  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	27224	1
163341	[BUG]  [BUGGY]  long  first  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                removeAgedItems(boolean                notify)                {                                                if                (getItemCount()                >                1)                {                                              [BUGGY]  long  first  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();  [BUGGY]                                              long                latest                =                getTimePeriod(getItemCount()                -                1).getSerialIndex();                boolean                removed                =                false;                while                ((latest                -                getTimePeriod(0).getSerialIndex())                >                this.maximumItemAge)                {                this.data.remove(0);                removed                =                true;                }                if                (removed)                {                findBoundsByIteration();                if                (notify)                {                fireSeriesChanged();                [CLASS]                TimeSeries                [METHOD]                removeAgedItems                [RETURN_TYPE]                void                                boolean                notify                [VARIABLES]                boolean                notify                removed                double                maxY                minY                oldY                value                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                latest                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  first  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();	      	compilable	  [FE]  AssertionFailedError	27224	1
137935	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
137936	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
137937	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
137938	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  any,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
75507	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  4;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  %  4;	      	compilable	  [FE]  AssertionFailedError	12585	1
75508	[BUG]  [BUGGY]  this.minY  =  Double.NaN  %  4;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  4;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  %  4;	      	compilable	  [FE]  AssertionFailedError	12585	1
78301	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  *  2;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  *  2;	      	compilable	  [FE]  AssertionFailedError	13051	1
78302	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  *  2;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  *  2;	      	compilable	  [FE]  AssertionFailedError	13051	1
78309	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  *  3;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  *  3;	  this.maxY    =    Double.NaN    *    2;        	compilable	  [FE]  AssertionFailedError	13052	1
78310	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  *  3;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  *  3;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  *  3;	  this.maxY    =    Double.NaN    *    2;        	compilable	  [FE]  AssertionFailedError	13052	1
138151	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
138152	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
138152	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
138153	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway....    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
138153	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway.....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway.....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
138154	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway.....    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway.....  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway.....	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway....        	compilable	  [FE]  AssertionFailedError	23026	1
137881	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);	      	compilable	  [FE]  AssertionFailedError	22981	1
137882	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);	      	compilable	  [FE]  AssertionFailedError	22981	1
137882	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }	      	compilable	  [FE]  AssertionFailedError	22981	1
137883	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }	      	compilable	  [FE]  AssertionFailedError	22981	1
137883	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  ;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  ;	      	compilable	  [FE]  AssertionFailedError	22981	1
137884	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  ;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  ;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  refreshAgedItems(false);  &  ;  }  ;	      	compilable	  [FE]  AssertionFailedError	22981	1
78320	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  1D;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  1D;	  this.maxY    =    Double.NaN    -    1D;        	compilable	  [FE]  AssertionFailedError	13054	1
78321	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  1D;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  1D;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  1D;	  this.maxY    =    Double.NaN    -    1D;        	compilable	  [FE]  AssertionFailedError	13054	1
134007	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              b.append(               "the                time                period                               ");                b.append(item.getPeriod().toString());                b.append(               "                but                the                series                already                contains                an                observation               ");                b.append(               "                for                that                time                period.                Duplicates                are                not                               ");                b.append(               "permitted.Try                using                the                addOrUpdate()                method.               ");                throw                new                SeriesException(b.toString());                }                }                }                if                (added)                {                                              [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.remove(item);  }  [BUGGY]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                if                (notify)                {                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	add	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.remove(item);  }	      	compilable	  [FE]  AssertionFailedError	22335	1
134008	[BUG]  [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.remove(item);  }    [FE]  AssertionFailedError  [CONTEXT]                                              b.append(               "the                time                period                               ");                b.append(item.getPeriod().toString());                b.append(               "                but                the                series                already                contains                an                observation               ");                b.append(               "                for                that                time                period.                Duplicates                are                not                               ");                b.append(               "permitted.Try                using                the                addOrUpdate()                method.               ");                throw                new                SeriesException(b.toString());                }                }                }                if                (added)                {                                              [BUGGY]  if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.remove(item);  }  [BUGGY]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                if                (notify)                {                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	627	627	1	replace	if(this.data!=  null)  {  updateBoundsForAddedItem(item);  }  else  {  this.data.remove(item);  }	      	compilable	  [FE]  AssertionFailedError	22335	1
137929	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
137930	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
137931	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
137932	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anybody,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anybody,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
195127	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	32522	1
195128	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	32522	1
75693	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  /  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  2  /  1;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
75694	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2  /  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  /  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  2  /  1;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
64017	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.minY  =  minY  +  1;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.minY  =  minY  +  1;	      	compilable	  [FE]  AssertionFailedError	10670	1
64018	[BUG]  [BUGGY]  this.minY  =  minY  +  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.minY  =  minY  +  1;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.minY  =  minY  +  1;	      	compilable	  [FE]  AssertionFailedError	10670	1
194673	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	32446	1
194674	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isNaN(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isInfinite(b)||    Double.isNaN(a)||    Double.isNaN(b))    {        	compilable	  [FE]  AssertionFailedError	32446	1
78279	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  3;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  3;	  this.maxY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	13047	1
78280	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  3;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  3;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  3;	  this.maxY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	13047	1
205537	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a))    {        	compilable	  [FE]  AssertionFailedError	34257	1
205538	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a))    {        	compilable	  [FE]  AssertionFailedError	34257	1
25143	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                                              [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item... "  +  this.data.toString());  [BUGGY]                                              }                }                }                return                copy;                }                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item... "  +  this.data.toString());	      	compilable	  [FE]  AssertionFailedError	4191	1
25144	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item... "  +  this.data.toString());    [FE]  AssertionFailedError  [CONTEXT]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                                              [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item... "  +  this.data.toString());  [BUGGY]                                              }                }                }                return                copy;                }                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item... "  +  this.data.toString());	      	compilable	  [FE]  AssertionFailedError	4191	1
137893	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);	      	compilable	  [FE]  AssertionFailedError	22983	1
137894	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);	      	compilable	  [FE]  AssertionFailedError	22983	1
137895	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;  Toujours!  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;  Toujours!	      	compilable	  [FE]  AssertionFailedError	22983	1
137896	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;  Toujours!    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;  Toujours!  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;  Toujours!	      	compilable	  [FE]  AssertionFailedError	22983	1
137683	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	22948	1
137684	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway...        	compilable	  [FE]  AssertionFailedError	22948	1
137925	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22988	1
137926	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22988	1
104203	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)||  item.getClass().isAssignableFrom(c))  {  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)||  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	17368	1
104204	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)||  item.getClass().isAssignableFrom(c))  {    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)||  item.getClass().isAssignableFrom(c))  {  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)||  item.getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	17368	1
75687	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  2  +  1;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
75688	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  2  +  1;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
78272	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  2L;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  2L;	  this.maxY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	13046	1
78273	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  2L;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  2L;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  2L;	  this.maxY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	13046	1
194923	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32488	1
194924	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)&&  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32488	1
78062	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  +  2;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  +  2;	  this.maxY    =    Double.NaN    +    1;        	compilable	  [FE]  AssertionFailedError	13011	1
78063	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  +  2;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  +  2;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  +  2;	  this.maxY    =    Double.NaN    +    1;        	compilable	  [FE]  AssertionFailedError	13011	1
75692	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  3;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  3;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
75693	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  3;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  3;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  3;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
75471	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  10;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  %  10;	      	compilable	  [FE]  AssertionFailedError	12579	1
75472	[BUG]  [BUGGY]  this.minY  =  Double.NaN  %  10;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  10;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  %  10;	      	compilable	  [FE]  AssertionFailedError	12579	1
205495	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205496	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  <=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205497	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  >=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  >=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205498	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  >=  0.0  &&  b  <=  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  >=  0.0  &&  b  <=  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||(a  >=  0.0  &&  b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205071	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34179	1
205072	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isInfinite(a))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34179	1
140487	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                                              [BUGGY]  if(!added)  {  if(!notify)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                                              fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!added)  {  if(!notify)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(notify)    {    if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	23415	1
140488	[BUG]  [BUGGY]  if(!added)  {  if(!notify)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }    [FE]  AssertionFailedError  [CONTEXT]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                                              [BUGGY]  if(!added)  {  if(!notify)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                                              fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!added)  {  if(!notify)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(notify)    {    if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	23415	1
8553	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries                createCopy(int                start,                int                end)                throws                CloneNotSupportedException                {                if                (start                <                0)                {                throw                new                IllegalArgumentException(               "Requires                start                >=                0.               ");                }                if                (end                <                start)                {                throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                                              [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  4);  [BUGGY]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start  +  4);	  copy.data    =    new    java.util.ArrayList(end    +    1);        	compilable	  [FE]  AssertionFailedError	1426	1
8554	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  4);    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries                createCopy(int                start,                int                end)                throws                CloneNotSupportedException                {                if                (start                <                0)                {                throw                new                IllegalArgumentException(               "Requires                start                >=                0.               ");                }                if                (end                <                start)                {                throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                                              [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  4);  [BUGGY]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start  +  4);	  copy.data    =    new    java.util.ArrayList(end    +    1);        	compilable	  [FE]  AssertionFailedError	1426	1
22335	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                copy.data                =                new                java.util.ArrayList();                if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                                              [BUGGY]  if(clone!=  null)  {  copy.add(clone);  }  else  if(item!=  null)  {  copy.add(item);  }  [BUGGY]                                              copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                }                }                }                return                copy;                }                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1064	1064	1	add	if(clone!=  null)  {  copy.add(clone);  }  else  if(item!=  null)  {  copy.add(item);  }	      	compilable	  [FE]  AssertionFailedError	3723	1
22336	[BUG]  [BUGGY]  if(clone!=  null)  {  copy.add(clone);  }  else  if(item!=  null)  {  copy.add(item);  }    [FE]  AssertionFailedError  [CONTEXT]                                              throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                copy.data                =                new                java.util.ArrayList();                if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                                              [BUGGY]  if(clone!=  null)  {  copy.add(clone);  }  else  if(item!=  null)  {  copy.add(item);  }  [BUGGY]                                              copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                }                }                }                return                copy;                }                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1064	1064	1	replace	if(clone!=  null)  {  copy.add(clone);  }  else  if(item!=  null)  {  copy.add(item);  }	      	compilable	  [FE]  AssertionFailedError	3723	1
75506	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  12;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  %  12;	      	compilable	  [FE]  AssertionFailedError	12585	1
75507	[BUG]  [BUGGY]  this.minY  =  Double.NaN  %  12;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  %  12;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  %  12;	      	compilable	  [FE]  AssertionFailedError	12585	1
140487	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                                              [BUGGY]  if(!notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                                              fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(notify)    {    if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	23415	1
140488	[BUG]  [BUGGY]  if(!notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }    [FE]  AssertionFailedError  [CONTEXT]                                              updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                removeAgedItems(false);//                remove                old                items                if                necessary,                but                                                                              [BUGGY]  if(!notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]                                              fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!notify)  {  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  if(notify)    {    if(!added)    {    throw    new    SeriesException(   "TimeSeriesDataItem    item    does    not    exist:   "    +    this);    }        	compilable	  [FE]  AssertionFailedError	23415	1
75693	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  12;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  12;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
75694	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  12;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  12;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  12;	  this.minY    =    Double.NaN    *    0;        	compilable	  [FE]  AssertionFailedError	12616	1
160971	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                removeAgedItems(boolean                notify)                {                                                                              [BUGGY]  int  count  =  getItemCount()  -  3;  [BUGGY]                                              if                (getItemCount()                >                1)                {                long                latest                =                getTimePeriod(getItemCount()                -                1).getSerialIndex();                boolean                removed                =                false;                while                ((latest                -                getTimePeriod(0).getSerialIndex())                >                this.maximumItemAge)                {                this.data.remove(0);                removed                =                true;                }                if                (removed)                {                findBoundsByIteration();                if                (notify)                {                [CLASS]                TimeSeries                [METHOD]                removeAgedItems                [RETURN_TYPE]                void                                boolean                notify                [VARIABLES]                boolean                notify                removed                double                maxY                minY                oldY                value                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                latest                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount()  -  3;	      	compilable	  [FE]  AssertionFailedError	26829	1
160972	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  3;    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                removeAgedItems(boolean                notify)                {                                                                              [BUGGY]  int  count  =  getItemCount()  -  3;  [BUGGY]                                              if                (getItemCount()                >                1)                {                long                latest                =                getTimePeriod(getItemCount()                -                1).getSerialIndex();                boolean                removed                =                false;                while                ((latest                -                getTimePeriod(0).getSerialIndex())                >                this.maximumItemAge)                {                this.data.remove(0);                removed                =                true;                }                if                (removed)                {                findBoundsByIteration();                if                (notify)                {                [CLASS]                TimeSeries                [METHOD]                removeAgedItems                [RETURN_TYPE]                void                                boolean                notify                [VARIABLES]                boolean                notify                removed                double                maxY                minY                oldY                value                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                latest                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount()  -  3;	      	compilable	  [FE]  AssertionFailedError	26829	1
64016	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.minY  =  maxY;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.minY  =  maxY;	      	compilable	  [FE]  AssertionFailedError	10670	1
64017	[BUG]  [BUGGY]  this.minY  =  maxY;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  this.minY  =  maxY;  [BUGGY]                                              this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.minY  =  maxY;	      	compilable	  [FE]  AssertionFailedError	10670	1
194923	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32488	1
194924	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32488	1
195177	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a))    {        	compilable	  [FE]  AssertionFailedError	32530	1
195178	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b))  {	  if(Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a))    {        	compilable	  [FE]  AssertionFailedError	32530	1
75513	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  8;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  8;	  this.minY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	12586	1
75514	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  8;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  /  8;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  8;	  this.minY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	12586	1
137931	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  as  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  as  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
137932	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  as  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  as  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  as  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22989	1
205497	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205498	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	34250	1
205508	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34252	1
205509	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	34252	1
75687	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  -  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  2  -  1;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
75688	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2  -  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  -  1;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  2  -  1;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
198583	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                if                (Double.isNaN(b))                {                return                a;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]                                              return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	33098	1
198584	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                if                (Double.isNaN(b))                {                return                a;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]                                              return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	33098	1
198584	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                if                (Double.isNaN(b))                {                return                a;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                                              return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	33098	1
198585	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                if                (Double.isNaN(b))                {                return                a;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]                                              return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	      	compilable	  [FE]  AssertionFailedError	33098	1
104204	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().isAssignableFrom(c))  {  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	17368	1
104205	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().isAssignableFrom(c))  {    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().isAssignableFrom(c))  {  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().isAssignableFrom(c))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c)&&    item.getClass().isAssignableFrom(c))    {        	compilable	  [FE]  AssertionFailedError	17368	1
78267	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  2  +  1;	      	compilable	  [FE]  AssertionFailedError	13045	1
78268	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  2  +  1;	      	compilable	  [FE]  AssertionFailedError	13045	1
78302	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  *  2  +  1;	      	compilable	  [FE]  AssertionFailedError	13051	1
78303	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.minY  =  Double.NaN  *  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  *  2  +  1;	      	compilable	  [FE]  AssertionFailedError	13051	1
194667	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a  +  1))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a  +  1))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	32445	1
194668	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a  +  1))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a  +  1))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a  +  1))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	32445	1
194739	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32457	1
194740	[BUG]  [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isInfinite(a)||  Double.isNaN(b)||  Double.isInfinite(a)||  Double.isInfinite(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isInfinite(a)||    Double.isInfinite(b))    {        	compilable	  [FE]  AssertionFailedError	32457	1
8541	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries                createCopy(int                start,                int                end)                throws                CloneNotSupportedException                {                if                (start                <                0)                {                throw                new                IllegalArgumentException(               "Requires                start                >=                0.               ");                }                if                (end                <                start)                {                throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                                              [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  2);  [BUGGY]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(end  +  2);	      	compilable	  [FE]  AssertionFailedError	1424	1
8542	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  2);    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries                createCopy(int                start,                int                end)                throws                CloneNotSupportedException                {                if                (start                <                0)                {                throw                new                IllegalArgumentException(               "Requires                start                >=                0.               ");                }                if                (end                <                start)                {                throw                new                IllegalArgumentException(               "Requires                start                <=                end.               ");                }                TimeSeries                copy                =                (TimeSeries)                super.clone();                                              [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  2);  [BUGGY]                                              if                (this.data.size()                >                0)                {                for                (int                index                =                start;                index                <=                end;                index++)                {                TimeSeriesDataItem                item                =                (TimeSeriesDataItem)                this.data.get(index);                TimeSeriesDataItem                clone                =                (TimeSeriesDataItem)                item.clone();                try                {                copy.add(clone);                }                catch                (SeriesException                e)                {                e.printStackTrace();                [CLASS]                TimeSeries                [METHOD]                createCopy                [RETURN_TYPE]                TimeSeries                                int                start                int                end                [VARIABLES]                TimeSeries                copy                boolean                double                maxY                minY                oldY                value                yy                TimeSeriesDataItem                clone                item                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                SeriesException                e                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                i                index                maximum                maximumItemCount                start                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(end  +  2);	      	compilable	  [FE]  AssertionFailedError	1424	1
78273	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  2  +  1;	  this.maxY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	13046	1
78274	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  2  +  1;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  2  +  1;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  2  +  1;	  this.maxY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	13046	1
75687	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  +  4;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  +  4;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
75688	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  4;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                                              [BUGGY]  this.minY  =  Double.NaN  +  4;  [BUGGY]                                              this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  +  4;	  this.minY    =    Double.NaN    /    2;        	compilable	  [FE]  AssertionFailedError	12615	1
195129	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	32522	1
195130	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                minIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.min(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                minIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0  &&  b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(b)||(a    <=    0.0    &&    b    <=    0.0))    {        	compilable	  [FE]  AssertionFailedError	32522	1
78278	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  12;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  12;	  this.maxY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	13047	1
78279	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  12;    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                this.range                =                range;                this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                                              [BUGGY]  this.maxY  =  Double.NaN  /  12;  [BUGGY]                                              }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  12;	  this.maxY    =    Double.NaN    /    4;        	compilable	  [FE]  AssertionFailedError	13047	1
205077	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)&&    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	34180	1
205078	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {    [FE]  AssertionFailedError  [CONTEXT]                                              private                double                maxIgnoreNaN(double                a,                double                b)                {                if                (Double.isNaN(a))                {                return                b;                }                else                {                                              [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]                                              return                a;                }                else                {                return                Math.max(a,                b);                }                }                }                [CLASS]                TimeSeries                [METHOD]                maxIgnoreNaN                [RETURN_TYPE]                double                                double                a                double                b                [VARIABLES]                boolean                double                a                b                maxY                minY                oldY                value                y                yy                Class                c                periodClass                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                msg                old                range                long                index                latest                maximumItemAge                periods                serialVersionUID                int                count                end                endIndex                i                index                maximum                maximumItemCount                result                start                startIndex                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)&&    Double.isNaN(a))    {        	compilable	  [FE]  AssertionFailedError	34180	1
104445	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.equals(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.equals(c))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	17408	1
104446	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.equals(c))  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(!this.timePeriodClass.equals(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.equals(c))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	17408	1
104121	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(this.timePeriodClass.equals( "  + "))  {  throw  new  SeriesException( " ");  }  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(this.timePeriodClass.equals( "  + "))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	17354	1
104122	[BUG]  [BUGGY]  else  if(this.timePeriodClass.equals( "  + "))  {  throw  new  SeriesException( " ");  }    [FE]  AssertionFailedError  [CONTEXT]                                              public                void                add(TimeSeriesDataItem                item,                boolean                notify)                {                if                (item                ==                null)                {                throw                new                IllegalArgumentException(               "Null                'item'                argument.               ");                }                item                =                (TimeSeriesDataItem)                item.clone();                Class                c                =                item.getPeriod().getClass();                if                (this.timePeriodClass                ==                null)                {                this.timePeriodClass                =                c;                }                                              [BUGGY]  else  if(this.timePeriodClass.equals( "  + "))  {  throw  new  SeriesException( " ");  }  [BUGGY]                                              StringBuffer                b                =                new                StringBuffer();                b.append(               "You                are                trying                to                add                data                where                the                time                period                class                               ");                b.append(               "is                               ");                b.append(item.getPeriod().getClass().getName());                b.append(               ",                but                the                TimeSeries                is                expecting                an                instance                of                               ");                b.append(this.timePeriodClass.getName());                b.append(               ".               ");                throw                new                SeriesException(b.toString());                }                                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(this.timePeriodClass.equals( "  + "))  {  throw  new  SeriesException( " ");  }	      	compilable	  [FE]  AssertionFailedError	17354	1
62684	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  if(range!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.range  =  range;  }  [BUGGY]                                              this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	if(range!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.range  =  range;  }	      	compilable	  [FE]  AssertionFailedError	10448	1
62685	[BUG]  [BUGGY]  if(range!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.range  =  range;  }    [FE]  AssertionFailedError  [CONTEXT]                                              public                TimeSeries(Comparable                name,                String                domain,                String                range)                {                super(name);                this.domain                =                domain;                                              [BUGGY]  if(range!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.range  =  range;  }  [BUGGY]                                              this.timePeriodClass                =                null;                this.data                =                new                java.util.ArrayList();                this.maximumItemCount                =                Integer.MAX_VALUE;                this.maximumItemAge                =                Long.MAX_VALUE;                this.minY                =                Double.NaN;                this.maxY                =                Double.NaN;                }                [CLASS]                TimeSeries                [METHOD]                <init>                [RETURN_TYPE]                String)                                Comparable                name                String                domain                String                range                [VARIABLES]                Comparable                name                boolean                double                maxY                minY                Class                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                domain                range                long                maximumItemAge                serialVersionUID                int                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	if(range!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  else  {  this.range  =  range;  }	      	compilable	  [FE]  AssertionFailedError	10448	1
137936	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  as  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  as  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
137937	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  as  that  //  happens  next  anyway;    [FE]  AssertionFailedError  [CONTEXT]                                              }                }                if                (added)                {                updateBoundsForAddedItem(item);                                if                (getItemCount()                >                this.maximumItemCount)                {                TimeSeriesDataItem                d                =                (TimeSeriesDataItem)                this.data.remove(0);                updateBoundsForRemovedItem(d);                }                                              [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  as  that  //  happens  next  anyway;  [BUGGY]                                                                              if                (notify)                {                fireSeriesChanged();                }                }                }                [CLASS]                TimeSeries                [METHOD]                add                [RETURN_TYPE]                void                                TimeSeriesDataItem                item                boolean                notify                [VARIABLES]                StringBuffer                b                boolean                added                notify                double                maxY                minY                TimeSeriesDataItem                d                item                Class                c                timePeriodClass                List                data                String                DEFAULT_DOMAIN_DESCRIPTION                DEFAULT_RANGE_DESCRIPTION                description                domain                old                range                RegularTimePeriod                last                long                maximumItemAge                periods                serialVersionUID                int                count                i                index                maximum                maximumItemCount                                	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  any,  as  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    any,    because    that    //    happens    next    anyway;        	compilable	  [FE]  AssertionFailedError	22990	1
