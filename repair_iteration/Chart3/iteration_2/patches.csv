bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
22981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
22982	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
26829	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {        [BUGGY]  int  count  =  getItemCount()  -  2;  [BUGGY]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount()  -  2;	  	compilable	  [FE]  AssertionFailedError	4472	1
26830	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  2;  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {        [BUGGY]  int  count  =  getItemCount()  -  2;  [BUGGY]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount()  -  2;	  	compilable	  [FE]  AssertionFailedError	4472	1
11018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }  [BUGGY]      this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }	  	compilable	  [FE]  AssertionFailedError	1837	1
11019	[BUG]  [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;      [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }  [BUGGY]      this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  if(name!=  null)  {  this.data.add(name);  }	  	compilable	  [FE]  AssertionFailedError	1837	1
12584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  2;	  this.minY    =    Double.NaN    -    2;    	compilable	  [FE]  AssertionFailedError	2098	1
12585	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  2;	  this.minY    =    Double.NaN    -    2;    	compilable	  [FE]  AssertionFailedError	2098	1
735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  System.err.println( "Failed  to  add  cloned  item...   ");  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	add	System.err.println( "Failed  to  add  cloned  item...   ");	  	compilable	  [FE]  AssertionFailedError	123	1
736	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  cloned  item...   ");  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }      [BUGGY]  System.err.println( "Failed  to  add  cloned  item...   ");  [BUGGY]      if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	replace	System.err.println( "Failed  to  add  cloned  item...   ");	  	compilable	  [FE]  AssertionFailedError	123	1
22945	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    necessary,    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3825	1
22946	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    necessary,    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3825	1
10233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	1706	1
10234	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	1706	1
10202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	1701	1
10203	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	1701	1
19917	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {      [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	add	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);	  	compilable	  [FE]  AssertionFailedError	3320	1
19918	[BUG]  [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);  [FE]  AssertionFailedError  [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {      [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	replace	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  2);	  	compilable	  [FE]  AssertionFailedError	3320	1
22939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway	  	compilable	  [FE]  AssertionFailedError	3824	1
22940	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway	  	compilable	  [FE]  AssertionFailedError	3824	1
22940	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway	  	compilable	  [FE]  AssertionFailedError	3824	1
22941	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway	  	compilable	  [FE]  AssertionFailedError	3824	1
22981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
22982	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
13046	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  1L;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
13047	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  1L;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  1L;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
33098	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
33099	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
33099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
33100	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
13039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  1;	  	compilable	  [FE]  AssertionFailedError	2174	1
13040	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  1;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  1;	  	compilable	  [FE]  AssertionFailedError	2174	1
13040	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  2;	  	compilable	  [FE]  AssertionFailedError	2174	1
13041	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  2;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  2;	  	compilable	  [FE]  AssertionFailedError	2174	1
13039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  -  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  -  1L;	  	compilable	  [FE]  AssertionFailedError	2174	1
13040	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  1L;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  -  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  -  1L;	  	compilable	  [FE]  AssertionFailedError	2174	1
12573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  +  2;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  +  2;	  	compilable	  [FE]  AssertionFailedError	2096	1
12574	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  2;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  +  2;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  +  2;	  	compilable	  [FE]  AssertionFailedError	2096	1
4184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();      [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item...   "  +  clone.toString());  [BUGGY]      }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item...   "  +  clone.toString());	  	compilable	  [FE]  AssertionFailedError	698	1
4185	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item...   "  +  clone.toString());  [FE]  AssertionFailedError  [CONTEXT]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();      [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item...   "  +  clone.toString());  [BUGGY]      }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item...   "  +  clone.toString());	  	compilable	  [FE]  AssertionFailedError	698	1
10670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;      [BUGGY]  this.maxY  =  minY;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.maxY  =  minY;	  this.maxY    =    maxY;    	compilable	  [FE]  AssertionFailedError	1779	1
10671	[BUG]  [BUGGY]  this.maxY  =  minY;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;      [BUGGY]  this.maxY  =  minY;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.maxY  =  minY;	  this.maxY    =    maxY;    	compilable	  [FE]  AssertionFailedError	1779	1
11066	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;      [BUGGY]  if(this.timePeriodClass!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [BUGGY]      this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(this.timePeriodClass!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }	  if(this.domain!=    null)    {    this.timePeriodClass    =    getTimePeriodClass();    }    	compilable	  [FE]  AssertionFailedError	1845	1
11067	[BUG]  [BUGGY]  if(this.timePeriodClass!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;      [BUGGY]  if(this.timePeriodClass!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [BUGGY]      this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(this.timePeriodClass!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }	  if(this.domain!=    null)    {    this.timePeriodClass    =    getTimePeriodClass();    }    	compilable	  [FE]  AssertionFailedError	1845	1
13045	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  2;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  2;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
13046	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  2;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  2;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  2;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
13046	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  4;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  4;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
13047	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  4;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  4;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  4;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
10021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  AssertionFailedError	1671	1
10022	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  AssertionFailedError	1671	1
5912	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  int  count  =  getMaximumItemCount();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	int  count  =  getMaximumItemCount();	  	compilable	  [FE]  AssertionFailedError	986	1
5913	[BUG]  [BUGGY]  int  count  =  getMaximumItemCount();  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  int  count  =  getMaximumItemCount();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	int  count  =  getMaximumItemCount();	  	compilable	  [FE]  AssertionFailedError	986	1
5913	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  double  maxY  =  getMaxY();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	double  maxY  =  getMaxY();	  	compilable	  [FE]  AssertionFailedError	986	1
5914	[BUG]  [BUGGY]  double  maxY  =  getMaxY();  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  double  maxY  =  getMaxY();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	double  maxY  =  getMaxY();	  	compilable	  [FE]  AssertionFailedError	986	1
13010	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  +  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	2169	1
13011	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  +  1;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  +  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	2169	1
10663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;      [BUGGY]  this.minY  =  minY;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.minY  =  minY;	  	compilable	  [FE]  AssertionFailedError	1778	1
10664	[BUG]  [BUGGY]  this.minY  =  minY;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;      [BUGGY]  this.minY  =  minY;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.minY  =  minY;	  	compilable	  [FE]  AssertionFailedError	1778	1
12614	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  *  1;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  *  1;	  this.minY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2103	1
12615	[BUG]  [BUGGY]  this.minY  =  Double.NaN  *  1;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  *  1;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  *  1;	  this.minY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2103	1
15349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()  ==  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	if(item  ==  null)  {  if(item.getPeriod().getClass()  ==  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }	  item    =(TimeSeriesDataItem)item.clone();    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.       ");    }    	compilable	  [FE]  AssertionFailedError	2559	1
15350	[BUG]  [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()  ==  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()  ==  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	if(item  ==  null)  {  if(item.getPeriod().getClass()  ==  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }	  item    =(TimeSeriesDataItem)item.clone();    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.       ");    }    	compilable	  [FE]  AssertionFailedError	2559	1
15350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()!=  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	if(item  ==  null)  {  if(item.getPeriod().getClass()!=  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }	  item    =(TimeSeriesDataItem)item.clone();    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.       ");    }    	compilable	  [FE]  AssertionFailedError	2559	1
15351	[BUG]  [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()!=  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  if(item.getPeriod().getClass()!=  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	if(item  ==  null)  {  if(item.getPeriod().getClass()!=  this.timePeriodClass)  {  throw  new  IllegalArgumentException( " ");  }	  item    =(TimeSeriesDataItem)item.clone();    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.       ");    }    	compilable	  [FE]  AssertionFailedError	2559	1
5911	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	int  maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  AssertionFailedError	986	1
5912	[BUG]  [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	int  maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  AssertionFailedError	986	1
5913	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  double  minY  =  getMaxY();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	double  minY  =  getMaxY();	  	compilable	  [FE]  AssertionFailedError	986	1
5914	[BUG]  [BUGGY]  double  minY  =  getMaxY();  [FE]  AssertionFailedError  [CONTEXT]      public  double  getMinY()  {      [BUGGY]  double  minY  =  getMaxY();  [BUGGY]      return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	double  minY  =  getMaxY();	  	compilable	  [FE]  AssertionFailedError	986	1
15345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2558	1
15346	[BUG]  [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2558	1
17360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
17361	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
17361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( "The  TimeSeries  is  expecting  an  instance  of ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( "The  TimeSeries  is  expecting  an  instance  of ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
17362	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( "The  TimeSeries  is  expecting  an  instance  of ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( "The  TimeSeries  is  expecting  an  instance  of ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  throw  new  SeriesException( "The  TimeSeries  is  expecting  an  instance  of ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
13046	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  10;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  10;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
13047	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  10;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.maxY  =  Double.NaN  /  10;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  10;	  this.maxY    =    Double.NaN    /    1;    	compilable	  [FE]  AssertionFailedError	2175	1
27729	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();      [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]      boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	4622	1
27730	[BUG]  [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();      [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]      boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  min  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	4622	1
32444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)&&  Double.isNaN(b))  {  [BUGGY]      return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)&&  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	5408	1
32445	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)&&  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)&&  Double.isNaN(b))  {  [BUGGY]      return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)&&  Double.isNaN(b))  {	  if(Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	5408	1
29601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();      [BUGGY]  if(yN!=  null)  {  yN  =  new  Double(yN.doubleValue());  }  [BUGGY]      if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  yN  =  new  Double(yN.doubleValue());  }	  	compilable	  [FE]  AssertionFailedError	4934	1
29602	[BUG]  [BUGGY]  if(yN!=  null)  {  yN  =  new  Double(yN.doubleValue());  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();      [BUGGY]  if(yN!=  null)  {  yN  =  new  Double(yN.doubleValue());  }  [BUGGY]      if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  yN  =  new  Double(yN.doubleValue());  }	  	compilable	  [FE]  AssertionFailedError	4934	1
13041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  /  2  +  1;	  	compilable	  [FE]  AssertionFailedError	2174	1
13042	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  /  2  +  1;	  	compilable	  [FE]  AssertionFailedError	2174	1
12608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  2  +  1;	  	compilable	  [FE]  AssertionFailedError	2102	1
12609	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  2  +  1;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  2  +  1;	  	compilable	  [FE]  AssertionFailedError	2102	1
13041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  -  2L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  -  2L;	  	compilable	  [FE]  AssertionFailedError	2174	1
13042	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  2L;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  -  2L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  -  2L;	  	compilable	  [FE]  AssertionFailedError	2174	1
34814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
34815	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
34815	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
34816	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
12609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  10;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  10;	  	compilable	  [FE]  AssertionFailedError	2102	1
12610	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  10;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;      [BUGGY]  this.minY  =  Double.NaN  /  10;  [BUGGY]      this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  10;	  	compilable	  [FE]  AssertionFailedError	2102	1
17360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
17361	[BUG]  [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(this.timePeriodClass.equals( " "))  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2894	1
10028	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;	  this.domain    =    domain;    this.timePeriodClass    =    null;    	compilable	  [FE]  AssertionFailedError	1672	1
10029	[BUG]  [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);      [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]      this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;	  this.domain    =    domain;    this.timePeriodClass    =    null;    	compilable	  [FE]  AssertionFailedError	1672	1
27224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {      [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]      long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	4538	1
27225	[BUG]  [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {      [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]      long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  first  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	4538	1
15345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2558	1
15346	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {      [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2558	1
33097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
33098	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.max(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	5517	1
13041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  +  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  +  1L;	  	compilable	  [FE]  AssertionFailedError	2174	1
13042	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  1L;  [FE]  AssertionFailedError  [CONTEXT]      public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;      [BUGGY]  this.minY  =  Double.NaN  +  1L;  [BUGGY]      }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  +  1L;	  	compilable	  [FE]  AssertionFailedError	2174	1
23402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but        [BUGGY]  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]      fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  	compilable	  [FE]  AssertionFailedError	3901	1
23403	[BUG]  [BUGGY]  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [FE]  AssertionFailedError  [CONTEXT]      updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but        [BUGGY]  if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }  [BUGGY]      fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!added)  {  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  exist: "  +  this);  }	  	compilable	  [FE]  AssertionFailedError	3901	1
17355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2893	1
17356	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'item'  argument.     ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }      [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }  [BUGGY]      StringBuffer  b  =  new  StringBuffer();  b.append(     "You  are  trying  to  add  data  where  the  time  period  class       ");  b.append(     "is       ");  b.append(item.getPeriod().getClass().getName());  b.append(     ",  but  the  TimeSeries  is  expecting  an  instance  of       ");  b.append(this.timePeriodClass.getName());  b.append(     ".     ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c))  {  throw  new  SeriesException( " ");  }	  	compilable	  [FE]  AssertionFailedError	2893	1
34815	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
34816	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]      return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	5803	1
22982	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
22983	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]      }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }      [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]        if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(false);//    remove    old    items    if    needed,    but    //    don't    notify    anybody,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	3831	1
33098	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  1;  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  1;  }	  	compilable	  [FE]  AssertionFailedError	5517	1
33099	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  1;  }  [FE]  AssertionFailedError  [CONTEXT]      private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {      [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  1;  }  [BUGGY]      return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  1;  }	  	compilable	  [FE]  AssertionFailedError	5517	1
