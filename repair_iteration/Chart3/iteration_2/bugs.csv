bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
5407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5408	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5409	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
2139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]    this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;	  	compilable	  [FE]  AssertionFailedError	357	1
2140	[BUG]  [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  [BUGGY]    this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;	  	compilable	  [FE]  AssertionFailedError	357	1
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();    [BUGGY]  if(this.data.size()  >  0  &&  this.data.size()  >  0)  {  [BUGGY]    for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	add	if(this.data.size()  >  0  &&  this.data.size()  >  0)  {	  if(this.data.size()    >    1)    {    	compilable	  [FE]  AssertionFailedError	51	1
303	[BUG]  [BUGGY]  if(this.data.size()  >  0  &&  this.data.size()  >  0)  {  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();    [BUGGY]  if(this.data.size()  >  0  &&  this.data.size()  >  0)  {  [BUGGY]    for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1058	1058	1	replace	if(this.data.size()  >  0  &&  this.data.size()  >  0)  {	  if(this.data.size()    >    1)    {    	compilable	  [FE]  AssertionFailedError	51	1
1550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);    [BUGGY]  this.data.remove(name);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	add	this.data.remove(name);	  	compilable	  [FE]  AssertionFailedError	259	1
1551	[BUG]  [BUGGY]  this.data.remove(name);  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);    [BUGGY]  this.data.remove(name);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	replace	this.data.remove(name);	  	compilable	  [FE]  AssertionFailedError	259	1
1551	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);    [BUGGY]  this.data.clear();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	add	this.data.clear();	  	compilable	  [FE]  AssertionFailedError	259	1
1552	[BUG]  [BUGGY]  this.data.clear();  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);    [BUGGY]  this.data.clear();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	170	170	1	replace	this.data.clear();	  	compilable	  [FE]  AssertionFailedError	259	1
4472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount()  -  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount()  -  1;	  	compilable	  [FE]  AssertionFailedError	746	1
4473	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  1;  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount()  -  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount()  -  1;	  	compilable	  [FE]  AssertionFailedError	746	1
4473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount()  +  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	add	int  count  =  getItemCount()  +  1;	  	compilable	  [FE]  AssertionFailedError	746	1
4474	[BUG]  [BUGGY]  int  count  =  getItemCount()  +  1;  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount()  +  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	877	877	1	replace	int  count  =  getItemCount()  +  1;	  	compilable	  [FE]  AssertionFailedError	746	1
2102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  /  1;	  this.minY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	351	1
2103	[BUG]  [BUGGY]  this.minY  =  Double.NaN  /  1;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  /  1;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  /  1;	  this.minY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	351	1
3829	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
3830	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
3830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
3831	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  but  //  don't  notify  anybody,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
2558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }	  	compilable	  [FE]  AssertionFailedError	427	1
2559	[BUG]  [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	item  =(TimeSeriesDataItem)item.clone();  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }	  	compilable	  [FE]  AssertionFailedError	427	1
2559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	add	if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }	  	compilable	  [FE]  AssertionFailedError	427	1
2560	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	576	576	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }	  	compilable	  [FE]  AssertionFailedError	427	1
3901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!added)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	add	if(!added)  {	  if(!notify)    {    	compilable	  [FE]  AssertionFailedError	651	1
3902	[BUG]  [BUGGY]  if(!added)  {  [FE]  AssertionFailedError  [CONTEXT]    updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!added)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	637	637	1	replace	if(!added)  {	  if(!notify)    {    	compilable	  [FE]  AssertionFailedError	651	1
5270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
5271	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <  0.0))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)||(b  <  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
4544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  duration  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  duration  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	758	1
4545	[BUG]  [BUGGY]  long  duration  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  duration  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  duration  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	758	1
4545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  duration  =  getTimePeriod(1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  duration  =  getTimePeriod(1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	758	1
4546	[BUG]  [BUGGY]  long  duration  =  getTimePeriod(1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  duration  =  getTimePeriod(1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  duration  =  getTimePeriod(1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	758	1
1706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  this.domain    =    domain;    this.range    =    range;    	compilable	  [FE]  AssertionFailedError	285	1
1707	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  this.domain    =    domain;    this.range    =    range;    	compilable	  [FE]  AssertionFailedError	285	1
2167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.minY  =  Double.NaN  -  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  -  1;	  	compilable	  [FE]  AssertionFailedError	362	1
2168	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  1;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.minY  =  Double.NaN  -  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  -  1;	  	compilable	  [FE]  AssertionFailedError	362	1
2894	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }    [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {	  else    if(!this.timePeriodClass.isAssignableFrom(c))    {    	compilable	  [FE]  AssertionFailedError	483	1
2895	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }    [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  notify)  {	  else    if(!this.timePeriodClass.isAssignableFrom(c))    {    	compilable	  [FE]  AssertionFailedError	483	1
2174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.maxY  =  Double.NaN  /  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  /  1;	  this.maxY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	363	1
2175	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  /  1;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.maxY  =  Double.NaN  /  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  /  1;	  this.maxY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	363	1
5408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5409	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
5697	[BUG]  [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(b)||  Double.isNaN(a))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(b)||  Double.isNaN(a))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
5702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	951	1
5703	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	951	1
1778	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.maxY  =  maxY;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	add	this.maxY  =  maxY;	  	compilable	  [FE]  AssertionFailedError	297	1
1779	[BUG]  [BUGGY]  this.maxY  =  maxY;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.maxY  =  maxY;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	188	188	1	replace	this.maxY  =  maxY;	  	compilable	  [FE]  AssertionFailedError	297	1
1671	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  null;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	this.domain  =  domain;  this.timePeriodClass  =  null;	  	compilable	  [FE]  AssertionFailedError	279	1
1672	[BUG]  [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  null;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  this.domain  =  domain;  this.timePeriodClass  =  null;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	this.domain  =  domain;  this.timePeriodClass  =  null;	  	compilable	  [FE]  AssertionFailedError	279	1
3320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {    [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]    if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	add	RegularTimePeriod  first  =  getTimePeriod(getItemCount()  /  2);	  	compilable	  [FE]  AssertionFailedError	554	1
3321	[BUG]  [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  /  2);  [FE]  AssertionFailedError  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {    [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]    if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	603	603	1	replace	RegularTimePeriod  first  =  getTimePeriod(getItemCount()  /  2);	  	compilable	  [FE]  AssertionFailedError	554	1
5270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <  0.0)||(b  <=  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <  0.0)||(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
5271	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <  0.0)||(b  <=  0.0))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <  0.0)||(b  <=  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <  0.0)||(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
3824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	638	1
3825	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	638	1
4939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }	  if(yN!=    null)    {    double    y    =    yN.doubleValue();    item.setValue(item.getValue());    item.setValue(item.getValue());    }    	compilable	  [FE]  AssertionFailedError	824	1
4940	[BUG]  [BUGGY]  if(yN!=  null)  {  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }	  if(yN!=    null)    {    double    y    =    yN.doubleValue();    item.setValue(item.getValue());    item.setValue(item.getValue());    }    	compilable	  [FE]  AssertionFailedError	824	1
1844	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  if(this.domain!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [BUGGY]    this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(this.domain!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }	  this.timePeriodClass    =    name.getClass();    	compilable	  [FE]  AssertionFailedError	308	1
1845	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  if(this.domain!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }  [BUGGY]    this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(this.domain!=  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }	  this.timePeriodClass    =    name.getClass();    	compilable	  [FE]  AssertionFailedError	308	1
2097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  -  2;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  -  2;	  	compilable	  [FE]  AssertionFailedError	350	1
2098	[BUG]  [BUGGY]  this.minY  =  Double.NaN  -  2;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  -  2;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  -  2;	  	compilable	  [FE]  AssertionFailedError	350	1
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	add	System.err.println( "Failed  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	21	1
124	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1053	1053	1	replace	System.err.println( "Failed  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	21	1
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	add	System.err.println( "Failed  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	33	1
196	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }    [BUGGY]  System.err.println( "Failed  to  add  cloned  item.... ");  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1056	1056	1	replace	System.err.println( "Failed  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	33	1
3753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);      [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  fireSeriesChanged();  }  [BUGGY]    TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	add	if(this.data.size()  >  this.maximumItemCount)  {  fireSeriesChanged();  }	  	compilable	  [FE]  AssertionFailedError	626	1
3754	[BUG]  [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  fireSeriesChanged();  }  [FE]  AssertionFailedError  [CONTEXT]    b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  updateBoundsForAddedItem(item);      [BUGGY]  if(this.data.size()  >  this.maximumItemCount)  {  fireSeriesChanged();  }  [BUGGY]    TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	629	629	1	replace	if(this.data.size()  >  this.maximumItemCount)  {  fireSeriesChanged();  }	  	compilable	  [FE]  AssertionFailedError	626	1
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  clone.toString());  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item.... "  +  clone.toString());	  	compilable	  [FE]  AssertionFailedError	117	1
699	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  clone.toString());  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... "  +  clone.toString());  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item.... "  +  clone.toString());	  	compilable	  [FE]  AssertionFailedError	117	1
5803	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [BUGGY]    return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }	  	compilable	  [FE]  AssertionFailedError	968	1
5804	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  [BUGGY]    return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1296	1296	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }	  	compilable	  [FE]  AssertionFailedError	968	1
5515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	920	1
5516	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }	  	compilable	  [FE]  AssertionFailedError	920	1
5517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError	920	1
5518	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError	920	1
3830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
3831	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  AssertionFailedError  [CONTEXT]    }  }  if  (added)  {  updateBoundsForAddedItem(item);  if  (getItemCount()  >  this.maximumItemCount)  {  TimeSeriesDataItem  d  =  (TimeSeriesDataItem)  this.data.remove(0);  updateBoundsForRemovedItem(d);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	634	636	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    needed,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  AssertionFailedError	639	1
986	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  double  getMinY()  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]    return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	add	int  count  =  getItemCount();	  	compilable	  [FE]  AssertionFailedError	165	1
987	[BUG]  [BUGGY]  int  count  =  getItemCount();  [FE]  AssertionFailedError  [CONTEXT]    public  double  getMinY()  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]    return  this.minY;  }  [CLASS]  TimeSeries  [METHOD]  getMinY  [RETURN_TYPE]  double  [VARIABLES]  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  maximumItemAge  periods  serialVersionUID  int  count  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.30151134457776363	345	345	1	replace	int  count  =  getItemCount();	  	compilable	  [FE]  AssertionFailedError	165	1
2174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.maxY  =  Double.NaN  -  1L;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.maxY  =  Double.NaN  -  1L;	  this.maxY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	363	1
2175	[BUG]  [BUGGY]  this.maxY  =  Double.NaN  -  1L;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.maxY  =  Double.NaN  -  1L;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.maxY  =  Double.NaN  -  1L;	  this.maxY    =    Double.NaN    -    1;    	compilable	  [FE]  AssertionFailedError	363	1
4934	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  yN  =  item.getValue();  }	  	compilable	  [FE]  AssertionFailedError	823	1
4935	[BUG]  [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  yN  =  item.getValue();  }	  	compilable	  [FE]  AssertionFailedError	823	1
1705	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(this.domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  this.domain    =    domain;    this.range    =    range;    	compilable	  [FE]  AssertionFailedError	285	1
1706	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(this.domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.domain  =  domain;  this.range  =  range;  }	  this.domain    =    domain;    this.range    =    range;    	compilable	  [FE]  AssertionFailedError	285	1
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  item.... ");  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	117	1
700	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  item.... ");  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  item.... ");  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  item.... ");	  	compilable	  [FE]  AssertionFailedError	117	1
2960	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  boolean  added  =  notify;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	add	boolean  added  =  notify;	  boolean    added    =    true;    	compilable	  [FE]  AssertionFailedError	494	1
2961	[BUG]  [BUGGY]  boolean  added  =  notify;  [FE]  AssertionFailedError  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  boolean  added  =  notify;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	596	596	1	replace	boolean  added  =  notify;	  boolean    added    =    true;    	compilable	  [FE]  AssertionFailedError	494	1
4940	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  if(item.getValue()  ==  null)  {  item.setValue(yN);  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  if(item.getValue()  ==  null)  {  item.setValue(yN);  }	  if(yN!=    null)    {    double    y    =    yN.doubleValue();    item.setValue(item.getValue());    item.setValue(item.getValue());    }    	compilable	  [FE]  AssertionFailedError	824	1
4941	[BUG]  [BUGGY]  if(yN!=  null)  {  if(item.getValue()  ==  null)  {  item.setValue(yN);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  if(item.getValue()  ==  null)  {  item.setValue(yN);  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  if(item.getValue()  ==  null)  {  item.setValue(yN);  }	  if(yN!=    null)    {    double    y    =    yN.doubleValue();    item.setValue(item.getValue());    item.setValue(item.getValue());    }    	compilable	  [FE]  AssertionFailedError	824	1
1701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	284	1
1702	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);    [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	187	187	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  AssertionFailedError	284	1
2169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.minY  =  Double.NaN  +  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	add	this.minY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	362	1
2170	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  1;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;    [BUGGY]  this.minY  =  Double.NaN  +  1;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	194	194	1	replace	this.minY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	362	1
5517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	add	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	920	1
5518	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }  [BUGGY]    return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1273	1273	1	replace	if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  Math.min(a,  b);  }	  	compilable	  [FE]  AssertionFailedError	920	1
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.   "  +  this.data.toString());  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	add	System.err.println( "Unable  to  add  cloned  data  item.   "  +  this.data.toString());	  	compilable	  [FE]  AssertionFailedError	117	1
700	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.   "  +  this.data.toString());  [FE]  AssertionFailedError  [CONTEXT]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();    [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.   "  +  this.data.toString());  [BUGGY]    }  }  }  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1068	1068	1	replace	System.err.println( "Unable  to  add  cloned  data  item.   "  +  this.data.toString());	  	compilable	  [FE]  AssertionFailedError	117	1
5696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)&&  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)&&  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
5697	[BUG]  [BUGGY]  if(Double.isNaN(a)&&  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)&&  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)&&  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
4538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	add	long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	757	1
4539	[BUG]  [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	878	878	1	replace	long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	757	1
4622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  min  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	771	1
4623	[BUG]  [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  min  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  min  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	771	1
4623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	add	long  max  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	771	1
4624	[BUG]  [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [FE]  AssertionFailedError  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  max  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed)  {  findBoundsByIteration();  if  (notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  boolean  notify  removed  double  maxY  minY  oldY  value  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	879	879	1	replace	long  max  =  getTimePeriod(getItemCount()  -  2).getSerialIndex();	  	compilable	  [FE]  AssertionFailedError	771	1
1088	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  new  Double(value),  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	add	add(period,  new  Double(value),  false);	  add(period,    value,    false);    	compilable	  [FE]  AssertionFailedError	182	1
1089	[BUG]  [BUGGY]  add(period,  new  Double(value),  false);  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  new  Double(value),  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  maxY  minY  value  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.2	653	653	1	replace	add(period,  new  Double(value),  false);	  add(period,    value,    false);    	compilable	  [FE]  AssertionFailedError	182	1
2750	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();    [BUGGY]  if(c!=  null  &&  c!=  this.timePeriodClass)  {  [BUGGY]    this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	add	if(c!=  null  &&  c!=  this.timePeriodClass)  {	  if(c!=    this.timePeriodClass)    {    	compilable	  [FE]  AssertionFailedError	459	1
2751	[BUG]  [BUGGY]  if(c!=  null  &&  c!=  this.timePeriodClass)  {  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();    [BUGGY]  if(c!=  null  &&  c!=  this.timePeriodClass)  {  [BUGGY]    this.timePeriodClass  =  c;  }  else  if  (!this.timePeriodClass.equals(c))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	581	581	1	replace	if(c!=  null  &&  c!=  this.timePeriodClass)  {	  if(c!=    this.timePeriodClass)    {    	compilable	  [FE]  AssertionFailedError	459	1
2096	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  +  1;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	add	this.minY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	350	1
2097	[BUG]  [BUGGY]  this.minY  =  Double.NaN  +  1;  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  this.minY  =  Double.NaN  +  1;  [BUGGY]    this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	193	193	1	replace	this.minY  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionFailedError	350	1
2893	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }    [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().getName().equals( " "))  {  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	add	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().getName().equals( " "))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c))    {    	compilable	  [FE]  AssertionFailedError	483	1
2894	[BUG]  [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().getName().equals( " "))  {  [FE]  AssertionFailedError  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  item  =  (TimeSeriesDataItem)  item.clone();  Class  c  =  item.getPeriod().getClass();  if  (this.timePeriodClass  ==  null)  {  this.timePeriodClass  =  c;  }    [BUGGY]  else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().getName().equals( " "))  {  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  double  maxY  minY  TimeSeriesDataItem  d  item  Class  c  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	584	584	1	replace	else  if(!this.timePeriodClass.isAssignableFrom(c)&&  item.getPeriod().getClass().getName().equals( " "))  {	  else    if(!this.timePeriodClass.isAssignableFrom(c))    {    	compilable	  [FE]  AssertionFailedError	483	1
4934	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  else  {  fireSeriesChanged();  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	add	if(yN!=  null)  {  yN  =  item.getValue();  }  else  {  fireSeriesChanged();  }	  	compilable	  [FE]  AssertionFailedError	823	1
4935	[BUG]  [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  else  {  fireSeriesChanged();  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  updateBoundsForAddedItem(TimeSeriesDataItem  item)  {  Number  yN  =  item.getValue();    [BUGGY]  if(yN!=  null)  {  yN  =  item.getValue();  }  else  {  fireSeriesChanged();  }  [BUGGY]    if  (item.getValue()  !=  null)  {  double  y  =  yN.doubleValue();  this.minY  =  minIgnoreNaN(this.minY,  y);  this.maxY  =  maxIgnoreNaN(this.maxY,  y);  }  }  [CLASS]  TimeSeries  [METHOD]  updateBoundsForAddedItem  [RETURN_TYPE]  void  TimeSeriesDataItem  item  [VARIABLES]  boolean  Number  yN  double  maxY  minY  oldY  value  y  yy  TimeSeriesDataItem  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1212	1212	1	replace	if(yN!=  null)  {  yN  =  item.getValue();  }  else  {  fireSeriesChanged();  }	  	compilable	  [FE]  AssertionFailedError	823	1
5695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
5696	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  maxIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.max(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  maxIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1292	1292	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	950	1
1837	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  {  this.data.add(name);  }  [BUGGY]    this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	add	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  {  this.data.add(name);  }	  	compilable	  [FE]  AssertionFailedError	307	1
1838	[BUG]  [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  {  this.data.add(name);  }  [FE]  AssertionFailedError  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  {  this.data.add(name);  }  [BUGGY]    this.timePeriodClass  =  null;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  String)  Comparable  name  String  domain  String  range  [VARIABLES]  Comparable  name  boolean  double  maxY  minY  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	189	189	1	replace	if(name!=  null)  {  this.timePeriodClass  =  name.getClass();  }  else  {  this.data.add(name);  }	  	compilable	  [FE]  AssertionFailedError	307	1
5270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)&&(b  <=  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)&&(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
5271	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)&&(b  <=  0.0))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)&&(b  <=  0.0))  {  [BUGGY]    return  b;  }  else  {  if  (Double.isNaN(b))  {  return  a;  }  else  {  return  Math.min(a,  b);  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1265	1265	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||(a  <=  0.0)&&(b  <=  0.0))  {	  if(Double.isNaN(a)||    Double.isInfinite(b))    {    	compilable	  [FE]  AssertionFailedError	879	1
5407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	add	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
5408	[BUG]  [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [FE]  AssertionFailedError  [CONTEXT]    private  double  minIgnoreNaN(double  a,  double  b)  {  if  (Double.isNaN(a))  {  return  b;  }  else  {    [BUGGY]  if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {  [BUGGY]    return  a;  }  else  {  return  Math.min(a,  b);  }  }  }  [CLASS]  TimeSeries  [METHOD]  minIgnoreNaN  [RETURN_TYPE]  double  double  a  double  b  [VARIABLES]  boolean  double  a  b  maxY  minY  oldY  value  y  yy  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  result  start  startIndex  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.1643989873053573	1269	1269	1	replace	if(Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(b))  {	  if(Double.isNaN(b)||    Double.isNaN(a)||    Double.isNaN(b))    {    	compilable	  [FE]  AssertionFailedError	902	1
