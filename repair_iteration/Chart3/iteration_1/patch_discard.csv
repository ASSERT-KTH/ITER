compilation error,187,add,[CE] cannot find symbol timePeriodAge, ,this.timePeriodAge = getTimePeriodAge();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = getDomainPeriodClass();
compilation error,463,add,[CE] cannot find symbol, ,checkPeriod(this, index);
compilation error,634,replace,[CE] not a statement, removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // don't notify anyone, because that
compilation error,634,replace,[CE] not a statement, removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // don't notify anyone, because
patch is same with buggy,606,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,606,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateSeriesDataItem(item);
patch is same with buggy,1058,replace,, if(this.data.size()  >  1)  {  ,if(this.data.size() > 1) {
compilation error,1269,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) }
compilation error,1288,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) }
patch is same with buggy,626,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,626,replace,[CE] class or interface expected, fireSeriesChanged();  ,updateBoundsForItem(item);
compilation error,600,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(":");
compilation error,600,add,[CE] cannot find symbol b, ,b.append(":"); fireSeriesChanged();
patch is same with buggy,694,replace,, item.setValue(value);  ,item.setValue(value);
compilation error,629,add,[CE] cannot find symbol, ,recalculateBoundsForItem(item);
compilation error,629,add,[CE] cannot find symbol, ,recalculateBoundsForAddedItem(item);
compilation error,626,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation");
compilation error,626,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation for");
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,186,replace,, super(name,  domain);  ,super(name, domain);
compilation error,186,replace,[CE] no suitable constructor found for Series(Comparable,String,String), super(name,  domain);  ,super(name, domain, range);
patch is same with buggy,1068,replace,, e.printStackTrace();  ,e.printStackTrace();
compilation error,1068,replace,[CE] illegal start of expression, e.printStackTrace();  ,e.printStackTrace("");
compilation error,879,replace,[CE] cannot assign a value to final variable removed, boolean  removed  =  true;  ,final boolean removed = true;
patch is same with buggy,879,replace,, boolean  removed  =  true;  , 
compilation error,596,add,[CE] incompatible types, ,Boolean added = true;
compilation error,345,add,[CE] cannot find symbol, ,double minY = getMinimumItemCount();
compilation error,345,add,[CE] cannot find symbol, ,Double minY = getMinimumItemCount();
compilation error,345,add,[CE] cannot find symbol, ,double maxY = getMinimumItemCount();
compilation error,877,replace,[CE] class or interface expected, int  count  =  getItemCount();  ,int count = getItemCount(0);
compilation error,1217,add,[CE] cannot find symbol, ,item.setData(yN);
compilation error,1217,add,[CE] cannot find symbol xN, ,item.setValue(xN);
patch is same with buggy,1212,replace,, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue()); }
patch is same with buggy,1212,replace,, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue()); }
compilation error,596,add,[CE] cannot find symbol b, ,b.append(" but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getClass().getName());
compilation error,596,add,[CE] cannot find symbol b, ,b.append(" but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getName());
patch is same with buggy,189,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
compilation error,189,replace,[CE] cannot find symbol, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = new TimePeriodClass();
compilation error,1211,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;, ,item.setValue(item.getValue(), this.data.size());
compilation error,1211,add,[CE] cannot find symbol, ,item.setData(item.getDataItem());
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  -  1;  ,this.minY = Double.NaN - 1;
patch is same with buggy,1212,replace,, item.setValue(yN);  ,item.setValue(yN);
compilation error,1212,replace,[CE] class or interface expected, item.setValue(yN);  ,item.setValue(yN, 0);
increase failing tests,603,replace, [FE] ArrayIndexOutOfBoundsException, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2 - 1);
patch is same with buggy,603,replace,, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2);
patch is same with buggy,192,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,192,replace,[CE] cannot find symbol NaN, this.minY  =  Double.NaN;  ,this.minY = Long.NaN;
patch is same with buggy,694,replace,, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); fireSeriesChanged();
compilation error,694,replace,[CE] cannot find symbol, item.setValue(value);  fireSeriesChanged();  ,item.addValue(value); fireSeriesChanged();
patch is same with buggy,878,replace,, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(0).getSerialIndex();
compilation error,878,replace,[CE] cannot find symbol latest, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(1).getSerialIndex();
compilation error,565,add,[CE] cannot find symbol, ,updateBounds(item.getPeriod(), this.data.size() - 1);
compilation error,565,add,[CE] cannot find symbol, ,updateBounds(item.getPeriod(), this.timePeriodClass);
compilation error,1289,replace,[CE] reached end of file while parsing, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1266,replace,[CE] not a statement, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,if(Double.isNaN(b)) { return a; fought else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1269,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)) {
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,879,add,[CE] illegal start of expression, ,long max = getTimePeriod(getItemCount() - ).getSerialIndex();
increase failing tests,879,add, [FE]  Size, ,long max = getTimePeriod(getItemCount() / 1).getSerialIndex();
compilation error,1212,add,[CE] cannot find symbol, ,yN = item.getName();
compilation error,1212,add,[CE] cannot find symbol, ,yN = item.getKey();
compilation error,1062,add,[CE] no suitable method found for add(TimeSeriesDataItem,int), ,copy.add(item, index);
compilation error,1062,add,[CE] cannot find symbol, ,item.add(item);
compilation error,189,add,[CE] incompatible types, ,this.timePeriodClass = name;
patch is same with buggy,604,replace,, if(item.getPeriod().compareTo(last)  ==  0)  {  ,if(item.getPeriod().compareTo(last) == 0) {
increase failing tests,604,replace, [FE] AssertionFailedError, if(item.getPeriod().compareTo(last)  ==  0)  {  ,if(item.getPeriod().compareTo(last)!= 0) {
compilation error,1289,add,[CE] illegal start of expression, ,if(Double.isNaN(b)) { return a;!= else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1289,add,[CE] illegal start of expression, ,if(Double.isNaN(b)) { return a; >> else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,878,replace,[CE] cannot find symbol latest, long  duration  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,187,replace,[CE] incompatible types,   ,this.domain = domain; this.timePeriodClass = new java.util.ArrayList();
patch is same with buggy,582,replace,, c  =  item.getPeriod().getClass();  ,c = item.getPeriod().getClass();
compilation error,582,replace,[CE] cannot find symbol, c  =  item.getPeriod().getClass();  ,c = item.getPeriod().getName();
patch is same with buggy,195,replace,, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  ,this.minY = Double.NaN; this.maxY = Double.NaN;
compilation error,195,replace,[CE] illegal start of expression, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  ,if(this.minY > Double.NaN) { this.minY = Double.NaN; this.maxY = Double.NaN; }
increase failing tests,581,replace, [FE] NullPointerException, if(c!=  null)  {  ,if(c == this.timePeriodClass) {
patch is same with buggy,694,replace,, item.setValue(value);  ,item.setValue(value);
compilation error,694,replace,[CE] cannot find symbol, item.setValue(value);  ,item.setData(item);
patch is same with buggy,1217,replace,, item.setValue(yN);  fireSeriesChanged();  ,item.setValue(yN); fireSeriesChanged();
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  fireSeriesChanged();  ,item.setValue(yN, 0); fireSeriesChanged();
patch is same with buggy,627,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,1068,add,[CE] cannot find symbol E, ,E.printStackTrace();
compilation error,1068,add,[CE] cannot find symbol in, ,in.printStackTrace();
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  ,this.timePeriodClass = name.getClass(); this.minY = minY;
increase failing tests,188,replace, [FE] NullPointerException, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  ,this.timePeriodClass = domain.getClass(); this.minY = minY;
patch is same with buggy,877,replace,, if(this.getItemCount()  >  1)  {  ,if(this.getItemCount() > 1) {
increase failing tests,606,add, [FE] AssertionFailedError, ,fireSeriesChanged(); if(notify) { this.data.add(item); }
increase failing tests,606,add, [FE] SeriesException, ,fireSeriesChanged(); if(notify) { throw new SeriesException(""); }
patch is same with buggy,189,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,189,replace,[CE] cannot find symbol, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = createTimePeriodClass();
compilation error,637,replace,[CE] cannot find symbol add, if(!notify)  {  ,if(!add) {
patch is same with buggy,1212,replace,, if(yN!=  null)  {  ,if(yN!= null) {
increase failing tests,1212,replace, [FE] NullPointerException, if(yN!=  null)  {  ,if(yN == null) {
compilation error,681,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(value);
compilation error,681,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(value, this.timePeriodClass);
patch is same with buggy,1269,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1058,add,[CE] illegal start of expression, ,if(This.data.size() > 0 || this.data.size() > 0) {
compilation error,1058,add,[CE] illegal start of expression, ,if(this.data.size() > 0 || this.data.size() > 0) }
compilation error,584,add,[CE] illegal start of expression, ,else if(!this.timePeriodClass.isAssignableFrom(c)) }
patch is same with buggy,596,replace,, boolean  added  =  true;  ,boolean added = true;
increase failing tests,654,add, [FE] ClassCastException, ,this.data.add(period);
compilation error,654,add,[CE] no suitable method found for add(RegularTimePeriod,Double), ,this.data.add(period, new Double(value));
compilation error,654,add,[CE] no suitable method found for add(RegularTimePeriod,double), ,this.data.add(period, value);
patch is same with buggy,596,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,596,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), notify);
compilation error,1265,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) }
patch is same with buggy,695,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data.size() - 1);
patch is same with buggy,187,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,186,add,[CE] call to super must be first statement in constructor, ,super(domain, range);
patch is same with buggy,576,replace,, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)item.clone();
compilation error,576,replace,[CE] <identifier> expected, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)this.data.clone();
compilation error,629,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) }
compilation error,629,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) >>
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = createTimePeriodClass();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = new TimePeriodClass();
compilation error,680,replace,[CE] cannot find symbol, add(period,  value,  false);  ,setValue(period, value, false);
patch is same with buggy,680,replace,, add(period,  value,  false);  , 
compilation error,1212,add,[CE] ')' expected, ,if(yN { null) {
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
increase failing tests,1288,replace, [FE] AssertionFailedError, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isInfinite(a)|| Double.isInfinite(b)) {
patch is same with buggy,581,replace,, if(c!=  this.timePeriodClass)  {  ,if(c!= this.timePeriodClass) {
compilation error,581,replace,[CE] cannot find symbol, if(c!=  this.timePeriodClass)  {  ,if(c!= null && c.isTimePeriodClass()) {
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setValue(value);
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setPeriod(period);
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getClass();
increase failing tests,878,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() / 1).getSerialIndex();
compilation error,878,add,[CE] illegal start of expression, ,long last = getTimePeriod(getItemCount() - ).getSerialIndex();
compilation error,681,add,[CE] no suitable method found for add(RegularTimePeriod,Number), ,this.data.add(period, value);
increase failing tests,681,add, [FE] ClassCastException, ,this.data.add(period);
compilation error,681,add,[CE] no suitable constructor found for Double(Number), ,this.data.add(period, new Double(value));
compilation error,194,add,[CE] bad operand types for binary operator '<', ,if(range < null) { this.minY = Double.NaN; } else { this.data.add(name); }
compilation error,1273,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; >>
compilation error,1273,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) } return a; }
patch is same with buggy,581,replace,, if(c!=  null)  {  ,if(c!= null) {
compilation error,581,replace,[CE] cannot find symbol, if(c!=  null)  {  ,if(c!= null && c.isTimePeriod()) {
compilation error,1056,add,[CE] no suitable method found for sort(List,int), ,Collections.sort(this.data, end);
compilation error,1056,add,[CE] no suitable method found for sort(List,int), ,Collections.sort(this.data, start);
compilation error,170,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateSeries(name);
patch is same with buggy,194,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,194,replace,[CE] bad operand types for binary operator '!=', this.minY  =  Double.NaN;  ,if(this.minY!= null) { this.minY = Double.NaN; } else { this.maxY = Double.NaN; }
patch is same with buggy,629,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,629,replace,[CE] class or interface expected, fireSeriesChanged();  ,removeAgedItems(false);
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = TimeSeries.newInstance();
compilation error,189,replace,[CE] cannot find symbol, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getTimePeriodClass();
compilation error,189,replace,[CE] cannot find symbol, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getRange();
compilation error,667,replace,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;, item.setValue(item.getValue());  ,item.setValue(item.getValue(), value);
patch is same with buggy,667,replace,, item.setValue(item.getValue());  ,item.setValue(item.getValue());
patch is same with buggy,193,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,193,replace,[CE] cannot find symbol naN, this.minY  =  Double.NaN;  ,this.minY = Double.naN;
compilation error,653,replace,[CE] cannot find symbol, add(period,  value,  false);  ,setValue(period, value, false);
patch is same with buggy,653,replace,, add(period,  value,  false);  , 
patch is same with buggy,345,replace,, double  minY  =  getMaximumItemCount();  ,double minY = getMaximumItemCount();
compilation error,194,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN - 1;
compilation error,194,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN - 1;
increase failing tests,598,replace, [FE] ArrayIndexOutOfBoundsException, if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {  ,if(count > 0 && item.getPeriod().compareTo(" ")> 0) {
patch is same with buggy,1217,replace,, item.setValue(yN);  ,item.setValue(yN);
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setValue(yN); item.removeChangeListener(this);
compilation error,1056,add,[CE] cannot find symbol ends, ,Collections.sort(this.data, ends);
compilation error,463,add,[CE] generics are not supported in -source 1.4, ,for(Class <?> timePeriodClass : getDataItem(index)); if(this.timePeriodClass!= null) { return this.data.getPeriod(); }
compilation error,463,add,[CE] generics are not supported in -source 1.4, ,for(Class <?> timePeriodClass : getDataItem(index)); if(this.timePeriodClass!= null) { return this.data.getPeriod(index); }
compilation error,877,add,[CE] illegal start of expression, ,if(!this.getItemCount() - 1) {
compilation error,1292,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1292,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)) {
compilation error,634,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if necessary, but // don't notify anyone
compilation error,634,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if necessary, but // don't notify
compilation error,634,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove old items if necessary, but // don't notify
compilation error,694,add,[CE] cannot find symbol, ,item.setPeriod(period);
compilation error,564,replace,[CE] cannot find symbol, add(item,  false);  ,setValue(item, false);
patch is same with buggy,193,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,193,replace,[CE] cannot find symbol, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = createTimePeriodClass();
compilation error,1292,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) }
compilation error,1292,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b))!=
patch is same with buggy,1211,replace,, item.setValue(item.getValue());  ,item.setValue(item.getValue());
compilation error,1212,replace,[CE] class or interface expected, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,item.setValue(yN); if(item.getValue()!= null) { double y = yN.doubleValue(); this.minY = minY.doubleValue(); this.maxY = maxY.doubleValue(); }
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.isAssignableFrom(c))  {  ,else if(!this.timePeriodClass.isAssignableFrom(c)) {
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
increase failing tests,1265,replace, [FE] AssertionFailedError, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isInfinite(a)|| Double.isInfinite(b)) {
compilation error,189,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getRowKey();
compilation error,626,add,[CE] illegal start of expression, ,if(notify) }
compilation error,626,add,[CE] illegal start of expression, ,if(notify) >>
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN - 1;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  -  1;  ,this.maxY = Double.NaN - 1;
patch is same with buggy,600,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,600,replace,[CE] method addChangeListener in class Series cannot be applied to given types;, fireSeriesChanged();  ,addChangeListener(this);
compilation error,695,add,[CE] cannot find symbol, ,item.addValue();
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setValue(yN, yy);
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setValue(yN, this.maxY);
patch is same with buggy,1217,replace,, item.setValue(yN);  , 
increase failing tests,878,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() ).getSerialIndex();
compilation error,187,replace,[CE] cannot find symbol, this.domain  =  domain;  this.range  =  range;  ,this.timePeriodClass = name.getTimePeriodClass();
increase failing tests,187,replace, [FE] NullPointerException, this.domain  =  domain;  this.range  =  range;  ,this.timePeriodClass = domain.getClass();
patch is same with buggy,1212,replace,, if(yN!=  null  &&  item.getValue()!=  null)  {  ,if(yN!= null && item.getValue()!= null) {
patch is same with buggy,190,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,190,replace,[CE] cannot find symbol, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = createTimePeriodClass();
compilation error,637,add,[CE] illegal start of expression, ,if(added) }
compilation error,637,add,[CE] illegal start of expression, ,if(added) >>
patch is same with buggy,695,replace,, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); fireSeriesChanged();
compilation error,695,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.addValue(value); fireSeriesChanged();
patch is same with buggy,1292,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  , 
increase failing tests,188,add, [FE] NullPointerException, ,this.timePeriodClass = domain.getClass();
compilation error,188,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getRowKey();
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,879,add,[CE] illegal start of expression, ,long maximum = getTimePeriod(getItemCount() - ).getSerialIndex();
increase failing tests,879,add, [FE]  Size, ,long maximum = getTimePeriod(getItemCount() / 1).getSerialIndex();
compilation error,879,add,[CE] illegal start of expression, ,if(removed) { boolean removed = true; } while((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); if(notify) { fireSeriesChanged(); }
compilation error,879,add,[CE] not a statement, ,if(removed) { boolean removed = true; } while((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); if(notify) { fireSeriesChange
compilation error,1212,add,[CE] not a statement, ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue()); bodied
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue());
compilation error,581,add,[CE] ')' expected, ,if(c { null) {
patch is same with buggy,879,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,195,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN; this.maxY = Double.NaN;
compilation error,195,add,[CE] cannot find symbol minItemCount, ,this.minItemCount = Integer.MAX_VALUE; this.maxY = Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN;
compilation error,190,add,[CE] cannot find symbol, ,this.timePeriodClass = getTTimePeriodClass();
compilation error,190,add,[CE] cannot find symbol, ,this.range = getRange();
patch is same with buggy,1056,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1056,replace,[CE] cannot find symbol copy, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println(",Failed to add cloned item.");
patch is same with buggy,1062,replace,, copy.add(item);  ,copy.add(item);
compilation error,604,add,[CE] illegal start of expression, ,if(item.getPeriod().compareTo(last) >= 0) {
compilation error,637,replace,[CE] ')' expected, if(added)  {  ,if(not notify) {
patch is same with buggy,629,replace,, if(this.data.size()  >  this.maximumItemCount)  {  ,if(this.data.size() > this.maximumItemCount) {
increase failing tests,629,replace, [FE] AssertionFailedError, if(this.data.size()  >  this.maximumItemCount)  {  ,if(this.data.size() > 1) {
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned data item." + this.clone.toString());
compilation error,1296,add,[CE] 'else' without 'if', ,else if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,1296,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a;!= else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
increase failing tests,463,add, [FE]  Size, ,this.data.remove(index);
compilation error,463,add,[CE] TimePeriod is abstract; cannot be instantiated, ,this.data.add(new TimePeriod(this.timePeriodClass));
compilation error,463,add,[CE] TimePeriod is abstract; cannot be instantiated, ,this.data.add(new TimePeriod(this.timePeriodClass, index));
patch is same with buggy,634,replace,, Collections.sort(this.data);  ,Collections.sort(this.data);
compilation error,634,replace,[CE] no suitable method found for sort(List,TimeSeriesDataItem), Collections.sort(this.data);  ,Collections.sort(this.data, item);
patch is same with buggy,1269,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  , 
compilation error,187,add,[CE] incompatible types, ,this.domain = domain? domain :"domain";
compilation error,627,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" the time period");
compilation error,627,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append("The time period");
patch is same with buggy,1296,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
patch is same with buggy,1296,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,582,add,[CE] cannot find symbol, ,c = item.getTimePeriod().getClass();
compilation error,582,add,[CE] cannot find symbol C, ,C = item.getPeriod().getClass();
compilation error,634,add,[CE] cannot find symbol, ,Collections.sort(this.data); collectionAgedItems(true);
compilation error,634,add,[CE] cannot find symbol, ,Collections.sort(this.data); collectionAgedItems(false);
patch is same with buggy,463,replace,, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getPeriod();
compilation error,463,replace,[CE] cannot find symbol, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getPeriodType();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getRange();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getRowKey();
patch is same with buggy,1056,replace,, TimeSeries  copy  =(TimeSeries)this.clone();  ,TimeSeries copy =(TimeSeries)this.clone();
patch is same with buggy,463,replace,, getDataItem(index);  ,getDataItem(index);
compilation error,1266,add,[CE] illegal start of expression, ,if(Double.isNaN(b)) { return a;!= else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1266,add,[CE] illegal start of expression, ,if(Double.isNaN(b)) { return a; >> else if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1058,add,[CE] illegal start of expression, ,if(this.data.size() > 1) }
compilation error,1058,add,[CE] illegal start of expression, ,if(this.data.size() > 1) >>
patch is same with buggy,463,replace,, this.data.get(index);  , 
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
patch is same with buggy,1053,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1053,replace,[CE] <identifier> expected, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println(",Failed to add cloned item.");
compilation error,654,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(value);
compilation error,654,replace,[CE] illegal start of expression, fireSeriesChanged();  ,add(period);
compilation error,667,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;, ,item.setValue(item.getValue(), notify);
patch is same with buggy,1292,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,192,add,[CE] cannot find symbol minX, ,this.minX = Double.NaN;
patch is same with buggy,1068,replace,, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned item.");
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println(",Unable to add cloned item.");
compilation error,877,add,[CE] illegal start of expression, ,if(getItemCount() > 1 && getTimePeriod(1).getSerialIndex() > this.maximumItemAge) {
compilation error,603,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean), ,TimeSeriesDataItem item = getTimePeriod(getItemCount() / 2);
patch is same with buggy,878,replace,, long  duration  =  getTimePeriod(0).getSerialIndex();  ,long duration = getTimePeriod(0).getSerialIndex();
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1273,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,if(a == 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1273,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,[Delete]
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
patch is same with buggy,581,replace,, if(c!=  this.timePeriodClass)  {  ,if(c!= this.timePeriodClass) {
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.isAssignableFrom(c))  {  ,else if(!this.timePeriodClass.isAssignableFrom(c)) {
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(!this.timePeriodClass.isAssignableFrom(c))  {  ,else if(this.timePeriodClass.isAssignableFrom(c)) {
patch is same with buggy,1056,replace,, TimeSeries  copy  =(TimeSeries)this.clone();  ,TimeSeries copy =(TimeSeries)this.clone();
increase failing tests,1056,replace, [FE] ClassCastException, TimeSeries  copy  =(TimeSeries)this.clone();  ,TimeSeries copy =(TimeSeries)this.data.get(start);
compilation error,877,add,[CE] illegal start of expression, ,if(this.data.size() > 1) {
compilation error,877,add,[CE] illegal start of expression, ,if(this.data.containsKey(getItemCount())) {
compilation error,877,add,[CE] illegal start of expression, ,if(this.data.containsKey(itemCount)) {
patch is same with buggy,879,replace,, boolean  removed  =  true;  , 
compilation error,1289,add,[CE] reached end of file while parsing, ,if(a >= 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1289,add,[CE] reached end of file while parsing, ,if(a <= 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1289,add,[CE] reached end of file while parsing, ,if(a >= 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.max(a, b); }
compilation error,626,replace,[CE] cannot find symbol add, if(notify)  {  ,if(this.add) {
increase failing tests,582,add, [FE] IllegalArgumentException, ,if(this.timePeriodClass!= null) { c = item.getPeriod().getClass(); } else { throw new IllegalArgumentException(""); }
increase failing tests,582,add, [FE] SeriesException, ,if(this.timePeriodClass!= null) { c = item.getPeriod().getClass(); } else { throw new SeriesException(""); }
compilation error,189,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getComparable();
patch is same with buggy,600,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,600,replace,[CE] cannot find symbol b, fireSeriesChanged();  ,b.append(" :");
compilation error,681,replace,[CE] illegal start of expression, fireSeriesChanged();  ,this.add(period);
compilation error,681,replace,[CE] illegal start of expression, fireSeriesChanged();  ,add(period);
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.addChangeListener(this);
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setTimePeriod(period);
compilation error,634,add,[CE] generics are not supported in -source 1.4, ,Collections.sort(this.data, new ArrayList < TimeSeriesDataItem>());
compilation error,634,add,[CE] generics are not supported in -source 1.4, ,Collections.sort(this.data, new ArrayList < TimeSeriesDataItem>()); removedAgedItems(true);
patch is same with buggy,1068,replace,, e.printStackTrace();  ,e.printStackTrace();
compilation error,1068,replace,[CE] illegal start of expression, e.printStackTrace();  ,e.printStackTrace(this.data);
compilation error,694,replace,[CE] method getTimePeriod in class TimeSeries cannot be applied to given types;, item.setValue(value);  ,item.setTimePeriod(getTimePeriod());
compilation error,694,replace,[CE] cannot find symbol, item.setValue(value);  ,item.addChangeListener(this);
compilation error,576,add,[CE] cannot find symbol, ,item =(TimeSeriesDataItem)item.getParent();
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  ,this.timePeriodClass = name.getClass(); this.minY = minY;
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  , 
patch is same with buggy,1056,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1056,replace,[CE] cannot find symbol copy, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item." + start +"; failed to add cloned item.");
patch is same with buggy,1212,replace,, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue()); }
compilation error,463,add,[CE] generics are not supported in -source 1.4, ,if(getItemCount() > index) { Class <?> timePeriodClass = getTimePeriod(index); if(timePeriodClass!= null) { return this.data.get(index); }
compilation error,463,add,[CE] generics are not supported in -source 1.4, ,if(getItemCount() > index) { Class <?> timePeriodClass = getTimePeriod(index); if(timePeriodClass!= null) { return new TimePeriod(this.timePeriodClass); }
patch is same with buggy,192,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
increase failing tests,192,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN;  ,this.minY = Double.NaN - 1;
increase failing tests,877,replace, [FE] AssertionFailedError, if(this.getItemCount()  >  1)  {  ,if(getItemCount() > 1 && getTimePeriod(0).getSerialIndex() < this.maximumItemAge) {
compilation error,463,replace,[CE] ';' expected, getDataItem(index);  ,getDataItem(index));
compilation error,637,replace,[CE] class or interface expected, if(added)  {  ,if(!added) { b.append(item); b.addChangeListener(this); } else { b.addChangeListener(this); }
compilation error,637,replace,[CE] class or interface expected, if(added)  {  ,if(!added) { b.addChangeListener(this); b.addChangeListener(item); }
patch is same with buggy,1269,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,189,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
compilation error,654,add,[CE] cannot find symbol c, ,c.addField(period, value);
compilation error,170,replace,[CE] illegal start of expression, fireSeriesChanged();  ,this.data.add(new DefaultTimeSeries(name));
increase failing tests,603,replace, [FE]  Size, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2 + 1);
patch is same with buggy,576,replace,, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)item.clone();
compilation error,576,replace,[CE] <identifier> expected, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)item.getAnnotated();
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null) { if(yN.doubleValue() > 0) { return new Double(yN.doubleValue()); }
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null) { if(yN.doubleValue() > 0) { double y = yN.doubleValue(); item.setItem(item.getItem()); }
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null) { if(yN.doubleValue() > 0) { double y = yN.doubleValue(); item.setY(y); }
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN - 1;
increase failing tests,1058,add, [FE] IllegalArgumentException, ,if(this.data.size() > 0) { throw new IllegalArgumentException(""); }
increase failing tests,1058,add, [FE] AssertionFailedError, ,if(this.data.size() > 0) { this.data.remove(0); }
compilation error,1212,replace,[CE] class or interface expected, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,yN = item.getY();
compilation error,1289,replace,[CE] illegal start of expression, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,[Delete]
compilation error,1289,replace,[CE] illegal start of type, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,}
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setValue(yN - 1);
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setValue(yN, 0);
compilation error,1265,add,[CE] illegal start of expression, ,if(a == 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,345,replace,[CE] cannot find symbol, double  minY  =  getMaximumItemCount();  ,double minY = getMinimumItemAge();
patch is same with buggy,1062,replace,, copy.add(item);  ,copy.add(item);
increase failing tests,581,replace, [FE] NullPointerException, if(c!=  null)  {  ,if(c!= null &&!notify) {
increase failing tests,581,replace, [FE] NullPointerException, if(c!=  null)  {  ,if(c!= null && this.timePeriodClass!= null) {
compilation error,878,add,[CE] cannot find symbol, ,long duration = getTimePeriod(0).getDuration();
compilation error,878,add,[CE] incompatible types, ,long duration = getTimePeriod(getItemCount() - 1);
compilation error,581,add,[CE] illegal start of expression, ,if(c!= null &&!this.timePeriodClass.equals(c)) {
compilation error,581,add,[CE] illegal start of expression, ,if(c!= null &&!this.timePeriodClass.isAssignableFrom(c)) {
compilation error,634,add,[CE] cannot find symbol, ,this.data.remove(0); removedAgedItems(true);
increase failing tests,634,add, [FE] AssertionFailedError, ,this.data.remove(0); removeAgedItems(true);
increase failing tests,1058,replace, [FE] AssertionFailedError, if(this.data.size()  >  1)  {  ,if(this.data.size() == 0) {
patch is same with buggy,1058,replace,, if(this.data.size()  >  1)  {  , 
compilation error,654,replace,[CE] illegal start of expression, fireSeriesChanged();  ,this.add(period);
patch is same with buggy,1292,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,193,replace,[CE] bad operand types for binary operator '==', this.minY  =  Double.NaN;  ,if(this.minY == null) { this.minY = Double.NaN; } else { this.maxY = Double.NaN; }
patch is same with buggy,582,replace,, c  =  item.getPeriod().getClass();  , 
compilation error,1266,replace,[CE] illegal start of expression, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,[Delete]
compilation error,1266,replace,[CE] illegal start of type, if(Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(b))  {  return  Math.min(a,  b);  }  ,}
compilation error,627,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an observation");
compilation error,1217,add,[CE] bad operand types for binary operator '+', ,item.setValue(yN + 1);
patch is same with buggy,189,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
patch is same with buggy,189,replace,, this.timePeriodClass  =  getTimePeriodClass();  , 
compilation error,565,add,[CE] cannot find symbol, ,item.addChangeListener(this);
compilation error,565,add,[CE] cannot find symbol, ,item.addChangeListener(this); this.data.add(item);
patch is same with buggy,1212,replace,, if(yN!=  null)  {  ,if(yN!= null) {
increase failing tests,1212,replace, [FE] AssertionFailedError, if(yN!=  null)  {  ,if(yN!= null && yN.doubleValue() > 0) {
patch is same with buggy,463,replace,, this.data.get(index);  ,this.data.get(index);
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
compilation error,1288,replace,[CE] cannot find symbol, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Boolean.isNaN(a)|| Double.isInfinite(b)) {
compilation error,187,add,[CE] bad operand types for binary operator '+', ,this.timePeriodClass = getTimePeriodClass() + 1;
patch is same with buggy,1053,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1053,replace,[CE] <identifier> expected, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Cailed to add cloned item.");
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,581,replace,, if(c!=  null)  {  ,if(c!= null) {
compilation error,193,add,[CE] cannot find symbol NaN, ,this.minY = Long.NaN;
compilation error,193,add,[CE] cannot find symbol, ,this.timePeriodClass = new TimeSeries(name.getTime());
increase failing tests,629,add, [FE] SeriesException, ,if(this.data.size() > this.maximumItemCount) { throw new SeriesException(""); }
patch is same with buggy,1269,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,629,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,629,replace,[CE] class or interface expected, fireSeriesChanged();  ,b.append(" but the series already contains an observation");
compilation error,1292,add,[CE] ')' expected, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a || Double.isNaN(b)) {
compilation error,1292,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isInfinite(b)) {
compilation error,463,add,[CE] illegal start of expression, ,for(int i = 0; i < index; i++) { Class timePeriodClass = getDataItem(index); if(getTimePeriodClass!= null) { return new TimePeriod(this.timePeriodClass); }
compilation error,463,add,[CE] illegal start of expression, ,for(int i = 0; i < index; i++) { Class timePeriodClass = getDataItem(index); if(getTimePeriodClass!= null) { return new TimePeriod(getTimePeriodClass()); }
compilation error,194,add,[CE] cannot find symbol minItemAge, ,this.minItemAge = Long.MAX_VALUE;
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null && item.getClass()!= getClass()) { Class c = item.getRowKey(); if(c!= null && c.getType() == Token.FUNCTION) { return c; }
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null && item.getClass()!= getClass()) { Class c = item.getClass(); if(c!= null && c.getItemCount() > 0) {
compilation error,878,replace,[CE] incompatible types, long  duration  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1);
compilation error,1296,add,[CE] reached end of file while parsing, ,if(a > 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,1296,add,[CE] reached end of file while parsing, ,if(a <= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) { return a; }
compilation error,626,add,[CE] cannot find symbol b, ,b.append("permitted. Try using the addOrUpdate() method.");
compilation error,193,add,[CE] no suitable method found for getDataItem(Comparable), ,this.data = getDataItem(name);
compilation error,193,add,[CE] no suitable method found for getDataItem(String), ,this.data = getDataItem(domain);
patch is same with buggy,193,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
patch is same with buggy,193,replace,, this.timePeriodClass  =  getTimePeriodClass();  , 
compilation error,1056,add,[CE] no suitable method found for sort(List,int,int), ,Collections.sort(this.data, start, end);
patch is same with buggy,1217,replace,, item.setValue(yN);  fireSeriesChanged();  ,item.setValue(yN); fireSeriesChanged();
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  fireSeriesChanged();  ,item.setValue(yN - 1); fireSeriesChanged();
patch is same with buggy,694,replace,, item.setValue(value);  , 
compilation error,188,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getRange();
compilation error,188,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getComparable();
patch is same with buggy,606,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,606,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), last);
patch is same with buggy,194,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,190,add,[CE] cannot find symbol, ,java.util.ArrayList().add(this.timePeriodClass);
compilation error,190,add,[CE] cannot find symbol, ,this.timePeriodClass =(TimePeriodClass)this.data.get(name);
increase failing tests,1058,add, [FE] IllegalArgumentException, ,if(this.data.size() > 1) { throw new IllegalArgumentException(""); }
compilation error,192,add,[CE] cannot find symbol minItemAge, ,this.minItemAge = Long.MAX_VALUE;
compilation error,604,replace,[CE] cannot find symbol, if(item.getPeriod().compareTo(last)  ==  0)  {  ,if(last.getPeriod().compareTo(item) == 0) {
compilation error,1212,replace,[CE] class or interface expected, item.setValue(yN);  ,item.setValue(yN - 1);
compilation error,1212,replace,[CE] class or interface expected, item.setValue(yN);  ,item.setValue(yN + 1);
compilation error,1292,add,[CE] ')' expected, ,if(Double.isNaN(a || Double.isNaN(b)) {
compilation error,1211,add,[CE] cannot find symbol, ,item.setData(item.getData());
compilation error,565,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data);
increase failing tests,604,add, [FE] SeriesException, ,if(item.getPeriod().compareTo(last)> 0) { throw new SeriesException("TimeSeriesDataItem item does not belong to the same category."); }
compilation error,603,add,[CE] variable item is already defined in method add(TimeSeriesDataItem,boolean), ,RegularTimePeriod item = getTimePeriod(getItemCount() / 2);
compilation error,680,add,[CE] no suitable method found for add(RegularTimePeriod,Number,boolean), ,this.data.add(period, value, true);
compilation error,1269,add,[CE] ')' expected, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a || Double.isNaN(b)) {
compilation error,1269,add,[CE] class expected, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| double.isNaN(b)) {
compilation error,1056,add,[CE] method reverse in class Collections cannot be applied to given types;, ,Collections.reverse(start);
compilation error,345,add,[CE] cannot find symbol, ,double minY = getMinimumItemCount() * getMaximumItemAge();
compilation error,878,replace,[CE] cannot find symbol, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(0).getMaximumItemAge();
compilation error,187,add,[CE] , ,this.domain = domain +"", DEFAULT_DOMAIN_DESCRIPTION;
compilation error,187,add,[CE] , ,this.domain = domain +"", DEFAULT_DOMAIN_DESCRIPTION);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  -  1;  ,this.maxY = Double.NaN - 1;
compilation error,879,add,[CE] cannot find symbol, ,long max = getTimePeriod(getItemCount() - 1).getMaximumItemAge();
compilation error,600,add,[CE] cannot find symbol, ,item.removeChangeListener(this);
compilation error,600,add,[CE] cannot find symbol, ,item.setTimePeriod(getItemCount() - 1);
compilation error,634,replace,[CE] cannot find symbol d, Collections.sort(this.data);  ,Collections.sort(this.data, d);
compilation error,1292,replace,[CE] illegal start of expression, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)||
patch is same with buggy,1217,replace,, item.setValue(yN);  ,item.setValue(yN);
compilation error,1217,replace,[CE] illegal start of expression, item.setValue(yN);  ,item.setY(y);
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)||
patch is same with buggy,596,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,189,add,[CE] cannot find symbol DateTimeUtils, ,this.timePeriodClass = DateTimeUtils.getTimePeriodClass(name);
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass =(TimePeriodClass)this.data.get(name);
compilation error,879,add,[CE] cannot find symbol, ,long maximum = getTimePeriod(getItemCount() - 1).getMaximumItemAge();
compilation error,1296,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,[Delete]
compilation error,1296,replace,[CE] reached end of file while parsing, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
patch is same with buggy,1296,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  , 
compilation error,667,add,[CE] method getTimePeriod in class TimeSeries cannot be applied to given types;, ,item.setTimePeriod(getTimePeriod());
compilation error,667,add,[CE] cannot find symbol, ,item.setTimePeriod(getItemCount() - 1);
compilation error,667,add,[CE] cannot find symbol, ,item.setPeriod(getItemCount() - 1);
compilation error,598,add,[CE] illegal start of expression, ,if(count == 0) { TimeSeriesDataItem item = getDataItem(getItemCount() - 1); if(item.getPeriod().compareTo(" ")> 0) { throw new SeriesException(""); }
increase failing tests,598,add, [FE] SeriesException, ,if(count == 0 && item.getPeriod().compareTo(" ")> 0) { throw new SeriesException(""); }
compilation error,598,add,[CE] illegal start of expression, ,if(count > 0) { TimeSeriesDataItem item = getDataItem(getItemCount() - 1); if(item.getPeriod().compareTo(" ")> 0) { throw new SeriesException(""); }
compilation error,584,add,[CE] 'else' without 'if', ,else if(this.timePeriodClass.equals(c)) {
compilation error,1068,add,[CE] void cannot be dereferenced, ,System.err.println("Unable to add cloned item. ").println("Unable to add cloned item. ");
compilation error,187,add,[CE] cannot find symbol itemCount, ,this.itemCount = getItemCount();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = getDomain();
patch is same with buggy,626,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,626,replace,[CE] class or interface expected, fireSeriesChanged();  ,refreshBounds(item.getSeries());
compilation error,695,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(this, period, notify));
compilation error,695,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(this, false));
patch is same with buggy,1068,replace,, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned item.");
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned item.").println("Failed to add cloned item.");
compilation error,188,add,[CE] cannot find symbol itemCount, ,this.itemCount = name.getItemCount();
compilation error,188,add,[CE] cannot find symbol itemCount, ,this.itemCount = name.getItemCount() - 1;
patch is same with buggy,186,replace,, super(name,  domain);  ,super(name, domain);
compilation error,1266,add,[CE] illegal start of expression, ,if(a >= 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.max(a, b); }
compilation error,1266,add,[CE] illegal start of expression, ,if(a >= 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1266,add,[CE] illegal start of expression, ,if(a < 0.0) { if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.max(a, b); }
compilation error,1269,add,[CE] ')' expected, ,if(Double.isNaN(a || Double.isNaN(b)) {
compilation error,637,replace,[CE] cannot find symbol added, if(added)  {  ,if(this.added) {
patch is same with buggy,1269,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,879,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,186,add,[CE] no suitable constructor found for Series(), ,Preconditions.checkNotNull(domain);
compilation error,186,add,[CE] no suitable constructor found for Series(), ,Preconditions.checkNotNull(name);
compilation error,564,add,[CE] no suitable method found for add(TimeSeriesDataItem,boolean), ,this.data.add(item, true);
compilation error,681,add,[CE] cannot find symbol c, ,c.addField(period, value);
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getClass();
patch is same with buggy,1292,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned data item." + this.data.get(index).toString());
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.timePeriodClass);
patch is same with buggy,695,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,694,replace,[CE] generics are not supported in -source 1.4, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new ArrayList < TimeSeriesDataItem>(this));
compilation error,694,replace,[CE] generics are not supported in -source 1.4, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new ArrayList < TimeSeriesDataItem>(this, item));
compilation error,667,replace,[CE] bad operand types for binary operator '+', item.setValue(item.getValue());  ,item.setValue(item.getValue() + 1);
increase failing tests,629,replace, [FE] AssertionFailedError, if(this.data.size()  >  this.maximumItemCount)  {  ,if(this.data.size() > 0) {
increase failing tests,629,replace, [FE] AssertionFailedError, if(this.data.size()  >  this.maximumItemCount)  {  ,if(this.data.size() < this.maximumItemCount) {
compilation error,1062,add,[CE] illegal start of expression, ,if(item!= null) { TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone(); if(item!= null) { throw new IllegalArgumentException(""); }
compilation error,1062,add,[CE] illegal start of expression, ,if(item!= null) { TimeSeriesDataItem item =(TimeSeriesDataItem)item.clone(); if(item == null) { throw new IllegalArgumentException(""); }
patch is same with buggy,627,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,195,replace,, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  ,this.minY = Double.NaN; this.maxY = Double.NaN;
compilation error,195,replace,[CE] illegal start of expression, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  ,if(this.minY!= null) { this.minY = Double.NaN; this.maxY = Double.NaN; } else { this.timePeriodClass = new java.util.ArrayList(); }
patch is same with buggy,598,replace,, if(count  ==  0  &&  item.getPeriod().compareTo( " ")>  0)  {  ,if(count == 0 && item.getPeriod().compareTo("")> 0) {
compilation error,187,add,[CE] cannot find symbol, ,if(domain!= null) { this.domain = domain; this.timePeriodClass = new ArrayList(); }
patch is same with buggy,463,replace,, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getPeriod();
compilation error,463,replace,[CE] cannot find symbol, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getTimePeriod();
compilation error,189,add,[CE] cannot find symbol TimePeriodClass, ,this.timePeriodClass = TimePeriodClass.getTimePeriodClass();
compilation error,195,add,[CE] cannot find symbol, ,this.timePeriodClass = new TimeSeries(name.getTime());
compilation error,1273,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,if(Double.isNaN(a)|| Double.isNaN(b)) { return a; if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
patch is same with buggy,1273,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  , 
compilation error,695,add,[CE] cannot find symbol, ,item.addValue(value);
compilation error,596,add,[CE] variable added is already defined in method add(TimeSeriesDataItem,boolean), ,boolean added = this.data.isEmpty();
compilation error,629,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not");
compilation error,629,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an observation"); b.append("; the series already contains an observation");
compilation error,653,replace,[CE] cannot find symbol, add(period,  value,  false);  ,set(period, value, true);
patch is same with buggy,1292,replace,, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  , 
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
compilation error,1265,replace,[CE] cannot find symbol, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Boolean.isNaN(a)|| Double.isInfinite(b)) {
compilation error,626,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) {
compilation error,626,add,[CE] cannot find symbol add, ,if(this.add) { throw new SeriesException(""); }
increase failing tests,626,add, [FE] SeriesException, ,if(added) { throw new SeriesException(""); }
compilation error,606,add,[CE] cannot find symbol, ,item.setPeriod(last);
compilation error,606,add,[CE] cannot find symbol, ,item.removeChangeListener(this);
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1212,replace,[CE] cannot find symbol, if(yN!=  null  &&  item.getValue()!=  null)  {  ,if(yN!= null && item.getItemCount() > 1) {
compilation error,463,add,[CE] cannot find symbol, ,checkPeriod(this.data, index);
increase failing tests,878,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() * 1).getSerialIndex();
compilation error,694,add,[CE] cannot find symbol, ,item.setTimePeriod(period);
compilation error,694,add,[CE] cannot find symbol, ,item.setTimePeriod(getItemCount() - 1);
compilation error,637,add,[CE] cannot find symbol b, ,if(added) { b.append(item); b.addChangeListener(this); } else { b.addChangeListener(this); }
compilation error,637,add,[CE] cannot find symbol b, ,if(added) { b.append(item); b.addChangeListener(this); } else { b.addChangeListener(new TimeSeriesDataItem(item, getTimePeriodClass())); }
compilation error,637,add,[CE] cannot find symbol b, ,if(added) { b.append(item); b.addChangeListener(this); } else { b.removeChangeListener(item); }
compilation error,653,add,[CE] cannot find symbol c, ,c.add(period, value, true);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  -  1;  ,this.minY = Double.NaN - 1;
patch is same with buggy,190,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,1211,replace,[CE] bad operand types for binary operator '-', item.setValue(item.getValue());  ,item.setValue(item.getValue() - 1);
compilation error,1211,replace,[CE] bad operand types for binary operator '+', item.setValue(item.getValue());  ,item.setValue(item.getValue() + 1);
patch is same with buggy,1211,replace,, item.setValue(item.getValue());  , 
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getComparable();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = name.getTimePeriod();
increase failing tests,1265,replace, [FE] AssertionFailedError, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)||(a >= 0.0)||(b <= 0.0)) {
compilation error,1288,add,[CE] reached end of file while parsing, ,if(a == 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1288,add,[CE] reached end of file while parsing, ,if(a <= 0.0) { if(Double.isNaN(a)|| Double.isNaN(b)) {
patch is same with buggy,877,replace,, if(this.getItemCount()  >  1)  {  ,if(this.getItemCount() > 1) {
compilation error,596,add,[CE] cannot find symbol b, ,b.append(" but the TimeSeries is expecting an instance of");
compilation error,596,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(" but the TimeSeries is expecting an instance of");
compilation error,584,add,[CE] 'else' without 'if', ,else if(this.timePeriodClass.equals("")) {
compilation error,637,replace,[CE] cannot find symbol Notify, if(added)  {  ,if(Notify) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  -  1;  ,this.minY = Double.NaN - 1;
compilation error,1053,add,[CE] void cannot be dereferenced, ,System.err.println("Failed to add cloned item.").println("Failed to add cloned item.");
increase failing tests,170,add, [FE] StackOverflowError, ,this.data.add(new TimeSeries(name));
compilation error,170,add,[CE] cannot find symbol, ,this.data.add(new DataItem(name));
patch is same with buggy,629,replace,, if(this.data.size()  >  this.maximumItemCount)  {  ,if(this.data.size() > this.maximumItemCount) {
compilation error,188,add,[CE] cannot find symbol time, ,this.timePeriodClass = time.getClass();
compilation error,188,add,[CE] cannot find symbol, ,this.data = new ArrayList();
compilation error,581,add,[CE] illegal start of expression, ,if(c!= null), {
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  ,removeAgedItems(true);// remove old items if needed, but // don't notify anyone, because that // happens next anyway...
compilation error,1269,replace,[CE] cannot find symbol m, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(m)|| Double.isNaN(b)) {
compilation error,1269,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(c)) {
compilation error,1269,add,[CE] illegal start of expression, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(m)) {
compilation error,637,replace,[CE] class or interface expected, if(added)  {  ,if(!notify) { throw new SeriesException("TimeSeriesDataItem item is null."); }
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned data item." + clone.getName());
compilation error,626,add,[CE] illegal start of expression, ,if(!notify) {
compilation error,626,add,[CE] illegal start of expression, ,if(justify) {
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.add(period, notify);
increase failing tests,878,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() + 1).getSerialIndex();
compilation error,596,replace,[CE] cannot assign a value to final variable added, boolean  added  =  true;  ,final boolean added = true;
patch is same with buggy,596,replace,, boolean  added  =  true;  , 
compilation error,1212,add,[CE] cannot find symbol yy, ,if(yN!= null) { double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, yy); this.maxY = maxY.doubleValue(); }
compilation error,1212,add,[CE] cannot find symbol yy, ,if(yN!= null) { double y = yN.doubleValue(); this.minY = minIgnoreNaN(this.minY, yy); item.setValue(item.getValue()); }
compilation error,1212,add,[CE] cannot find symbol yy, ,if(yN!= null) { double y = yN.doubleValue(); item.setIgnoreNaN(this.minY, yy); this.maxY = yN.doubleValue(); }
compilation error,604,add,[CE] illegal start of expression, ,if(item.getPeriod().compareTo(last) < 0) {
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data);
compilation error,695,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), notify);
compilation error,1296,add,[CE] illegal start of expression, ,[Delete] else if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,1296,add,[CE] 'else' without 'if', ,} else if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
compilation error,695,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(period, null, notify));
compilation error,1211,add,[CE] cannot find symbol, ,item.setDataItem(item.getDataItem());
compilation error,1211,add,[CE] cannot find symbol, ,item.setDataItem(item.getDataItem(0));
patch is same with buggy,189,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
patch is same with buggy,634,replace,, Collections.sort(this.data);  ,Collections.sort(this.data);
compilation error,629,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" for that time period. Duplicates are not");
compilation error,629,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation");
compilation error,565,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds();
compilation error,877,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemAge) {
patch is same with buggy,877,replace,, if(this.getItemCount()  >  1)  {  , 
compilation error,1056,add,[CE] cannot find symbol Super, ,TimeSeries copy =(TimeSeries)Super.clone();
compilation error,1212,replace,[CE] class or interface expected, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,item.setDataItem(yN);
compilation error,877,add,[CE] no suitable method found for getItemCount(int), ,int count = getItemCount(1);
patch is same with buggy,193,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,193,replace,[CE] cannot find symbol, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClassName();
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = getTimePeriodClassName();
increase failing tests,637,add, [FE] SeriesException, ,if(added) { throw new SeriesException("TimeSeriesDataItem item has changed:" + item.getPeriod()); }
compilation error,637,add,[CE] cannot find symbol, ,if(added) { throw new SeriesException("TimeSeriesDataItem item has changed:" + item.getPeriodType() +" does not match the data it contains"); }
patch is same with buggy,1212,replace,, item.setValue(yN);  , 
patch is same with buggy,1056,replace,, TimeSeries  copy  =(TimeSeries)this.clone();  ,TimeSeries copy =(TimeSeries)this.clone();
increase failing tests,195,add, [FE] AssertionFailedError, ,this.timePeriodClass = name.getClass(); this.data.add(name);
compilation error,192,add,[CE] cannot find symbol minItemAge, ,this.minItemAge = Long.MIN_VALUE;
compilation error,1212,replace,[CE] cannot find symbol, if(yN!=  null  &&  item.getValue()!=  null)  {  ,if(yN!= null && item.getItemCount() > 0) {
patch is same with buggy,879,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,879,replace,[CE] cannot find symbol removed, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 2).getSerialIndex();
patch is same with buggy,1062,replace,, copy.add(item);  ,copy.add(item);
compilation error,1062,replace,[CE] cannot find symbol Item, copy.add(item);  ,copy.add(Item.clone());
compilation error,1289,add,[CE] reached end of file while parsing, ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,187,add,[CE] incompatible types, ,this.domain = domain?"domain" :"domain";
compilation error,345,replace,[CE] cannot find symbol DateTimeConstants, double  minY  =  getMaximumItemCount();  ,double minY = getMaximumItemCount() / DateTimeConstants.MILLIS_PER_MINUTE;
patch is same with buggy,1068,replace,, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned item.");
compilation error,1068,replace,[CE] illegal start of expression, System.err.println( "Unable  to  add  cloned  item. ");  ,System.err.println("Unable to add cloned data item.");
compilation error,190,add,[CE] generics are not supported in -source 1.4, ,if(getTimePeriodClass()!= null) { this.timePeriodClass = getTimePeriodClass(); } else { this.data = new ArrayList < TimeSeries>(0.0, 0.0, 0.0); }
compilation error,190,add,[CE] cannot find symbol, ,if(getTimePeriodClass()!= null) { this.timePeriodClass = getTimePeriodClass(); } else { this.data = new ArrayList(); }
patch is same with buggy,581,replace,, if(c!=  this.timePeriodClass)  {  ,if(c!= this.timePeriodClass) {
compilation error,1273,replace,[CE] class or interface expected, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,}
increase failing tests,1058,add, [FE] SeriesException, ,if(this.data.size() > 0) { throw new SeriesException(""); }
compilation error,463,add,[CE] cannot find symbol, ,checkOldItem(index);
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  ,this.timePeriodClass = name.getClass(); this.minY = minY;
increase failing tests,188,replace, [FE] NullPointerException, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  ,this.timePeriodClass = timePeriodClass.getClass(); this.minY = minY;
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  this.minY  =  minY;  , 
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,1288,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)&& Double.isNaN(b)) {
compilation error,564,add,[CE] cannot find symbol, ,updateBounds(item.getPeriod(), this);
compilation error,1068,add,[CE] void cannot be dereferenced, ,System.err.println("Unable to add cloned item. ").println();
compilation error,463,add,[CE] ';' expected, ,for(int i = 0; i < this.data.size(); i++) { RegularTimePeriod getTimePeriod(getItemCount(), index); } else { return getDataItem(index).getPeriod(); }
patch is same with buggy,463,replace,, this.data.get(index);  , 
compilation error,667,add,[CE] cannot find symbol, ,item.setDataItem(getDataItem(period), value, notify);
compilation error,667,add,[CE] cannot find symbol, ,item.setDataItem(getDataItem(period));
compilation error,667,add,[CE] cannot find symbol, ,item.setDataItem(getDataItem(period), value);
compilation error,654,add,[CE] cannot find symbol, ,updateBounds(period, getPeriodType(), value);
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
compilation error,1217,add,[CE] cannot find symbol, ,item.setDataItem(yN);
compilation error,1217,add,[CE] cannot find symbol, ,item.setDataItem(item);
compilation error,187,add,[CE] cannot find symbol, ,this.domain = domain; this.data = new ArrayList();
compilation error,1068,replace,[CE] illegal start of expression, e.printStackTrace();  ,e.printStackTrace(clone);
compilation error,1068,replace,[CE] illegal start of expression, e.printStackTrace();  ,e.printStackTrace(this);
compilation error,654,replace,[CE] illegal start of expression, fireSeriesChanged();  ,refreshBounds();
compilation error,596,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an instance of");
compilation error,1212,replace,[CE] bad operand types for binary operator '<', if(yN!=  null)  {  ,if(yN!= null && item.getValue() < this.minY) {
compilation error,1212,replace,[CE] bad operand types for binary operator '<', if(yN!=  null)  {  ,if(yN!= null && item.getValue() < this.maxY) {
patch is same with buggy,596,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  , 
compilation error,667,replace,[CE] cannot find symbol, item.setValue(item.getValue());  ,item.setValue(period.getValue() + 1);
compilation error,188,add,[CE] no suitable method found for max(long), ,this.maximumItemAge = Math.max(maximumItemAge);
compilation error,188,add,[CE] no suitable method found for max(long,Class), ,this.maximumItemAge = Math.max(maximumItemAge, name.getClass());
compilation error,1212,replace,[CE] class or interface expected, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,yN = item.getYValue();
compilation error,189,add,[CE] cannot find symbol, ,this.timePeriodClass = createTimePeriodClass(name); this.timePeriodClass = name.getClass();
compilation error,189,add,[CE] cannot find symbol, ,this.timePeriodClass = createTimePeriodClass(name); this.timePeriodClass = name;
compilation error,187,add,[CE] cannot find symbol, ,this.timePeriodClass = createTimePeriodClass(name);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,1266,add,[CE] illegal start of expression, ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.max(a, b); }
compilation error,1266,add,[CE] illegal start of expression, ,if(Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,1266,add,[CE] illegal start of expression, ,if(Double.isNaN(b)) { return a; if(Double.isNaN(b)) { return Math.min(a, b); }
compilation error,187,add,[CE] cannot find symbol, ,this.domain = getDomain();
compilation error,187,add,[CE] no suitable method found for getDataItem(Comparable), ,this.data = getDataItem(name);
patch is same with buggy,576,replace,, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)item.clone();
compilation error,576,replace,[CE] <identifier> expected, item  =(TimeSeriesDataItem)item.clone();  ,item =(TimeSeriesDataItem)item.getDataItem(notify);
compilation error,189,replace,[CE] cannot find symbol, this.timePeriodClass  =  name.getClass();  ,if(name == null) { this.timePeriodClass = getTimePeriodClass(); } else { this.data = new ArrayList(); }
compilation error,189,replace,[CE] cannot find symbol minItemCount, this.timePeriodClass  =  name.getClass();  ,this.minItemCount = getMinimumItemCount();
compilation error,1292,add,[CE] reached end of file while parsing, ,if(!Double.isNaN(a)&&!Double.isNaN(b)) {
patch is same with buggy,878,replace,, long  duration  =  getTimePeriod(0).getSerialIndex();  ,long duration = getTimePeriod(0).getSerialIndex();
compilation error,878,replace,[CE] cannot find symbol, long  duration  =  getTimePeriod(0).getSerialIndex();  ,long duration = getTimePeriod(0).getItemCount();
increase failing tests,1212,add, [FE] SeriesException, ,if(yN!= null) { yN = item.getValue(); } else { throw new SeriesException(""); }
patch is same with buggy,582,replace,, c  =  item.getPeriod().getClass();  ,c = item.getPeriod().getClass();
patch is same with buggy,1265,replace,, if(Double.isNaN(a)||  Double.isInfinite(b))  {  ,if(Double.isNaN(a)|| Double.isInfinite(b)) {
patch is same with buggy,1217,replace,, item.setValue(yN);  ,item.setValue(yN);
compilation error,1292,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(c)) {
compilation error,1292,add,[CE] reached end of file while parsing, ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)&& Double.isNaN(b)) {
compilation error,187,add,[CE] incompatible types, ,this.domain = domain.getClass();
compilation error,187,add,[CE] cannot find symbol, ,this.data = new ArrayList();
patch is same with buggy,189,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  -  1;  ,this.maxY = Double.NaN - 1;
compilation error,1265,add,[CE] illegal start of expression, ,if(Double.isNaN(a)&& Double.isNaN(b)) {
increase failing tests,1058,replace, [FE]  Size, if(this.data.size()  >  1)  {  ,if(this.data.size() > 0 && copy.data.size() > 0) {
patch is same with buggy,188,replace,, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getClass();
increase failing tests,188,replace, [FE] NullPointerException, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = timePeriodClass.getClass();
patch is same with buggy,626,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,189,add,[CE] cannot find symbol, ,if(name!= null) { this.timePeriodClass = name.getClass(); } else { this.data = new ArrayList(); }
compilation error,681,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(period, getPeriodType(), value);
compilation error,627,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" for that time period. Duplicates are not");
compilation error,627,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation");
compilation error,626,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" for that time period. Duplicates are not");
patch is same with buggy,603,replace,, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  , 
patch is same with buggy,195,replace,, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  ,this.minY = Double.NaN; this.maxY = Double.NaN;
patch is same with buggy,195,replace,, this.minY  =  Double.NaN;  this.maxY  =  Double.NaN;  , 
patch is same with buggy,192,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,680,add,[CE] no suitable method found for add(RegularTimePeriod,Number,boolean), ,this.data.add(period, value, false);
increase failing tests,606,add, [FE] AssertionFailedError, ,this.data.add(item); fireSeriesChanged();
compilation error,606,add,[CE] bad operand type TimeSeriesDataItem for unary operator '-', ,this.data.add(-item); fireSeriesChanged();
compilation error,581,replace,[CE] cannot find symbol TimePeriodClass, if(c!=  null)  {  ,if(c!= this.TimePeriodClass) {
patch is same with buggy,627,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,170,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds();
compilation error,694,add,[CE] cannot find symbol, ,item.add(period, notify);
compilation error,694,add,[CE] cannot find symbol, ,item.setDataItem(getDataItem(period), value, notify);
compilation error,694,add,[CE] cannot find symbol, ,item.setDataItem(getDataItem(period), value);
compilation error,1056,add,[CE] cannot find symbol Arrays, ,Arrays.sort(this.data);
compilation error,598,add,[CE] illegal start of expression, ,if(count == 0 && item.getPeriod().compareTo(", ")> 0) {
compilation error,582,add,[CE] inconvertible types, ,c =(TimePeriod)item.getPeriod().getClass();
increase failing tests,582,add, [FE] NullPointerException, ,c = this.timePeriodClass.getClass();
patch is same with buggy,190,replace,, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClass();
compilation error,190,replace,[CE] cannot find symbol, this.timePeriodClass  =  getTimePeriodClass();  ,this.timePeriodClass = getTimePeriodClassName();
compilation error,681,add,[CE] no suitable constructor found for Long(Number), ,this.data.add(period, new Long(value));
compilation error,463,replace,[CE] cannot find symbol, getDataItem(index);  ,checkDataItem(index);
compilation error,463,replace,[CE] cannot find symbol, getDataItem(index);  ,checkAndUpdate(index, new DataItem(getTimePeriod(), index));
compilation error,629,add,[CE] generics are not supported in -source 1.4, ,if(this.data.size() > this.maximumItemCount) <
patch is same with buggy,604,replace,, if(item.getPeriod().compareTo(last)  ==  0)  {  , 
patch is same with buggy,694,replace,, item.setValue(value);  , 
patch is same with buggy,1056,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1056,replace,[CE] cannot find symbol copy, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item." + start +": failed to add cloned item.");
increase failing tests,879,add, [FE]  Size, ,long maximum = getTimePeriod(getItemCount() + 1).getSerialIndex();
compilation error,1292,replace,[CE] cannot find symbol m, if(Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b)||  Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(m)|| Double.isNaN(b)) {
compilation error,694,replace,[CE] not a statement, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notify;
patch is same with buggy,694,replace,, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); fireSeriesChanged();
compilation error,879,add,[CE] variable latest is already defined in method removeAgedItems(boolean), ,long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = true;
increase failing tests,600,add, [FE] AssertionFailedError, ,fireSeriesChanged(); this.data.add(item);
compilation error,600,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(",");
compilation error,606,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data);
compilation error,606,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data.size() - 1);
patch is same with buggy,1217,replace,, item.setValue(yN);  fireSeriesChanged();  ,item.setValue(yN); fireSeriesChanged();
compilation error,463,add,[CE] cannot find symbol, ,checkPeriod(getTimePeriod(index));
compilation error,463,add,[CE] cannot find symbol, ,checkOldFormat();
patch is same with buggy,1288,replace,, if(Double.isNaN(a)||  Double.isNaN(b))  {  ,if(Double.isNaN(a)|| Double.isNaN(b)) {
compilation error,193,add,[CE] cannot find symbol minItemAge, ,this.minItemAge = Long.MAX_VALUE;
compilation error,1269,add,[CE] illegal start of expression, ,if(Double.isNaN(a)&& Double.isNaN(b)) {
compilation error,1269,add,[CE] illegal start of expression, ,if(!Double.isNaN(a)&&!Double.isNaN(b)) {
patch is same with buggy,189,replace,, this.timePeriodClass  =  name.getClass();  ,this.timePeriodClass = name.getClass();
patch is same with buggy,186,replace,, super(name,  domain);  ,super(name, domain);
patch is same with buggy,600,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,600,replace,[CE] bad operand types for binary operator '-', fireSeriesChanged();  ,updateBounds(item.getPeriod() - 1);
increase failing tests,189,add, [FE] NullPointerException, ,this.timePeriodClass = timePeriodClass.getClass();
compilation error,1212,add,[CE] illegal start of expression, ,if(yN!= null && item.getValue() < null) {
patch is same with buggy,1212,replace,, if(yN!=  null)  {  double  y  =  yN.doubleValue();  item.setValue(item.getValue());  item.setValue(item.getValue());  }  ,if(yN!= null) { double y = yN.doubleValue(); item.setValue(item.getValue()); item.setValue(item.getValue()); }
patch is same with buggy,194,replace,, this.minY  =  Double.NaN;  ,this.minY = Double.NaN;
compilation error,1296,replace,[CE] class or interface expected, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  else  if(Double.isNaN(a)||  Double.isNaN(b))  {  return  b;  }  ,}
increase failing tests,193,add, [FE] StackOverflowError, ,this.data.add(new TimeSeries(name, domain, range));
compilation error,193,add,[CE] cannot find symbol, ,this.data.add(new Data(name, domain, range));
compilation error,877,add,[CE] illegal start of expression, ,if(this.data!= null) {
compilation error,877,add,[CE] illegal start of expression, ,if(this.data == null) {
increase failing tests,653,add, [FE] SeriesException, ,add(period, new Double(value), true);
increase failing tests,1058,add, [FE] IllegalArgumentException, ,if(start < end) { throw new IllegalArgumentException(""); }
increase failing tests,1058,add, [FE] IllegalArgumentException, ,if(start < this.data.size()) { throw new IllegalArgumentException(""); }
compilation error,1273,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isNaN(b))  {  return  a;  }  ,[Delete] else if(Double.isNaN(a)|| Double.isNaN(b)) { return a; } else if(Double.isNaN(a)|| Double.isNaN(b)) { return b; }
patch is same with buggy,463,replace,, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getPeriod();
compilation error,463,replace,[CE] method getPeriod in class TimeSeriesDataItem cannot be applied to given types;, return  getDataItem(index).getPeriod();  ,return getDataItem(index).getPeriod(0);
patch is same with buggy,1053,replace,, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item.");
compilation error,1053,replace,[CE] <identifier> expected, System.err.println( "Failed  to  add  cloned  item. ");  ,System.err.println("Failed to add cloned item." + start +": failed to add cloned item.");
patch is same with buggy,629,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,879,replace,, boolean  removed  =  true;  , 
