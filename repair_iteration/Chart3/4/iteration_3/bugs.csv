bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(start);    copy.data  =  new  java.util.ArrayList(start);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
2	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    copy.data  =  new  java.util.ArrayList(start);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
3	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Copy.data  =  new  java.util.ArrayList(start);  [CE]  cannot  find  symbol  Copy  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    Copy.data  =  new  java.util.ArrayList(start);	  	non-compiled	[CE]  cannot  find  symbol  Copy	8	None	add
4	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Collections.sort(copy);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Collections.sort(copy);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    Collections.sort(copy);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	8	None	add
5	[BUG]  [BUGGY]  Series  copy  =(Series)this.data.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Series  copy  =(Series)this.data.clone();  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Series  copy  =(Series)this.data.clone();	  Series    copy    =(Series)copy.clone();    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	2	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
7	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
8	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);	  	non-compiled	[CE]  ';'  expected	5	None	add
9	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    java.util.ArrayList(this.data.size());  Collections.sort(this.data);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
10	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  start);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	18	None	replace
11	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]                AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	18	None	replace
12	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start,  end);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start,  end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start,  end);	  copy.data    =    new    java.util.ArrayList(start);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	9	None	replace
13	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    Copyer    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
14	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    Copyer    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
15	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  LinkedList(end);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  LinkedList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  LinkedList(end);  }	  if(start    >    end)    {    copy.data    =    new    ArrayList(end);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
16	[BUG]  [BUGGY]  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(start);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(start);	  copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	13	None	replace
17	[BUG]  [BUGGY]  if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(copy);    	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	24	None	replace
18	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  1);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start,  end  -  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start,    end);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	17	None	replace
19	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  TimeSeries  copy.data  =  new  ArrayList(end);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  TimeSeries  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  TimeSeries  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  ';'  expected	22	None	replace
20	[BUG]  [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
21	[BUG]  [BUGGY]  ArrayList  copy  =  new  ArrayList(start);  Collections.sort(copy);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  ArrayList  copy  =  new  ArrayList(start);  Collections.sort(copy);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	ArrayList  copy  =  new  ArrayList(start);  Collections.sort(copy);	  copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
22	[BUG]  [BUGGY]  Collections.sort(copy,  start);  [CE]  no  suitable  method  found  for  sort(TimeSeries,int)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Collections.sort(copy,  start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Collections.sort(copy,  start);	  Collections.sort(copy);    	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries,int)	30	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	Collections.sort(this.data);	  Collections.sort(copy);    	compilable	  [FE]  AssertionFailedError  	30	3	replace
24	[BUG]  [BUGGY]  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Collections.sort(this.data);	  Collections.sort(copy);    	compilable	  [FE]  AssertionFailedError  	30	3	replace
25	[BUG]  [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  TimeSeries  copy  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
28	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	31	1	add
30	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	31	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
32	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
33	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)copy.get(start,  end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)copy.get(start,  end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)copy.get(start,  end);	          TimeSeries    copy    =(TimeSeries)copy.get(start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	26	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
35	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
37	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(end);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(start);  copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start  +  1);	  copy.data    =    new    java.util.ArrayList(end    +    1);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
39	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start  +  1);	  copy.data    =    new    java.util.ArrayList(end    +    1);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
40	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(end    +    1);    copy.data  =  new  java.util.ArrayList(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	33	1	add
42	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  copy.data  =  new  java.util.ArrayList(end  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    copy.data  =  new  java.util.ArrayList(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	33	1	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy.data);  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(end    +    1);    Collections.sort(copy.data);  copy.data  =  new  java.util.ArrayList(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	33	1	add
44	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy.data);  copy.data  =  new  java.util.ArrayList(end  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy.data);  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    Collections.sort(copy.data);  copy.data  =  new  java.util.ArrayList(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	33	1	add
45	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end  +  1);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end  +  1);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	33	None	add
46	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  copy.data  =  new  ArrayList(end);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(start);  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	if(this.data!=    null)    {    copy.data    =    new    java.util.ArrayList(this.data.size());    }    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
48	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=    null)    {    copy.data    =    new    java.util.ArrayList(this.data.size());    }    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data  ==  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	if(this.data!=    null)    {    copy.data    =    new    java.util.ArrayList(this.data.size());    }    if(this.data  ==  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
50	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data  ==  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  if(this.data  ==  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=    null)    {    copy.data    =    new    java.util.ArrayList(this.data.size());    }    if(this.data  ==  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
51	[BUG]  [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  Copy.data  =  new  java.util.ArrayList(this.data.size());  [CE]  cannot  find  symbol  Copy  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Copy.data  =  new  java.util.ArrayList(this.data.size());	  copy.data    =    new    java.util.ArrayList(this.data.size());    Copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol  Copy	7	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
54	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
56	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data.size()  >  0)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
58	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
59	[BUG]  [BUGGY]  if(copy.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }	  if(this.data!=    null)    {    copy.data    =    new    ArrayList(this.data.size());    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
60	[BUG]  [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
61	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  TimeSeries  copy  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
62	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(start);  }	  if(start    >    end)    {    copy.data    =    new    ArrayList(end);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
63	[BUG]  [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
64	[BUG]  [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
66	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  TimeSeries  copy  =  new  java.util.ArrayList(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  TimeSeries  copy  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    TimeSeries  copy  =  new  java.util.ArrayList(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	8	None	add
67	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  TimeSeries  copy.data  =  new  java.util.ArrayList(start);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  TimeSeries  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    TimeSeries  copy.data  =  new  java.util.ArrayList(start);	  	non-compiled	[CE]  ';'  expected	8	None	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
69	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
70	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =(TimeSeries)copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =(TimeSeries)copy.clone();  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries  copy  =(TimeSeries)copy.clone();	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	3	None	add
71	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
72	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
73	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
74	[BUG]  [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
75	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
76	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
77	[BUG]  [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
78	[BUG]  [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    CopySeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy  =(TimeSeries)copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy  =(TimeSeries)copy.clone();  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    TimeSeries  copy  =(TimeSeries)copy.clone();	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	add
80	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy  =(TimeSeries)copy.data.get(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  TimeSeries  copy  =(TimeSeries)copy.data.get(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    TimeSeries  copy  =(TimeSeries)copy.data.get(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	add
81	[BUG]  [BUGGY]  ArrayList  data  =  new  ArrayList(this.data.size());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  ArrayList  data  =  new  ArrayList(this.data.size());  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	ArrayList  data  =  new  ArrayList(this.data.size());	  copy.data    =    new    java.util.ArrayList(this.data.size());    Copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
82	[BUG]  [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy.data  =  new  ArrayList(start);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  start)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  ';'  expected	22	None	replace
83	[BUG]  [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  start)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    Copyer    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
84	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start  +  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	18	None	replace
85	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  TimeSeries  copy  =  new  java.util.ArrayList(end  +  1);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  TimeSeries  copy  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    TimeSeries  copy  =  new  java.util.ArrayList(end  +  1);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	33	None	add
86	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  Collections.sort(copy);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    Collections.sort(copy);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	33	None	add
87	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  TimeSeries  copy.data  =  new  java.util.ArrayList(end  +  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  TimeSeries  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    TimeSeries  copy.data  =  new  java.util.ArrayList(end  +  1);	  	non-compiled	[CE]  ';'  expected	33	None	add
88	[BUG]  [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  ';'  expected	25	None	replace
89	[BUG]  [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  ';'  expected	25	None	replace
90	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
91	[BUG]  [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  TimeSeries  copy  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =(TimeSeries)copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =(TimeSeries)copy.clone();  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries  copy  =(TimeSeries)copy.clone();	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	31	None	add
93	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =(TimeSeries)copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =(TimeSeries)copy.clone();  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    TimeSeries  copy  =(TimeSeries)copy.clone();	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	10	None	add
94	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =(TimeSeries)this.data.get(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    TimeSeries  copy  =(TimeSeries)this.data.get(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	10	None	add
95	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  [CE]  cannot  find  symbol  start  [FE]        AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);	  	non-compiled	[CE]  cannot  find  symbol  start	10	None	add
96	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  If(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  If(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=    null)    {    copy.data    =    new    java.util.ArrayList(this.data.size());    }    If(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  	non-compiled	[CE]  ';'  expected	15	None	add
97	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {  Collections.sort(copy);  }  [CE]  cannot  find  symbol  start  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        copy.data    =    new    java.util.ArrayList(this.data.size());    if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  }  else  {  Collections.sort(copy);  }	  	non-compiled	[CE]  cannot  find  symbol  start	3	None	add
98	[BUG]  [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(end);  }  [CE]  cannot  find  symbol  start  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  start)  {  copy.data  =  new  ArrayList(end);  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol  start	11	None	replace
99	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Copyer  copy.data  =  new  java.util.ArrayList(start);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  Copyer  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(start);    Copyer  copy.data  =  new  java.util.ArrayList(start);	  	non-compiled	[CE]  ';'  expected	8	None	add
100	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  copy  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol  copy	32	None	replace
101	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
102	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  else  {  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  end)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(start);  }	  copy.data    =    new    java.util.ArrayList(end);    Copyer    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
104	[BUG]  [BUGGY]  Collections.sort(this.data,  copy);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  Collections.sort(this.data,  copy);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Collections.sort(this.data,  copy);	  Collections.sort(copy);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
105	[BUG]  [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy  ==  null)  {  copy.data  =  new  ArrayList(start);  }  else  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    CopySeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
106	[BUG]  [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(end);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy  ==  null)  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy  ==  null)  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    CopySeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.copy.get(start);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.copy.get(start);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.copy.get(start);	  TimeSeries    copy    =(TimeSeries)this.copy.clone();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
108	[BUG]  [BUGGY]  if(end  >  start)  {  copy.data  =  new  ArrayList(end);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(end  >  start)  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(end  >  start)  {  copy.data  =  new  ArrayList(end);  }	  if(start    >    end)    {    copy.data    =    new    ArrayList(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
109	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Copy.data  =  new  java.util.ArrayList(this.data.size());  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  Copy.data  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
110	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(this.data.size());        Collections.sort(this.data);    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);	  	non-compiled	[CE]  <identifier>  expected	5	None	add
111	[BUG]  [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    TimeSeries    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
112	[BUG]  [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  if(start  <  0)  {  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);  if(start  <  0)  {  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data        =        new        java.util.ArrayList(end);        copy.data    =    new    java.util.ArrayList(end);    if(start  <  0)  {  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  }	  	non-compiled	[CE]  <identifier>  expected	10	None	add
113	[BUG]  [BUGGY]  if(this.data  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data  ==  null)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
114	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
115	[BUG]  [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  <  =  end)  {  copy.data  =  new  ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries    copy    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
116	[BUG]  [BUGGY]  if(this.data.size()  >  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [CE]  cannot  find  symbol  end  [FE]          AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(this.data.size()  >  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data.size()  >  0)  {  copy.data  =  new  ArrayList(this.data.size());  Collections.sort(copy);  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(copy);    	non-compiled	[CE]  cannot  find  symbol  end	24	None	replace
117	[BUG]  [BUGGY]  copy.data  =  new  ArrayList(end);  [CE]  cannot  find  symbol  end  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  ArrayList(end);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  ArrayList(end);	  copy.data    =    new    java.util.ArrayList(start);    	non-compiled	[CE]  cannot  find  symbol  end	9	None	replace
118	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start,  end);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start,  end);  [BUGGY]      copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start,  end);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    -    start);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
119	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  CopyerDataItem  copy  =  new  java.util.ArrayList(end  +  1);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  CopyerDataItem  copy  =  new  java.util.ArrayList(end  +  1);  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end    +    1);    CopyerDataItem  copy  =  new  java.util.ArrayList(end  +  1);	  	non-compiled	[CE]  <identifier>  expected	33	None	add
120	[BUG]  [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(end);  }  [CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(     "Requires  start  >=  0.     ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(     "Requires  start  <=  end.     ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();      [BUGGY]  if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]      if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(copy!=  null)  {  copy.data  =  new  ArrayList(end);  }  else  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);    copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;	13	None	replace
