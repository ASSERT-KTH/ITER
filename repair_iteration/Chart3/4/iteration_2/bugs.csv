bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.clone();  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.clone();	      TimeSeries    copy    =(TimeSeries)copy.clone();    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	replace
2	[BUG]  [BUGGY]  Series  copy  =(Series)copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  Series  copy  =(Series)copy.clone();  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Series  copy  =(Series)copy.clone();	      	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	4	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	1	1	add
4	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	1	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
6	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
7	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Copy.data  =  new  java.util.ArrayList(this.data.size());  [CE]  cannot  find  symbol  Copy  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    Copy.data  =  new  java.util.ArrayList(this.data.size());	  	non-compiled	[CE]  cannot  find  symbol  Copy	1	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(start);	  copy.data    =    new    java.util.ArrayList(end);    	compilable	  [FE]  AssertionFailedError  	9	1	replace
9	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(start);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(start);	  copy.data    =    new    java.util.ArrayList(end);    	compilable	  [FE]  AssertionFailedError  	9	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
11	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    copy.data  =  new  java.util.ArrayList(end);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
12	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  CopySeries  copy.data  =  new  java.util.ArrayList(end);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  CopySeries  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    CopySeries  copy.data  =  new  java.util.ArrayList(end);	  	non-compiled	[CE]  ';'  expected	8	None	add
13	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);  copy.data  =  new  java.util.ArrayList(end);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	8	None	add
14	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    	compilable	  [FE]  AssertionFailedError  	2	1	replace
16	[BUG]  [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(this.data!=  null)  {  copy.data  =  new  java.util.ArrayList(this.data.size());  }	  copy.data    =    new    java.util.ArrayList(this.data.size());    	compilable	  [FE]  AssertionFailedError  	2	1	replace
17	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]          AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start,  end);	      TimeSeries    copy    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	6	None	replace
18	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]          AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  -  start);	      TimeSeries    copy    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	6	None	replace
19	[BUG]  [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	if(start  >  end)  {  copy.data  =  new  ArrayList(end);  }	  copy.data    =    new    java.util.ArrayList(end);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
20	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =  new  java.util.ArrayList(end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    TimeSeries  copy  =  new  java.util.ArrayList(end);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	8	None	add
21	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Collections.sort(copy);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    Collections.sort(copy);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	8	None	add
22	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy.data  =  new  java.util.ArrayList(end);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  TimeSeries  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    TimeSeries  copy.data  =  new  java.util.ArrayList(end);	  	non-compiled	[CE]  ';'  expected	8	None	add
23	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries  copy  =  new  java.util.ArrayList(this.data.size());	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	1	None	add
24	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(copy);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]      AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(copy);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(copy);	  	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	1	None	add
25	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    TimeSeries  copy.data  =  new  java.util.ArrayList(this.data.size());	  	non-compiled	[CE]  ';'  expected	1	None	add
26	[BUG]  [BUGGY]      TimeSeries  copy  =(TimeSeries)copy.get(start);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]      TimeSeries  copy  =(TimeSeries)copy.get(start);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	        TimeSeries  copy  =(TimeSeries)copy.get(start);	  	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	3	None	add
27	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]          AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(end);	      TimeSeries    copy    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	6	None	replace
28	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Copyer  copy.data  =  new  java.util.ArrayList(end);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end);  Copyer  copy.data  =  new  java.util.ArrayList(end);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(end);    Copyer  copy.data  =  new  java.util.ArrayList(end);	  	non-compiled	[CE]  ';'  expected	8	None	add
29	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.copy.clone();  [CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)  [FE]        AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.copy.clone();  [BUGGY]    copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	TimeSeries  copy  =(TimeSeries)this.copy.clone();	      TimeSeries    copy    =(TimeSeries)copy.clone();    	non-compiled	[CE]  variable  copy  is  already  defined  in  method  createCopy(int,int)	5	None	replace
30	[BUG]  [BUGGY]  Collections.sort(copy);  [CE]  no  suitable  method  found  for  sort(TimeSeries)  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  Collections.sort(copy);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	Collections.sort(copy);	      	non-compiled	[CE]  no  suitable  method  found  for  sort(TimeSeries)	4	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	1	1	add
32	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(this.data.size());  Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data    =    new    java.util.ArrayList(this.data.size());    Collections.sort(this.data);  copy.data  =  new  java.util.ArrayList(this.data.size());	  	compilable	  [FE]  AssertionFailedError  	1	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	add	copy.data  =  new  java.util.ArrayList(end  +  1);	  copy.data    =    new    java.util.ArrayList(end);    	compilable	  [FE]  AssertionFailedError  	9	1	replace
34	[BUG]  [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  TimeSeries  createCopy(int  start,  int  end)  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();    [BUGGY]  copy.data  =  new  java.util.ArrayList(end  +  1);  [BUGGY]    if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  copy.add(clone);  }  catch  (SeriesException  e)  {  e.printStackTrace();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  double  maxY  minY  oldY  value  yy  TimeSeriesDataItem  clone  item  Class  c  periodClass  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  msg  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart3/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	1057	1057	1	replace	copy.data  =  new  java.util.ArrayList(end  +  1);	  copy.data    =    new    java.util.ArrayList(end);    	compilable	  [FE]  AssertionFailedError  	9	1	replace
