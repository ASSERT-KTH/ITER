patch is same with buggy,188,replace,, this.minY  =  minY  %  20;    ,this.minY = minY % 20;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  2  /  2  +  1;    ,this.maxY = Double.NaN * 2 / 2 + 1;
patch is same with buggy,188,replace,, this.minY  =  minY  *  3;    ,this.minY = minY * 3;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, as // wouldn't happen next, as that // happens next instead;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that // happens next anyway; }!
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove old items if needed, but // won't notify anybody, as that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // won't notify anybody, as that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove old items if needed, but // won't notify anyone, as that // happens next anyway; }
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 12 / 7;
compilation error,1269,add,[CE] missing return statement,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b))
compilation error,1269,add,[CE] ')' expected,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  100000;    ,this.minY = Double.NaN / 100000;
compilation error,634,replace,[CE] illegal start of type, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }?!(this.timePeriodClass = item.getTimePeriodClass()
compilation error,634,replace,[CE] illegal start of type, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }!(this.timePeriodClass = item.getTimePeriodClass());
compilation error,634,replace,[CE] illegal start of type, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }?!(this.timePeriodClass = item.getTimePeriodClass());
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2  +  Long.MIN_VALUE;    ,this.minY = Double.NaN / 2 + Long.MIN_VALUE;
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(this.timePeriodClass)&&  item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals("")) {
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  /  2  +  Long.MIN_VALUE;    ,this.minX = Double.NaN * 4 + Long.MIN_VALUE;
compilation error,188,replace,[CE] cannot find symbol MinY, this.minY  =  maxY  /  10;    ,this.minY = MinY + 1;
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b +
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0 * 1;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1);| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,removeAllItems(true);// remove Old Items if needed, as this // happens next anyway;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  2  +  Integer.MIN_VALUE;    ,this.minY = Double.NaN % 2 + Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2 / Integer.MAX_VALUE;
compilation error,193,add,[CE] cannot find symbol naN,   ,this.minY = Double.naN * 2 / Integer.MAX_VALUE;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  items  if  needed;    ,if(true) { removeAgedItems(true);// remove items if needed; }
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  items  if  needed;    ,// remove items if needed;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  2.0;    ,this.maxY = Double.NaN * 2.0;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify any, as that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, but // do not notify any, as that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify any, as that // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 20.0;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 20.0;
compilation error,194,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN % 20.0;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  20.0;    ,this.maxY = Double.NaN % 20.0;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happen next instead; }
compilation error,634,replace,[CE] illegal start of type, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  2  /  Integer.MAX_VALUE;    ,this.minX = Double.NaN * 2 + Long.MAX_VALUE;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 12 / 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 1.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 3.0;
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  100  +  Integer.MAX_VALUE;    ,this.minX = Double.NaN * 7 + Long.MIN_VALUE;
patch is same with buggy,188,replace,, this.minY  =  maxY  /  10;    ,this.minY = maxY / 10;
patch is same with buggy,188,replace,, this.minY  =  maxY  %  2;    ,this.minY = maxY % 2;
compilation error,188,replace,[CE] cannot find symbol MinY, this.minY  =  maxY  %  2;    ,this.minY = MinY % 2;
patch is same with buggy,188,replace,, this.minY  =  this.minY  %  1;    ,this.minY = this.minY % 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2 / 4;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2 / 5;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 1.5;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  +  Long.MAX_VALUE;    ,this.minY = Double.NaN * 2 + Long.MAX_VALUE;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, as // won't
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't notify
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't happen next
patch is same with buggy,188,replace,, this.maxY  =  minY  /  4  +  1;    ,this.maxY = minY / 4 + 1;
patch is same with buggy,1269,replace,, if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because that // happens next anyway...
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because that // happens next anyway
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because that // happens next anyway...
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 3;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 2 + 1;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 3 + 1;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as that // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed,
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as that // happens next anyway; } if(notify) { removeAgedItems(true);// remove items if needed, // wouldn't notify any, as that
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as that // happens next anyway; } if(notify) { removeAgedItems(true);// remove old items if needed, // wouldn't notify any, as that
compilation error,634,replace,[CE] class or interface expected, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); &/ remove Items if needed, as this // happen next
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAllItems if needed, as this // happen next anyway; }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  +  2L;    ,this.minY = Double.NaN + 2L;
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a), Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) {
compilation error,188,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN * 2L;
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN * 2L;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  1.0  +  1;    ,this.minY = Double.NaN * 1.0 + 1;
compilation error,188,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  %  10;    ,this.minY = Long.NaN % 100;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) }
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.hasEquals(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) {
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 2 + Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 100 + Integer.MAX_VALUE;
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because that // happens next anyway...
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because that // happens next anyway...
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAllItems if needed, but // don't notify any, because that // happens next anyway...
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  1))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + 1)) {
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0 / 7 + 1;
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().getClass().equals( " ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().getClass().equals(" ")) {
compilation error,584,add,[CE] unclosed string literal,   ,else if(item.getPeriod().getClass().equals(")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals( "+ ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals( "+")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals("+")) {
patch is same with buggy,1269,replace,, if(Double.isInfinite(a  *  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isInfinite(a * b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,188,replace,[CE] bad operand types for binary operator '%', this.maxY  =  minY  %  2  *  4;    ,this.maxY = domain % 2;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN - 10;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, but // wouldn't notify anyone
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, but // wouldn't notify
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove old items if needed, but // wouldn't notify
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, as this // happens next instead;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1 || Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,replace,[CE] cannot find symbol, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Boolean.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 6 / 2;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  3;    ,this.maxY = Double.NaN * 3;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happen next instead; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happen next instead; }!
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  anyone,  as  this  //  happens  next  instead;    ,if(true) { removeAgedItems(true);// remove old items if needed, // don't notify anyone, as this // happens next anyway; }
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  2  /  Integer.MAX_VALUE;    ,this.minX = Double.NaN / 2 + Integer.MAX_VALUE;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't happen next; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as // won't happen next; }!removeAgedItems(true);// remove old items if needed, as
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); }, as // won't happen next anyway; } 
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 3;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 3 / 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 2;
patch is same with buggy,188,replace,, this.minY  =  this.minY  /  2;    ,this.minY = this.minY / 2;
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anybody, because that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anyone, because that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove items if needed, // won't notify anybody, because that
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 1000000;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2 + Long.MIN_VALUE;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100  +  Integer.MAX_VALUE;    ,this.minY = Double.NaN * 100 + Integer.MAX_VALUE;
compilation error,584,add,[CE] 'else' without 'if',   ,else if(!this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(!this.timePeriodClass.equals(", ")&& item.getPeriod().getClass().equals(" / ")) {
compilation error,584,add,[CE] illegal start of expression,   ,else if(!this.timePeriodClass.equals(",")) && item.getPeriod().getClass().equals(" /")) {
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2 / 2 + 1;
compilation error,194,add,[CE] cannot find symbol miniX,   ,this.miniX = Double.NaN * 2 / 2 + 1;
patch is same with buggy,584,replace,, else  if(item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().getClass().equals("")) {
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 0.5 / 1;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0 / 8;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 10 / 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  %  20.0;    ,this.minY = Double.NaN % 2;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  %  20.0;    ,this.minX = Double.NaN % 2;
compilation error,194,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  %  20.0;    ,this.minY = Long.NaN % 2;
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove items if needed, but // wouldn't notify anyone, as this // happens next instead;
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify anyone, as this // happens next instead;
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 6 + 1;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove old items if needed, as // won't happen next, as that // happens next anyway;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.hasNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) }
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1.5;    ,this.maxY = Double.NaN * 1.5;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, as that // happens next instead;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  1000;    ,this.minY = Double.NaN / 1000;
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(item.getPeriod())|| item.getPeriod().getClass().equals(". ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(item.getPeriod())|| item.getPeriod().getClass().equals(". ")) {
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify anyone, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); }
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)|| item.getPeriod().getClass().equals(" ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)|| item.getPeriod().getClass().equals( " ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)|| item.getPeriod().getClass().equals("")) {
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // won't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getItemCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // won't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 100.0;
compilation error,194,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN / 100.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  1000000;    ,this.minY = Double.NaN % 1000000;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  6  /  1;    ,this.minY = Double.NaN * 6 / 1;
compilation error,634,add,[CE] ')' expected,   ,if(removeAgedItems(true);// remove items if needed;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  2L;    ,this.maxY = maxY % 2L;
patch is same with buggy,188,replace,, this.minY  =  minY  %  2L  +  1;    ,this.minY = minY % 2L + 1;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // won't notify anybody, because that // happens next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // won't notify anybody, because that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; } // removeAgedItems(true); } 
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; }!
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2.0 * 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100  +  Long.MIN_VALUE;    ,this.minY = Double.NaN * 100 + Long.MIN_VALUE;
compilation error,188,add,[CE] cannot find symbol minX,   ,this.minX = minY % 2L;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happens next instead; }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  10L;    ,this.minY = Double.NaN * 10L;
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  1.0  -  1;    ,this.minX = Double.NaN * 0.5 / 2;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 12 / Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol naN,   ,this.minY = Double.naN * 12 / Integer.MIN_VALUE;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify any, this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify any, this // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // don't notify any, this // happens next anyway; }
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  won't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, as // won't happen next, as that // happens next instead;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, as // doesn't happen next, as that // happens next anyway;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { removeAgedItems(true);// remove items if needed, as // won't notify any, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { removeAgedItems(true);// remove items if needed, as // won't notify any, as this // happens next anyway; } if(notify) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { removeAgedItems(true);// remove items if needed, as // won't happen next anyway; }
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 2.0 / 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 3.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 1.0 / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  10  +  Long.MAX_VALUE;    ,this.minY = Double.NaN * 10 + Long.MAX_VALUE;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  -  2L;    ,this.minY = Double.NaN - 2L;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  *  2.0;    ,this.minY = Double.NaN * 1.0;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  *  2.0;    ,this.minX = Double.NaN * 1.0;
compilation error,194,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  *  2.0;    ,this.minY = Long.NaN * 1.0;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  2;    ,this.maxY = Double.NaN % 2;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 3.0 / 2;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ do"t notify any, as this // happens next anyway;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }? n" :"t notify any, as this // happens next anyway;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }?!(this.timePeriodClass = item.getTimePeriodClass()); if(notify)
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify anybody, as that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify anybody, as
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify anyone, as that
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals(" ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals( " ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals("")) {
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  /  2  +  Long.MIN_VALUE;    ,this.minX = Double.NaN * 2 / Long.MIN_VALUE;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) }
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2))!=
patch is same with buggy,188,replace,, this.minY  =  minY  %  2D;    ,this.minY = minY % 2D;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // remove old items if needed, but // do't notify anybody, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // remove old items if needed, but // do't notify anyone, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // remove old items if needed, but // do't notify anybody, as this // happens next anyway; } 
patch is same with buggy,188,replace,, if(domain!=  null)  {  this.range  =  range;  }    ,if(domain!= null) { this.range = range; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0 / 6;
compilation error,188,replace,[CE] bad operand types for binary operator '%', this.maxY  =  minY  %  1;    ,this.maxY = range % 1;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0 / 4;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1.5 / 7;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  /  4;    ,this.minY = Double.NaN * 2.0 / 4;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 4 - 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  %  2;    ,this.minY = Double.NaN % 100;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  %  2;    ,this.minX = Double.NaN % 100;
compilation error,194,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  %  2;    ,this.minY = Long.NaN % 100;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  %  12;    ,this.minY = Double.NaN % 12;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  2  +  1;    ,this.maxY = maxY % 2 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  /  7  +  1;    ,this.minY = Double.NaN * 2.0 / 7 + 1;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1.5 / 2 + 1;
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // won't notify anybody, as this // happens next anyway;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, but // won't notify anybody
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // won't notify anyone, as this // happens next anyway;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify anyone, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but do not notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // won't notify anyone, as that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // won't notify anyone, as that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // won't notify anyone, as that's next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  do  not  notify  any,  as  that  //  happens  next  anyway;    ,if(true) { removeAgedItems(true);// remove old items if needed, but // do not notify any, as that // happens next anyway; }
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  2L;    ,this.maxY = Double.NaN * 2L;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as this // happens next anyway;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed,
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed,
patch is same with buggy,188,replace,, this.maxY  =  minY  %  2L;    ,this.maxY = minY % 2L;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b) || Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b) || Double.isInfinite(b + a)) {
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 10000.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2.0;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 20.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 10.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  1900;    ,this.minY = Double.NaN * 1900;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10000.0;    ,this.minY = Double.NaN % 10000.0;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); }, as that // happens next anyway; }
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / Integer.MIN_VALUE;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as this // happens next anyway;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as this // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed,
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify any, as this // happens next anyway; } if(notify) { removeAgedItems(true);// remove items if needed, // wouldn't notify any, as this // happen next anyway; }
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2500;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // won't notify any, because that // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // won't notify any, because that's next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // won't notify any, because that's next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happens next instead; }
compilation error,634,add,[CE] invalid method declaration; return type required,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  OldItems  if  needed,  as  that  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove OldItems if needed, as that // happens next anyway;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  2  +  1;    ,this.maxY = Double.NaN * 2 + 1;
compilation error,634,add,[CE] ')' expected,   ,if(removeAgedItems(true)&& remove old items if needed, as that // happen next instead;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happens next anyway; } if(notify) { fireSeriesChanged();
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happens next anyway; }
compilation error,634,add,[CE] invalid method declaration; return type required,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anybody, but that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anyone, but that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anybody but that
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN + 15;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1900;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100000;    ,this.minY = Double.NaN * 100000;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  12;    ,this.maxY = maxY % 12;
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  1.0  -  1;    ,this.minX = Double.NaN / 3.0;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  100.0;    ,this.maxY = Double.NaN / 100.0;
compilation error,188,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 4;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't happen next
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't happen next
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, as // wouldn't
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(false);//  remove  old  Items  if  needed;    ,// remove old Items if needed;
patch is same with buggy,634,replace,, removeAgedItems(false);//  remove  old  Items  if  needed;    ,removeAgedItems(false);// remove old Items if needed;
compilation error,188,add,[CE] cannot find symbol maxX,   ,this.maxX = Double.NaN / 1000;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2  *  Integer.MIN_VALUE;    ,this.minY = Double.NaN / 2 * Integer.MIN_VALUE;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // won't happen next instead; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // won't happen next; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // won't happen next instead; } // removeAgedItems(true); } 
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(this.timePeriodClass)||  item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().equals(this.timePeriodClass)|| item.getPeriod().getClass().equals("")) {
compilation error,188,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  +  2L;    ,this.minX = Double.NaN - 2L;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // won't notify any, as this // happens next instead; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // won't notify any, as this // happens next instead; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // won't notify any, as this // happens next instead; } 
compilation error,188,replace,[CE] cannot find symbol minX, this.minY  =  this.minY  /  1;    ,this.minX = this.minX / 2;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove old items if needed, // don't notify any, as this // happens next anyway;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  %  2  -  1;    ,this.minY = Double.NaN % 2 - 1;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  1000.0;    ,this.maxY = Double.NaN / 1000.0;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 7 / 2;
compilation error,193,replace,[CE] ';' expected, this.minY  =  Double.NaN  *  2  +  2;    ,this.minY = Double.NaN * 2, 2;
patch is same with buggy,188,replace,, this.maxY  =  maxY  *  2  +  1;    ,this.maxY = maxY * 2 + 1;
compilation error,584,replace,[CE] illegal start of type, else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(this.timePeriodClass.equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) { throw new SeriesException(" "); }
compilation error,584,replace,[CE] illegal start of type, else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(item.getPeriod().equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) { throw new SeriesException(" "); }
patch is same with buggy,584,replace,, else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(this.timePeriodClass.equals(item.getPeriod())&& item.getPeriod().getClass().equals(".")) { throw new SeriesException(""); }
compilation error,188,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  /  10L;    ,this.minX = Double.NaN * 2L;
compilation error,188,replace,[CE] bad operand types for binary operator '%', this.maxY  =  minY  %  3;    ,this.maxY = range % 3;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happens  next  instead;    ,if(removeAgedItems(true)&& remove OldItems if needed, as this // happens next instead;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happens  next  instead;    ,if(removeAgedItems(false)&& remove OldItems if needed, as this // happens next instead;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(false);//  remove  old  items  if  needed;    ,// remove old items if needed;
patch is same with buggy,634,replace,, removeAgedItems(false);//  remove  old  items  if  needed;    ,removeAgedItems(false);// remove old items if needed;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 7 + 1;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ remove old items if needed, but // don't notify any, because that // happens next anyway......
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); slated; &/ removeAgedItems(false); &/ remove old items if needed, but // don't notify any, because that // happens next anyway......
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify any, as this
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify any, as this // happens next
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, but // wouldn't notify any, as this // happens next anyway;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isInfinite(b)||  Double.isInfinite(a  +  2)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  1)||  Double.isInfinite(b)||  Double.isInfinite(a  +  2)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happens next instead; }
compilation error,634,add,[CE] invalid method declaration; return type required,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  100;    ,this.maxY = Double.NaN % 100;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  /  10L;    ,this.maxY = Double.NaN / 10L;
compilation error,188,replace,[CE] ';' expected, this.maxY  =  Double.NaN  /  10L;    ,this.maxY = Double.NaN / 10K;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2000;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 12 + Long.MIN_VALUE;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2000;    ,this.minY = Double.NaN / 2000;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // won't notify anyone, as this // happens next instead; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // won't notify anyone, as this // happens next instead; } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // won't notify anyone, as this // happens next instead; }!
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 6 / 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  Integer.MIN_VALUE;    ,this.minY = Double.NaN / Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1000 + Integer.MIN_VALUE;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  0.5  /  2;    ,this.minY = Double.NaN * 0.5 / 2;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(false); // remove old items if needed, as // won't happen next; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as this // happens next instead; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, but // do't notify
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, but // do't notify anyone
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); &/ do't notify anyone, as this // happens next anyway; }
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 3 + 1;
patch is same with buggy,634,replace,, removeAgedItems(false);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next;    ,removeAgedItems(false);// remove old items if needed, as // wouldn't happen next;
compilation error,634,replace,[CE] , removeAgedItems(false);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next;    ,if(!removeAgedItems(false)) throw new IllegalArgumentException("");// remove old items if needed, as // wouldn't happen next; }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2L;    ,this.minY = Double.NaN * 2L;
compilation error,634,replace,[CE] , removeAgedItems(false);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next  instead;    ,if(!removeAgedItems(false)) throw new IllegalArgumentException(""); // remove old items if needed, as // won't happen next; }
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a  +  b))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
patch is same with buggy,634,replace,, removeAgedItems(false);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next  instead;    ,removeAgedItems(false);// remove old items if needed, as // wouldn't happen next instead;
compilation error,634,replace,[CE] , removeAgedItems(false);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next  instead;    ,if(!removeAgedItems(false)) throw new IllegalArgumentException("");// remove old items if needed, as // wouldn't happen next instead; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // doesn't happen next; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // doesn't happen next; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); }, as // doesn't happen next; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, as // doesn't happen next; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as // doesn't happen next; }!removeAgedItems(true);// remove old items if needed, as
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove old items if needed, as this // happen next instead;
compilation error,634,replace,[CE] , removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(!removeAgedItems(true)) throw new SeriesException(""); // remove old items if needed, as this // happen next instead;
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // wouldn't notify anyone, because that // happens next anyway; }!
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;!
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;! throw new SeriesException(""); if(notify) { fireSeriesChanged();
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  10;    ,this.maxY = Double.NaN % 10;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  2  /  5;    ,this.maxY = Double.NaN * 2 / 5;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  4  -  1;    ,this.maxY = Double.NaN * 4 - 1;
compilation error,188,replace,[CE] illegal start of expression, this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = domain; }
compilation error,188,replace,[CE] illegal start of expression, this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,if(domain!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = domain; }
compilation error,188,replace,[CE] illegal start of expression, this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = range; }
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)&&  Double.isNaN(a  *  b))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 3 / 2;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); }, as this // happen next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify any, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, but // do not notify any, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, but // do not notify any, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); }, as this // happen next anyway; }
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anyone, because that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove old items if needed, // won't notify anybody, because that
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); } ; }!removeAgedItems(true);// remove items if needed, // won't notify anyone, because that
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10  +  1;    ,this.minY = Double.NaN % 10 + 1;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; } // removeAgedItems(true); // remove items if needed, as
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as // wouldn't happen next instead; } // removeAgedItems(true); // remove old items if needed, as
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 12 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  Integer.MAX_VALUE;    ,this.minY = Double.NaN * 2 / Integer.MAX_VALUE;
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.equals( ", ")&&  item.getPeriod().getClass().equals( "  / "))  {    ,else if(!this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.equals( ", ")&&  item.getPeriod().getClass().equals( "  / "))  {    ,else if(!this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(false); // remove old items if needed, as // wouldn't happen next; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(false); // remove old items if needed; } ; if(notify) { fireSeriesChanged(); }, as // wouldn't happen next; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, but // don't notify any, because that // happens next anyway........
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }!(( TimeSeriesDataItem)item.getValue()); // removeAgedItems(true);
compilation error,634,add,[CE] not a statement,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }!(( TimeSeriesDataItem)item); // removeAgedItems(true); // remove items if needed, but
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  7  /  2;    ,this.minY = Double.NaN * 7 / 2;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, // do't notify anybody
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // remove old items if needed, // do't notify anybody, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, // do't notify anyone
patch is same with buggy,584,replace,, else  if(this.timePeriodClass.equals( "+ "))  {    ,else if(this.timePeriodClass.equals("+")) {
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(this.timePeriodClass.equals( "+ "))  {    ,else if(!this.timePeriodClass.equals("+")) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  /  4;    ,this.minY = Double.NaN * 2.0 / 4;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, as that // happen next(); }!removeAgedItems(true);// remove old items if needed, as that
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happen next(); }
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2 / 4;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2 * Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minItemCount,   ,this.minItemCount = Double.NaN / 2 * Integer.MIN_VALUE;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  10;    ,this.minY = Double.NaN * 10;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  1000.0;    ,this.minY = Double.NaN / 1000.0;
patch is same with buggy,1269,replace,, if(Double.isInfinite(a  +  2)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,188,add,[CE] cannot find symbol maxX,   ,this.maxX = Double.NaN % 100;
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);// remove items if needed, // do" but not notify any, as this // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // do" but not notify any, as this // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);// remove items if needed, // do" but not notify any, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't happen next
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // wouldn't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // wouldn't
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }, // wouldn't notify anybody, as that // happens next anyway; } if(notify) { fireSeriesChanged();
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, // wouldn't notify anybody
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); }? true : false; // removeAgedItems(true); // remove items if needed, // wouldn't notify anyone
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isInfinite(a)||  Double.isInfinite(b)&&  Double.isNaN(a  *  b))  {    ,if(Double.isNaN(a)&& Double.isInfinite(b)&& Double.isNaN(a * b)) }
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove old items if needed, as this // happen next anyway;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  2  +  1;    ,this.maxY = Double.NaN % 2 + 1;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happens next anyway; }
compilation error,634,add,[CE] invalid method declaration; return type required,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); } ; }
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happens next anyway; } if(notify) { fireSeriesChanged();
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // won't notify any, as that's next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // won't notify any, as that's next anyway; }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,if(notify) { fireSeriesChanged(); } ; if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // won't notify any, as that's next anyway; } 
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  OldItems  if  needed,  as  that  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove OldItems if needed, as that // happens next instead;
compilation error,634,replace,[CE] not a statement, removeAgedItems(true);//  remove  OldItems  if  needed,  as  that  //  happens  next  anyway;    ,if(true) { removeAgedItems if needed, as that // happens next instead; }
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 3.0;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2.0 + 2;
compilation error,634,replace,[CE] ')' expected, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,if(removeAgedItems(true)&& remove OldItems if needed, as this // happen next anyway;
compilation error,634,replace,[CE] not a statement, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,if(true) { removeAgedItems if needed, as this // happen next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // do't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // do't notify anyone, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // do't notify anyone, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2 + 1;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2 / 4 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2 / 5 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  Long.MIN_VALUE;    ,this.minY = Double.NaN * 2 / Long.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 10 + 1;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1.0;    ,this.maxY = Double.NaN * 1.0;
compilation error,193,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  100  +  Integer.MAX_VALUE;    ,this.minX = Double.NaN * 100 + Long.MIN_VALUE;
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;! throw new IllegalArgumentException(" "); } if(add) { fireSeries
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;! throw new IllegalArgumentException( " "); } if(add) { fireSeries
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); fiance ;! throw new IllegalArgumentException(" "); } if(added) { fireSeries
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  +  1;    ,this.minY = Double.NaN * 2.0 + 1;
compilation error,188,replace,[CE] illegal start of expression, if(range  ==  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }    ,[Delete]
patch is same with buggy,188,replace,, if(range  ==  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }    ,if(range == null) { this.timePeriodClass = getTimePeriodClass(); }
patch is same with buggy,188,replace,, this.minY  =  minY  /  100;    ,this.minY = minY / 100;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  6  /  2;    ,this.minY = Double.NaN * 6 / 2;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b +
compilation error,1269,add,[CE] ')' expected,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(
compilation error,188,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 2L;
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())&& item.getPeriod().getClass().equals(".")) {
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(item.getPeriod().equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) {
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2 / 5;
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(this.timePeriodClass.equals(item.getPeriod())||  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  do  not  notify  any,  as  this  //  happens  next  anyway;    ,if(true) { removeAgedItems(true);// remove old items if needed, but // do not notify any, as this // happens next anyway; }
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  2;    ,this.maxY = Double.NaN % 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  *  1.0;    ,this.minY = Double.NaN * 1.5;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  *  1.0;    ,this.minX = Double.NaN * 1.5;
compilation error,194,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  *  1.0;    ,this.minY = Long.NaN * 1.5;
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = range; }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.domain = domain; if(range!= null) { this.range = range; }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = domain; }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  %  2L;    ,this.minY = Double.NaN % 2L;
patch is same with buggy,188,replace,, this.maxY  =  minY  *  2  +  1;    ,this.maxY = minY * 2 + 1;
compilation error,188,replace,[CE] bad operand types for binary operator '*', this.maxY  =  minY  *  2  +  1;    ,this.maxY = domain * 2 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  1.5  /  4;    ,this.minY = Double.NaN * 1.5 / 4;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0;
compilation error,194,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN * 2.0;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  4;    ,this.minY = Double.NaN / 4;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 2.0 + 1;
compilation error,1269,replace,[CE] cannot find symbol c, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + c)) {
compilation error,634,replace,[CE] ')' expected, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(removeAgedItems(true)&& remove old items if needed, // don't notify any, this // happens next anyway;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ do"t notify any, as this // happens next anyway;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ do "t notify any, as this // happens next anyway;
compilation error,634,replace,[CE] not a statement, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); &/ do"t notify any, as this // happens next anyway;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2 / 4 + 1;
compilation error,194,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  *  2  /  4;    ,this.minX = Double.NaN * 2 / 4 + 1;
patch is same with buggy,188,replace,, this.minY  =  minY  %  100;    ,this.minY = minY % 100;
compilation error,188,replace,[CE] cannot find symbol MinY, this.minY  =  minY  %  100;    ,this.minY = MinY % 100;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  /  100.0;    ,this.minY = Double.NaN / 1000.0;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  /  100.0;    ,this.minX = Double.NaN / 1000.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  /  100.0;    ,this.minY = Double.NaN / 10000.0;
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false);?!! RemoveAgedItems(false); // removeAgedItems(false);
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false);?!! RemoveAgedItems(false); // removeAgedItems(false);
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false);?!! RemoveAgedItems(false); : // removeAgedItems(false);
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, as // won't
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't notify
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, as // won't happen next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't notify anybody
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b +
compilation error,1269,add,[CE] ')' expected,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) }
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b) || Double.isInfinite(a + b)) {
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify any, as this // happens next anyway; } if(notify) { fireSeriesChanged(); } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, // don't notify any, as this // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed, // don't notify any, as this // happens next anyway; }
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 1.5;
patch is same with buggy,188,replace,, this.maxY  =  this.maxY  /  2;    ,this.maxY = this.maxY / 2;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't notify any, as that // happens next anyway; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, as // won't notify any, as that // happens next anyway; } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); }, as // won't notify any, as that // happens next anyway; } if(
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as that // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed,
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as that // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove old items if needed,
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); }, // wouldn't notify anyone, as that // happens next anyway; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true); // remove items if needed, //
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify any
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify any, because
patch is same with buggy,188,replace,, this.maxY  =  minY  *  4;    ,this.maxY = minY * 4;
compilation error,188,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN % 10;
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // wouldn't notify any, as this // happens next instead; }
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // wouldn't notify any, as this // happens next instead; } 
compilation error,634,add,[CE] illegal start of expression,   ,if(notify) { fireSeriesChanged(); } ; if(notify) { removeAgedItems(true);// remove items if needed, but // wouldn't notify any, as this // happens next instead; }!
patch is same with buggy,188,replace,, this.maxY  =  maxY  /  2  *  1;    ,this.maxY = maxY / 2 * 1;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 10 + Long.MAX_VALUE;
compilation error,634,add,[CE] ')' expected,   ,if(removeAgedItems(false);// remove old items if needed;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  12  /  Integer.MIN_VALUE;    ,this.minY = Double.NaN * 12 / Integer.MIN_VALUE;
compilation error,188,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN % 20;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify any
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(d.getSeriesCount() > 1) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don't notify
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(d.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); &/ removeAgedItems(false); &/ remove Items if needed, but // don
patch is same with buggy,188,replace,, this.minY  =  maxY  /  2  +  1;    ,this.minY = maxY / 2 + 1;
patch is same with buggy,188,replace,, this.maxY  =  maxY  -  minY;    ,this.maxY = maxY - minY;
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);
compilation error,634,add,[CE] illegal start of expression,   ,if(removeAgedItems) { fireSeriesChanged(); } if(notify) { fireSeriesChanged(); } ; } if(notify) { fireSeriesChanged(); }, as that // happen next anyway; }
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1.5 / 4;
compilation error,193,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 1.0 - 1;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b) || Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b) || Double.isInfinite(a + b) || Double.isInfinite(b + b)) {
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { if(domain!= null) { this.range = range; }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { if(!this.domain.equals(range.getName())) { this.range = range; }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(notify) { fireSeriesChanged(); }
patch is same with buggy,188,replace,, this.minY  =  minY  /  8  +  1;    ,this.minY = minY / 8 + 1;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,items.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  this  //  happens  next  anyway;    ,item.setValue(value);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100000;    ,this.minY = Double.NaN * 100000;
compilation error,188,replace,[CE] cannot find symbol minimumY, this.minY  =  minY  %  2L  +  1;    ,this.minY = minimumY % 2;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); slated
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,replace,[CE] 'else' without 'if', if(domain!=  null)  {  this.range  =  range;  }    ,else if(range!= null) { this.range = range; }
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,item.setPeriod(getItemCount() - 1);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,item.setValue(value);
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN % 2;
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().getClass().equals(" ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().getClass().equals("")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().getClass().equals(".")) {
compilation error,188,replace,[CE] no suitable method found for max(double), this.maxY  =  Double.NaN  /  10L;    ,this.maxY = Math.max(Double.NaN * 2L);
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)&&  Double.isNaN(a  *  b))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  /  12;    ,this.maxY = maximumY / 12;
compilation error,188,replace,[CE] bad operand types for binary operator '/', this.maxY  =  minY  /  12;    ,this.maxY = range / 12;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  Integer.MAX_VALUE;    ,this.minY = Double.NaN * 2 / Integer.MAX_VALUE;
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN / 10L;
compilation error,188,add,[CE] cannot find symbol min,   ,this.min = Double.NaN / 10L;
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); fiance ;! throw new IllegalArgumentException(" ");
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); fiance ;! throw new IllegalArgumentException(" "); } if(add) { fireSeries
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  fiance  ;!  throw  new  IllegalArgumentException( "   ");  >>  if(add)  {  fireSeries    ,if(notify) { fireSeriesChanged(); fiance ;! throw new IllegalArgumentException(" "); } if(added) { fireSeriesChanged(); }
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + c)) {
compilation error,188,replace,[CE] bad operand types for binary operator '%', this.maxY  =  minY  %  1;    ,this.maxY = range % 1;
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  %  1;    ,this.maxY = maximumY % 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100  +  Integer.MAX_VALUE;    ,this.minY = Double.NaN * 100 + Integer.MAX_VALUE;
compilation error,193,replace,[CE] cannot find symbol Name, this.minY  =  Double.NaN  *  100  +  Integer.MAX_VALUE;    ,this.minY = Double.NaN * 100 + Name.MAX_VALUE;
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(notify) { fireSeriesChanged(); & }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway.....    ,if(!notify) { fireSeriesChanged(); & }
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); slated
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  2  +  1;    ,this.maxY = Double.NaN % 2 + 1;
compilation error,188,replace,[CE] ';' expected, this.maxY  =  Double.NaN  %  2  +  1;    ,this.maxY = Double.NaN % 2, this.minY = Double.NaN + 1;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,188,replace,, this.minY  =  minY  /  100;    ,this.minY = minY / 100;
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN / 10000);
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN * 100);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,193,add,[CE] cannot find symbol NaN,   ,this.minY = Long.NaN * 2500;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  /  1000;    ,this.minY = Double.NaN / 1000;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,item.setPeriod(getItemCount() - 1);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,items.add(item);
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)) {
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(this.timePeriodClass)||  item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().equals(this.timePeriodClass)|| item.getPeriod().getClass().equals(" ")) {
patch is same with buggy,188,replace,, this.minY  =  maxY  /  2  +  1;    ,this.minY = maxY / 2 + 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  1900;    ,this.minY = Double.NaN * 1900;
compilation error,188,replace,[CE] bad operand types for binary operator '/', this.maxY  =  this.minY  /  1;    ,this.maxY = range / 1;
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN * 2L;
compilation error,188,add,[CE] cannot find symbol min,   ,this.min = Double.NaN * 2L;
patch is same with buggy,188,replace,, this.maxY  =  maxY  *  2  +  1;    ,this.maxY = maxY * 2 + 1;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isInfinite(b)||  Double.isInfinite(a  +  2)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  1)||  Double.isInfinite(b)||  Double.isInfinite(a  +  2)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isInfinite(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN % 100);
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN / 100;
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(this.data.getItemCount())) { if(!added) { fireSeriesChanged(); }
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,items.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,item.setValue(value);
compilation error,188,replace,[CE] illegal start of expression, if(range  ==  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }    ,[Delete]
patch is same with buggy,188,replace,, if(range  ==  null)  {  this.timePeriodClass  =  getTimePeriodClass();  }    ,if(range == null) { this.timePeriodClass = getTimePeriodClass(); }
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  *  2.0;    ,this.minY = Double.NaN * 1.0;
increase failing tests,194,replace, [FE] NullPointerException, this.maxY  =  Double.NaN  *  2.0;    ,this.timePeriodClass = name.getClass();
patch is same with buggy,188,replace,, this.minY  =  minY  %  2D;    ,this.minY = minY % 2D;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,add,[CE] cannot find symbol maximumY,   ,this.maxY = maximumY % 2;
compilation error,188,add,[CE] ';' expected,   ,this.maxY = maxY % 2, 0;
compilation error,188,replace,[CE] cannot find symbol, this.maxY  =  this.maxY  /  2;    ,this.minY = Math.min(this.minY, name.length());
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN % 10;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  *  4;    ,this.maxY = maximumY * 4;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals("")) {
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 3;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  /  2;    ,this.minY = Double.NaN * 3;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); && do"t notify any, as this // happens next anyway; }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  do "t  notify  any,  as  this  //  happens  next  anyway;    ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); }
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)) }
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals(this.timePeriodClass)) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(item.getPeriod().equals("")) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  10000.0;    ,this.minY = Double.NaN % 10000.0;
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  1))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + 1)) {
compilation error,1269,replace,[CE] ')' expected, if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  1))  {    ,if(Double.isInfinite(a), Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + 1)) {
compilation error,188,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 4;
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + 1)) }
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(item.getPeriod())&& item.getPeriod().getClass().equals(".")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(item.getPeriod())|| item.getPeriod().getClass().equals(".")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(item.getPeriod())) {
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN * 2.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  1000000;    ,this.minY = Double.NaN % 1000000;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 3.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 1.0;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 3)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 5)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 4)) {
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  /  12;    ,this.maxY = maximumY * 12;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b + a)) {
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  2L;    ,this.maxY = Double.NaN * 2L;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(getItemCount())) { if(notify) { fireSeriesChanged(); }
compilation error,193,add,[CE] class expected,   ,this.minY = Double.NaN * 10 + long.MAX_VALUE;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  2  +  1;    ,this.maxY = maxY % 2 + 1;
compilation error,194,add,[CE] cannot find symbol minX,   ,this.minX = Double.NaN / 100.0;
patch is same with buggy,1269,replace,, if(Double.isInfinite(a  *  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isInfinite(a * b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterwards ; // removeAgedItems(false); &/ remove old items if needed, but // don't notify any, because that
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward ; &/ removeAgedItems(false); &/ remove old items if needed, but // don't notify any, because
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway......    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward ; &/ removeAgedItems(false); &/ remove old items if needed, but // don't notify any, because that
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  any,  as  that  //  happens  next  anyway;    ,removeAgedItems(true);// remove old items if needed, // won't notify any, as that // happens next anyway;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN * 1.5;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2 / 4 + 1;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2 / 4;
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item == null) { if(!added) { fireSeriesChanged(); }
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
compilation error,584,add,[CE] unclosed string literal,   ,else if(this.timePeriodClass.equals("", ")) { throw new SeriesException(""); }
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,items.add(item);
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  /  2  *  1;    ,this.maxY = maximumY / 2;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(maxY % 20);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,items.add(item);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1.5;    ,this.maxY = Double.NaN * 1.5;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happens  next  instead;    ,removeAgedItems(true);// remove OldItems if needed, as this // happens next instead;
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  do  not  notify  any,  as  this  //  happens  next  anyway;    ,removeAgedItems(true);// remove old items if needed, but // do not notify any, as this // happens next anyway;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,item.setPeriod(getItemCount() - 1);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  wouldn't  notify  any,  as  this  //  happens  next  instead;    ,this.data.add(item); removeAgedItems(true);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  20.0;    ,this.maxY = Double.NaN % 20.0;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a, b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a * b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + b)) {
compilation error,194,replace,[CE] class expected, this.maxY  =  Double.NaN  /  2.0  +  2;    ,this.maxY = double.NaN / 2.0;
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())&& item.getPeriod().getClass().equals(".")) {
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(range!= null) { this.range = range; }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(range!= null) { this.data = new ArrayList(); }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = range; }
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  10;    ,this.maxY = Double.NaN % 10;
patch is same with buggy,188,replace,, this.minY  =  this.minY  /  2;    ,this.minY = this.minY / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  +  15;    ,this.minY = Double.NaN + 15;
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.equals( ", ")&&  item.getPeriod().getClass().equals( "  / "))  {    ,else if(!this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.equals( ", ")&&  item.getPeriod().getClass().equals( "  / "))  {    ,else if(!this.timePeriodClass.equals(",")&& item.getPeriod().getClass().equals(" /")) {
patch is same with buggy,584,replace,, else  if(!this.timePeriodClass.equals( ", ")&&  item.getPeriod().getClass().equals( "  / "))  {    ,else if(!this.timePeriodClass.equals(", ")&& item.getPeriod().getClass().equals(" /")) {
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  *  1.0;    ,this.minY = Double.NaN * 1.5;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  *  1.0;    ,this.minY = Double.NaN * 1.5 / 2;
compilation error,188,replace,[CE] cannot find symbol minX, this.minY  =  Double.NaN  +  2L;    ,this.minX = Double.NaN + 3L;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 10.0;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  20.0;    ,this.minY = Double.NaN / 20.0;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  3;    ,this.maxY = maxY % 3;
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  maxY  %  3;    ,this.maxY = maximumY % 2;
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  %  2  *  4;    ,this.maxY = maximumY % 2;
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  %  2L;    ,this.minY = Double.NaN % 2L;
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,188,replace,[CE] cannot find symbol, this.minY  =  this.minY  /  2;    ,this.maxY = Math.max(this.maxY, name.length() - 1);
compilation error,188,replace,[CE] cannot find symbol, this.minY  =  this.minY  /  2;    ,this.maxY = Math.max(this.maxY, name.length());
compilation error,188,add,[CE] bad operand types for binary operator '-',   ,this.minY = minY - domain;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  2.0;    ,this.maxY = Double.NaN * 2.0;
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  %  3;    ,this.maxY = maximumY % 3;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  /  10L;    ,this.maxY = Double.NaN / 10L;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  2;    ,this.maxY = Double.NaN % 2;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(item == null) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,items.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,item.setValue(value);
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  %  2;    ,this.minY = Double.NaN % 100;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  %  2;    ,this.minX = Double.NaN % 100;
patch is same with buggy,584,replace,, else  if(item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().getClass().equals("")) {
compilation error,188,replace,[CE] bad operand types for binary operator '/', this.minY  =  this.minY  /  1;    ,this.minY = range / 1;
compilation error,188,replace,[CE] bad operand types for binary operator '/', this.minY  =  this.minY  /  1;    ,this.minY = name / 1;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  1)||  Double.isNaN(b)||  Double.isNaN(a  +  2))  {    ,if(Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 1)|| Double.isNaN(b)|| Double.isNaN(a + 2)) {
compilation error,1269,replace,[CE] illegal start of expression, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b +
compilation error,1269,replace,[CE] ')' expected, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)|| Double.isInfinite(b
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  1.0  -  1;    ,this.minY = Double.NaN * 1.0 - 1;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2  *  Integer.MIN_VALUE;    ,this.minY = Double.NaN / 2 * Integer.MIN_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  %  20.0;    ,this.minY = Double.NaN % 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  %  20.0;    ,this.minY = Double.NaN % 2 + 1;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;,   ,item.setValue(this.data.size() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { if(getTimePeriodClass()!= null) { this.timePeriodClass = getTimePeriodClass(); }
compilation error,188,add,[CE] illegal start of expression,   ,if(range!= null) { if(getTimePeriodClass()!= null) { throw new IllegalArgumentException(""); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item == null) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  2L;    ,this.minY = Double.NaN * 2L;
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  1000.0;    ,this.maxY = Double.NaN / 1000.0;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,item.setPeriod(getItemCount() - 1);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  Items  if  needed,  as  this  //  happens  next  anyway;    ,item.setValue(value);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  /  100.0;    ,this.maxY = Double.NaN / 100.0;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,add,[CE] no suitable method found for min(double),   ,this.minY = Math.min(this.minY / 2);
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(item == null) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  won't  notify  anyone,  as  this  //  happens  next  instead;    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); }
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  2  +  1;    ,this.maxY = Double.NaN * 2 + 1;
patch is same with buggy,584,replace,, else  if(this.timePeriodClass.equals( "+ "))  {    ,else if(this.timePeriodClass.equals("+")) {
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(this.timePeriodClass.equals( "+ "))  {    ,else if(!this.timePeriodClass.equals("+")) {
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  /  100.0;    ,this.minY = Double.NaN / 1000.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.maxY  =  Double.NaN  /  100.0;    ,this.minY = Double.NaN / 10000.0;
compilation error,194,replace,[CE] cannot find symbol minX, this.maxY  =  Double.NaN  /  100.0;    ,this.minX = Double.NaN / 1000.0;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,193,add,[CE] cannot find symbol TimePeriodClass,   ,this.timePeriodClass = TimePeriodClass.getInstance(); this.minY = Double.NaN * 1000 + Integer.MIN_VALUE;
compilation error,193,add,[CE] cannot find symbol TimePeriodClass,   ,this.timePeriodClass = TimePeriodClass.getInstance(domain); this.data.add(name);
compilation error,193,replace,[CE] ';' expected, this.minY  =  Double.NaN  /  2.0  *  1;    ,this.minY = Double.NaN / 2.0, 0;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  %  2  -  1;    ,this.minY = Double.NaN % 2 - 1;
patch is same with buggy,1269,replace,, if(Double.isNaN(a)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  *  3;    ,this.maxY = Double.NaN * 3;
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  OldItems  if  needed,  as  that  //  happens  next  anyway;    ,removeAgedItems(true);// remove OldItems if needed, as that // happens next anyway;
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN / 1000);
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals("+")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals(" + ")) {
compilation error,584,add,[CE] 'else' without 'if',   ,else if(this.timePeriodClass.equals( "+")) {
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  /  Long.MIN_VALUE;    ,this.minY = Double.NaN * 2 / Long.MIN_VALUE;
compilation error,193,replace,[CE] class expected, this.minY  =  Double.NaN  *  2  /  Long.MIN_VALUE;    ,this.minY = Double.NaN * 2 / long.MIN_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,193,add,[CE] cannot find symbol,   ,this.minY = Double.NaN * 6 / 2 + name.length();
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  /  2.0  +  1;    ,this.minY = Double.NaN / 2.0 + 1;
compilation error,188,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.range  =  range;  }    ,if(range!= null) { if(domain!= null) { this.range = range; }
patch is same with buggy,188,replace,, if(domain!=  null)  {  this.range  =  range;  }    ,if(domain!= null) { this.range = range; }
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN % 20);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  won't  notify  anyone,  because  that  //  happens  next  anyway;    ,items.add(item);
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  OldItems  if  needed,  as  this  //  happen  next  anyway;    ,removeAgedItems(true);// remove OldItems if needed, as this // happen next anyway;
patch is same with buggy,1269,replace,, if(Double.isInfinite(a  +  2)||  Double.isInfinite(b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(a  +  b))  {    ,if(Double.isInfinite(a + 2)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  -  2L;    ,this.minY = Double.NaN - 2L;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  2L;    ,this.maxY = maxY % 2L;
patch is same with buggy,188,replace,, this.maxY  =  maxY  %  12;    ,this.maxY = maxY % 12;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2;
compilation error,194,replace,[CE] ';' expected, this.minY  =  Double.NaN  *  2  /  4  +  1;    ,this.minY = Double.NaN * 2, + 1;
compilation error,188,replace,[CE] cannot find symbol maxItemAge, this.minY  =  Double.NaN  +  2L;    ,this.maxItemAge = Double.NaN - 2L;
compilation error,634,add,[CE] cannot find symbol items,   ,items.clear();
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  0.5  /  2;    ,this.minY = Double.NaN * 0.5 / 2;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  minY  %  10;    ,this.maxY = maximumY % 10;
compilation error,188,add,[CE] cannot find symbol maximumY,   ,this.maxY = maximumY / 100;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  10  +  Long.MAX_VALUE;    ,this.minY = Double.NaN * 10 + Long.MAX_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  1000.0;    ,this.minY = Double.NaN / 1000.0;
patch is same with buggy,188,replace,, this.minY  =  minY  *  6;    ,this.minY = minY * 6;
compilation error,188,replace,[CE] no suitable method found for max(double), this.minY  =  this.minY  /  1;    ,this.maxY = Math.max(this.maxY / 2);
compilation error,188,replace,[CE] cannot find symbol, this.minY  =  this.minY  /  1;    ,this.maxY = Math.max(this.maxY, name.length() - 2);
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  +  2L;    ,this.minY = Double.NaN + 2L;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,items.add(item);
compilation error,188,replace,[CE] illegal start of expression, this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = domain; }
compilation error,188,replace,[CE] illegal start of expression, this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = range; }
compilation error,188,replace,[CE] 'else' without 'if', this.timePeriodClass  =  getTimePeriodClass();  if(domain!=  null)  {  this.range  =  domain;  }    ,else if(range!= null) { this.timePeriodClass = getTimePeriodClass(); if(domain!= null) { this.range = domain; }
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN - 3;
increase failing tests,584,replace, [FE] AssertionFailedError, else  if(this.timePeriodClass.equals(item.getPeriod())||  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())) {
compilation error,584,replace,[CE] illegal start of type, else  if(this.timePeriodClass.equals(item.getPeriod())||  item.getPeriod().getClass().equals( ". "))  {    ,else if(item.getPeriod().equals(item.getPeriod())) { throw new SeriesException(""); }
patch is same with buggy,188,replace,, this.minY  =  minY  %  20;    ,this.minY = minY % 20;
patch is same with buggy,1269,replace,, if(Double.isNaN(a  +  b)||  Double.isInfinite(a  +  b)||  Double.isInfinite(b  +  a))  {    ,if(Double.isNaN(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(b + a)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  as  that  //  happens  next  anyway;    ,items.add(item);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2  +  Long.MAX_VALUE;    ,this.minY = Double.NaN * 2 + Long.MAX_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item); removeAgedItems(false);
patch is same with buggy,188,replace,, if(domain!=  null)  {  this.range  =  domain;  }    ,if(domain!= null) { this.range = domain; }
patch is same with buggy,188,replace,, this.maxY  =  this.maxY  /  2;    ,this.maxY = this.maxY / 2;
compilation error,188,replace,[CE] bad operand types for binary operator '/', this.maxY  =  this.maxY  /  2;    ,this.maxY = range / 2;
compilation error,188,replace,[CE] class expected, this.maxY  =  Double.NaN  %  10;    ,this.minY = double.NaN * 3;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  +  1;    ,this.minY = Double.NaN * 2.0 + 1;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 3.0;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 2.0 / 2;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  3.0  /  2;    ,this.minY = Double.NaN * 3.0 / 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  100000;    ,this.minY = Double.NaN / 100000;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  //  wouldn't  notify  any,  as  that  //  happens  next  anyway;    ,items.add(item);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  6  /  2;    ,this.minY = Double.NaN * 6 / 2;
compilation error,188,add,[CE] class expected,   ,this.minY = double.NaN / 3;
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item == null) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  100  +  Long.MIN_VALUE;    ,this.minY = Double.NaN * 100 + Long.MIN_VALUE;
compilation error,193,replace,[CE] class expected, this.minY  =  Double.NaN  *  100  +  Long.MIN_VALUE;    ,this.minY = Double.NaN * 100 + long.MIN_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that's next anyway; }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }!    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated; // removeAgedItems(false); // remove old items if needed, // wouldn't notify anyone, because that is next anyway; }
increase failing tests,634,replace, [FE] AssertionFailedError, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(notify) { fireSeriesChanged(); & }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway....    ,if(!notify) { fireSeriesChanged(); & }
patch is same with buggy,1269,replace,, if(Double.isInfinite(a)||  Double.isInfinite(b)||  Double.isNaN(a  +  b))  {    ,if(Double.isInfinite(a)|| Double.isInfinite(b)|| Double.isNaN(a + b)) {
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(this.timePeriodClass)&&  item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals(" ")) {
patch is same with buggy,584,replace,, else  if(item.getPeriod().equals(this.timePeriodClass)&&  item.getPeriod().getClass().equals( "   "))  {    ,else if(item.getPeriod().equals(this.timePeriodClass)&& item.getPeriod().getClass().equals("")) {
increase failing tests,194,add, [FE] NullPointerException,   ,this.timePeriodClass = name.getClass();
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  10;    ,this.minY = Double.NaN * 10;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 3;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 2 + 1;
patch is same with buggy,194,replace,, this.minY  =  Double.NaN  *  3  +  1;    ,this.minY = Double.NaN * 3 + 1;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN * 2;
increase failing tests,194,replace, [FE] AssertionFailedError, this.minY  =  Double.NaN  *  2  /  4;    ,this.minY = Double.NaN* 2;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,replace,[CE] ';' expected, this.maxY  =  Double.NaN  -  3;    ,this.maxY = Double.NaN -- 3;
patch is same with buggy,584,replace,, else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(this.timePeriodClass.equals(item.getPeriod()) && item.getPeriod().getClass().equals(".")) { throw new SeriesException(" "); }
compilation error,584,replace,[CE] illegal start of type, else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(this.timePeriodClass.equals(item.getPeriod()) && item.getPeriod().getClass().equals(" ")) { throw new SeriesException(" "); }
compilation error,584,replace,[CE] , else  if(this.timePeriodClass.equals(item.getPeriod())&&  item.getPeriod().getClass().equals( ". "))  {  throw  new  SeriesException( " ");  }    ,else if(this.timePeriodClass.equals(item.getPeriod()) && item.getPeriod().getClass().equals(" "); && notify) { throw new SeriesException(" "); }
compilation error,188,replace,[CE] cannot find symbol maximumY, this.maxY  =  maxY  /  2  *  1;    ,this.maxY = maximumY / 2;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); slated
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); slated
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  won't  notify  anybody,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward
patch is same with buggy,188,replace,, this.minY  =  maxY  %  2;    ,this.minY = maxY % 2;
patch is same with buggy,188,replace,, this.minY  =  minY  *  4  +  1;    ,this.minY = minY * 4 + 1;
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway........    ,removeAgedItems(true);// remove old items if needed, but // don't notify any, because that // happens next anyway........
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(Double.NaN % 2L);
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  *  1.0;    ,this.maxY = Double.NaN * 1.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  12  /  Integer.MIN_VALUE;    ,this.minY = Double.NaN * 12 / Integer.MIN_VALUE;
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item == null) { if(!added) { fireSeriesChanged(); }
compilation error,634,add,[CE] illegal start of expression,   ,if(item.getPeriod().equals("")) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,634,replace,, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,removeAgedItems(true);// remove old items if needed, as that // happen next anyway;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,188,replace,, this.minY  =  Double.NaN  *  10L;    ,this.minY = Double.NaN * 10L;
compilation error,193,replace,[CE] cannot find symbol NaN, this.minY  =  Double.NaN  *  1.0  -  1;    ,this.minY = Long.NaN / 2.0;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2000;    ,this.minY = Double.NaN / 2000;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  %  2  +  Integer.MIN_VALUE;    ,this.minY = Double.NaN % 2 + Integer.MIN_VALUE;
patch is same with buggy,188,replace,, this.maxY  =  maxY  -  minY;    ,this.maxY = maxY - minY;
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,item.setValue(value);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  as  that  //  happen  next  anyway;    ,items.add(item);
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item.getPeriod().equals(getItemCount())) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  wouldn't  notify  anyone,  because  that  //  happens  next  anyway;  }    ,if(item == null) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,194,replace,, this.maxY  =  Double.NaN  %  100;    ,this.maxY = Double.NaN % 100;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,item.setPeriod(getItemCount() - 1);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  Old  Items  if  needed,  as  this  //  happens  next  anyway;    ,item.setValue(value);
compilation error,188,replace,[CE] class expected, this.maxY  =  Double.NaN  %  10;    ,this.minY = double.NaN % 100;
compilation error,188,replace,[CE] cannot find symbol NaN, this.maxY  =  Double.NaN  %  10;    ,this.minY = Number.NaN % 100;
compilation error,188,replace,[CE] bad operand types for binary operator '%', this.minY  =  this.minY  %  1;    ,this.minY = range % 1;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol,   ,item.setPeriod(getItemCount() - 1);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  *  2.0  /  7  +  1;    ,this.minY = Double.NaN * 2.0 / 7 + 1;
compilation error,188,replace,[CE] class expected, this.minY  =  Double.NaN  *  2L;    ,this.minY = double.NaN / 2;
patch is same with buggy,188,replace,, this.maxY  =  Double.NaN  %  2;    ,this.maxY = Double.NaN % 2;
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  Integer.MIN_VALUE;    ,this.minY = Double.NaN / Integer.MIN_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
patch is same with buggy,188,replace,, this.maxY  =  minY  *  2  +  1;    ,this.maxY = minY * 2 + 1;
compilation error,193,replace,[CE] class expected, this.minY  =  Double.NaN  *  10  +  Long.MAX_VALUE;    ,this.minY = Double.NaN * 1000 + long.MIN_VALUE;
compilation error,634,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(d == null) { if(notify) { fireSeriesChanged(); }
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); Afterward
compilation error,634,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  &/  remove  Items  if  needed,  but  //  don't  notify  any,  because  that  //  happens  next  anyway...    ,if(item.getPeriod().equals("")) { if(notify) { fireSeriesChanged(); figured
patch is same with buggy,193,replace,, this.minY  =  Double.NaN  /  2  +  Long.MIN_VALUE;    ,this.minY = Double.NaN / 2 + Long.MIN_VALUE;
increase failing tests,634,add, [FE] AssertionFailedError,   ,this.data.add(item);
compilation error,634,add,[CE] cannot find symbol value,   ,item.setValue(value);
compilation error,634,add,[CE] cannot find symbol items,   ,items.add(item);
increase failing tests,634,replace, [FE] AssertionFailedError, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,this.data.add(item);
compilation error,634,replace,[CE] cannot find symbol items, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,items.add(item);
compilation error,634,replace,[CE] cannot find symbol value, removeAgedItems(true);//  remove  old  items  if  needed,  as  //  wouldn't  happen  next,  as  that  //  happens  next  instead;    ,item.setValue(value);
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a)&& Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a)|| Double.isInfinite(b)&& Double.isNaN(a * b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + 2)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isInfinite(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,1269,add,[CE] illegal start of expression,   ,if(Double.isNaN(a + 1)|| Double.isInfinite(b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)|| Double.isInfinite(a + b)) {
compilation error,193,add,[CE] cannot find symbol minItemAge,   ,this.minItemAge = Long.MIN_VALUE;
compilation error,188,add,[CE] cannot find symbol,   ,this.maxY = Math.max(this.maxY, name.length() - 1);
compilation error,188,add,[CE] no suitable method found for max(double),   ,this.maxY = Math.max(this.maxY / 2);
compilation error,188,add,[CE] cannot find symbol,   ,this.maxY = Math.max(this.maxY, name.length());
patch is same with buggy,188,replace,, this.minY  =  minY  %  100;    ,this.minY = minY % 100;
