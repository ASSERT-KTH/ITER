bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] return appendTo == null ? null : appendTo.append(QUOTE); [FE] OutOfMemoryError [CONTEXT] StringBuffer appendTo, boolean escapingOn) { int start = pos.getIndex(); char[] c = pattern.toCharArray(); if (escapingOn && c[start] == QUOTE) { [BUGGY] return appendTo == null ? null : appendTo.append(QUOTE); [BUGGY] } int lastHold = start; for (int i = pos.getIndex(); i < pattern.length(); i++) { if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) { appendTo.append(c, lastHold, pos.getIndex() - lastHold).append( QUOTE); pos.setIndex(i + ESCAPED_QUOTE.length()); lastHold = pos.getIndex(); continue; } [CLASS] ExtendedMessageFormat [METHOD] appendQuotedString [RETURN_TYPE] StringBuffer  String pattern ParsePosition pos StringBuffer appendTo boolean escapingOn [VARIABLES] StringBuffer appendTo boolean escapingOn char END_FE QUOTE START_FE START_FMT c String DUMMY_PATTERN ESCAPED_QUOTE args customPattern desc formatDescription name pattern toPattern Map registry long serialVersionUID int i lastHold start ParsePosition pos char[] c  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	422	422	1	replace	
12	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] StringBuffer appendTo, boolean escapingOn) { int start = pos.getIndex(); char[] c = pattern.toCharArray(); if (escapingOn && c[start] == QUOTE) { [BUGGY] [BUGGY] return appendTo == null ? null : appendTo.append(QUOTE); } int lastHold = start; for (int i = pos.getIndex(); i < pattern.length(); i++) { if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) { appendTo.append(c, lastHold, pos.getIndex() - lastHold).append( QUOTE); pos.setIndex(i + ESCAPED_QUOTE.length()); lastHold = pos.getIndex(); continue; } [CLASS] ExtendedMessageFormat [METHOD] appendQuotedString [RETURN_TYPE] StringBuffer  String pattern ParsePosition pos StringBuffer appendTo boolean escapingOn [VARIABLES] StringBuffer appendTo boolean escapingOn char END_FE QUOTE START_FE START_FMT c String DUMMY_PATTERN ESCAPED_QUOTE args customPattern desc formatDescription name pattern toPattern Map registry long serialVersionUID int i lastHold start ParsePosition pos char[] c  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	422	422	1	add	
