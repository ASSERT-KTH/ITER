bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
33	[BUG] [BUGGY] next(pos); [FE] OutOfMemoryError [CONTEXT] foundDescriptions.add(format == null ? null : formatDescription); Validate.isTrue(foundFormats.size() == fmtCount); Validate.isTrue(foundDescriptions.size() == fmtCount); if (c[pos.getIndex()] != END_FE) { throw new IllegalArgumentException( "Unreadable format element at position " + start); }  default: stripCustom.append(c[pos.getIndex()]); [BUGGY] next(pos); [BUGGY] } } super.applyPattern(stripCustom.toString()); toPattern = insertFormats(super.toPattern(), foundDescriptions); if (containsElements(foundFormats)) { Format[] origFormats = getFormats();   int i = 0; for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) { [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c StringBuffer stripCustom Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	188	188	1	replace	
34	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] foundDescriptions.add(format == null ? null : formatDescription); Validate.isTrue(foundFormats.size() == fmtCount); Validate.isTrue(foundDescriptions.size() == fmtCount); if (c[pos.getIndex()] != END_FE) { throw new IllegalArgumentException( "Unreadable format element at position " + start); }  default: stripCustom.append(c[pos.getIndex()]); [BUGGY] [BUGGY] next(pos); } } super.applyPattern(stripCustom.toString()); toPattern = insertFormats(super.toPattern(), foundDescriptions); if (containsElements(foundFormats)) { Format[] origFormats = getFormats();   int i = 0; for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) { [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c StringBuffer stripCustom Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	188	188	1	add	
