bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(origFormats.length());	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
2	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
3	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(2);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(2);	  ArrayList    foundFormats    =    new    ArrayList(1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
4	[BUG]  [BUGGY]  List  <  String>  it  =  origFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  <  String>  it  =  origFormats.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  <  String>  it  =  origFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  foundFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Iterator  <  Object>  it  =  foundFormats.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Iterator  <  Object>  it  =  foundFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
6	[BUG]  [BUGGY]  Integer  fmtCount  =  toPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Integer  fmtCount  =  toPattern.length();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Integer  fmtCount  =  toPattern.length();	  int    fmtCount    =    toPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
7	[BUG]  [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  toPattern.toCharArray(fmtCount  +  1);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
8	[BUG]  [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  foundFormats.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  foundFormats.length);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  toPattern.toCharArray(fmtCount,  foundFormats.length);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
9	[BUG]  [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  toPattern.toCharArray(fmtCount,  1);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
10	[BUG]  [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount,  index);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  toPattern.toCharArray(fmtCount,  index);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
11	[BUG]  [BUGGY]  Set  <  String>  foundDescriptions  =  new  HashSet  <  String>();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Set  <  String>  foundDescriptions  =  new  HashSet  <  String>();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Set  <  String>  foundDescriptions  =  new  HashSet  <  String>();	  Set    <    String>    foundDescriptions    =    new    HashSet();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
12	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  origFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  origFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  origFormats);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
13	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
14	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
15	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats,  toPattern);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(origFormats,  toPattern);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
16	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern.length);	  ArrayList    foundFormats    =    new    ArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
17	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern,  toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern,  toPattern.length());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern,  toPattern.length());	  ArrayList    foundFormats    =    new    ArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
18	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
19	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length,  toPattern.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length,  toPattern.length);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length,  toPattern.length);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
20	[BUG]  [BUGGY]  List  <  String>  it  =  foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  <  String>  it  =  foundDescriptions.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  <  String>  it  =  foundDescriptions.iterator();	  Iterator    <    String>    it    =    this.foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
21	[BUG]  [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
22	[BUG]  [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
23	[BUG]  [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
24	[BUG]  [BUGGY]  Integer  fmtCount  =  foundFormats.size();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Integer  fmtCount  =  foundFormats.size();  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Integer  fmtCount  =  foundFormats.size();	  int    fmtCount    =    findFormats.size();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
25	[BUG]  [BUGGY]  List  foundDescriptions  =  new  ArrayList(size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  new  ArrayList(size());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  new  ArrayList(size());	  ArrayList    foundDescriptions    =    new    ArrayList(size()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
26	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(fmtCount);	  ArrayList    foundFormats    =    Lists.newArrayList(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
27	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(6);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(6);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(6);	  ArrayList    foundFormats    =    new    ArrayList(5);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
28	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  -  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  -  1);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
29	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.size()  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
30	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern  +  1);	  ArrayList    foundFormats    =    Lists.newArrayListWithCapacity(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
31	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  toPattern.length());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  toPattern.length());	  ArrayList    foundFormats    =    Lists.newArrayListWithCapacity(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
32	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(toPattern,  1);	  ArrayList    foundFormats    =    Lists.newArrayListWithCapacity(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
33	[BUG]  [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(1);	  List    <    String>    foundDescriptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
34	[BUG]  [BUGGY]  List  foundDescriptions  =  new  ArrayList(toPattern.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  new  ArrayList(toPattern.size());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  new  ArrayList(toPattern.size());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.size()    -    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
35	[BUG]  [BUGGY]  String  pattern  =  toPattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String  pattern  =  toPattern.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String  pattern  =  toPattern.toString();	  char[]    pattern    =    toPattern.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
36	[BUG]  [BUGGY]  String[]  pattern  =  toPattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  toPattern.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  toPattern.toString();	  char[]    pattern    =    toPattern.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
37	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(1);	  ArrayList    foundDescriptions    =    Lists.newArrayList(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
38	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(length()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(length()  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(length()  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
39	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(length()  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(length()  *  2);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(length()  *  2);	  ArrayList    foundDescriptions    =    new    ArrayList(length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
40	[BUG]  [BUGGY]  String[]  c  =  toPattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  c  =  toPattern.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  c  =  toPattern.toCharArray();	  String[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
41	[BUG]  [BUGGY]  String[]  c  =  pattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  c  =  pattern.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  c  =  pattern.toString();	  String[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
42	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(ToPattern.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(ToPattern.size());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(ToPattern.size());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.size()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
43	[BUG]  [BUGGY]  char[]  c  =  toPattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  c  =  toPattern.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  c  =  toPattern.toString();	  char[]    c    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
44	[BUG]  [BUGGY]  char[]  c  =  toPattern.toCharArray(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  c  =  toPattern.toCharArray(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  c  =  toPattern.toCharArray(fmtCount);	  char[]    c    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
45	[BUG]  [BUGGY]  char[]  c  =  toPattern.toCharArray()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  c  =  toPattern.toCharArray()  +  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  c  =  toPattern.toCharArray()  +  1;	  char[]    c    =    pattern.toCharArray()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
46	[BUG]  [BUGGY]  char[]  c  =  pattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  c  =  pattern.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  c  =  pattern.toString();	  char[]    c    =    pattern.toCharArray()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
47	[BUG]  [BUGGY]  String[]  pattern  =  toPattern.toStringArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  toPattern.toStringArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  toPattern.toStringArray();	  String[]    pattern    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
48	[BUG]  [BUGGY]  String[]  pattern  =  toPattern.toArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  toPattern.toArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  toPattern.toArray();	  String[]    pattern    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
49	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  +  1);	  ArrayList    foundDescriptions    =    Lists.newArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
50	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  *  2);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  *  2);	  ArrayList    foundDescriptions    =    Lists.newArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
51	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount,  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount,  1);	  ArrayList    foundDescriptions    =    Lists.newArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
52	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.length()  -  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.length()  -  1;	  int    fmtCount    =    toPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
53	[BUG]  [BUGGY]  char[]  pattern  =  it.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  it.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  it.toString();	  char[]    pattern    =    it.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
54	[BUG]  [BUGGY]  char[]  pattern  =  iterator.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  iterator.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  iterator.toCharArray();	  char[]    pattern    =    it.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
55	[BUG]  [BUGGY]  ArrayList  <  String>  it  =  foundFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  it  =  foundFormats.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  it  =  foundFormats.iterator();	  List    <    String>    it    =    foundFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
56	[BUG]  [BUGGY]  List  <  String>  it  =  foundFormats.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  <  String>  it  =  foundFormats.values().iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  <  String>  it  =  foundFormats.values().iterator();	  List    <    String>    it    =    foundFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
57	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length());	  ArrayList    foundFormats    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
58	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(toPattern  +  1);	  ArrayList    foundFormats    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
59	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(toPattern,  toPattern.length);	  ArrayList    foundFormats    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
60	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern  +  2);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern  +  2);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
61	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(origFormats);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
62	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(new  ArrayList());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(new  ArrayList());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(new  ArrayList());	  List    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
63	[BUG]  [BUGGY]  List  foundDescriptions  =  Lists.newArrayList(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  Lists.newArrayList(toPattern);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  Lists.newArrayList(toPattern);	  List    foundDescriptions    =    Lists.newArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
64	[BUG]  [BUGGY]  List  foundDescriptions  =  Lists.newArrayList(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  Lists.newArrayList(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  Lists.newArrayList(fmtCount);	  List    foundDescriptions    =    Lists.newArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
65	[BUG]  [BUGGY]  List  foundFormats  =  Lists.newArrayList(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundFormats  =  Lists.newArrayList(toPattern);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundFormats  =  Lists.newArrayList(toPattern);	  List    foundFormats    =    Lists.newArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
66	[BUG]  [BUGGY]  List  foundFormats  =  Lists.newLinkedList();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundFormats  =  Lists.newLinkedList();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundFormats  =  Lists.newLinkedList();	  List    foundFormats    =    Lists.newArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
67	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size()  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(size()  +  1);	  ArrayList    foundFormats    =    new    ArrayList(size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
68	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size()  -  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(size()  -  1);	  ArrayList    foundFormats    =    new    ArrayList(size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
69	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  1);	  ArrayList    foundFormats    =    new    ArrayList(toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
70	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  -  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  -  1);	  ArrayList    foundFormats    =    new    ArrayList(toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
71	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  2);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern.length()  +  2);	  ArrayList    foundFormats    =    new    ArrayList(toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
72	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
73	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  *  2);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(fmtCount  *  2);	  ArrayList    foundDescriptions    =    new    ArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
74	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern,  foundFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern,  foundFormats);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern,  foundFormats);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
75	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(foundFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(foundFormats);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(foundFormats);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
76	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(toPattern  +  1);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
77	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.length  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.length  -  1;  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.length  -  1;	  int    fmtCount    =    foundFormats.length;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
78	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.length  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.length  +  1;  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.length  +  1;	  int    fmtCount    =    foundFormats.length;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
79	[BUG]  [BUGGY]  int  fmtCount  =  foundDescriptions.length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundDescriptions.length;  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundDescriptions.length;	  int    fmtCount    =    foundFormats.length;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
80	[BUG]  [BUGGY]  int  fmtCount  =  foundDescriptions.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundDescriptions.length();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundDescriptions.length();	  int    fmtCount    =    foundFormats.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
81	[BUG]  [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(2);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    foundDescriptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
82	[BUG]  [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  Pattern.compile(pattern.length());	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
83	[BUG]  [BUGGY]  Integer  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Integer  fmtCount  =  pattern.length();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Integer  fmtCount  =  pattern.length();	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
84	[BUG]  [BUGGY]  List  foundDescriptions  =  new  ArrayList(toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  new  ArrayList(toPattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  new  ArrayList(toPattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
85	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
86	[BUG]  [BUGGY]  int  fmtCount  =  this.toPattern.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  this.toPattern.length()  -  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  this.toPattern.length()  -  1;	  int    fmtCount    =    this.toPattern.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
87	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  /  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  pattern.length()  /  2;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  pattern.length()  /  2;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
88	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  *  2  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  pattern.length()  *  2  +  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  pattern.length()  *  2  +  1;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
89	[BUG]  [BUGGY]  foundFormats.addAll(origFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(origFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(origFormats);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
90	[BUG]  [BUGGY]  foundFormats.addAll(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(toPattern);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(toPattern);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
91	[BUG]  [BUGGY]  foundFormats.addAll(Operator.EMPTY_LIST);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(Operator.EMPTY_LIST);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(Operator.EMPTY_LIST);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
92	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  +  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  +  1);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
93	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  -  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  toPattern.length()  -  1);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
94	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  toPattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  toPattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
95	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  pattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  pattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length(),  pattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
96	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.size()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.size()  -  1;  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.size()  -  1;	  int    fmtCount    =    foundFormats.size();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
97	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.size()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.size()  +  1;  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.size()  +  1;	  int    fmtCount    =    foundFormats.size();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
98	[BUG]  [BUGGY]  int  fmtCount  =  foundDescriptions.size();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundDescriptions.size();  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundDescriptions.size();	  int    fmtCount    =    foundFormats.size();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
99	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
100	[BUG]  [BUGGY]  ArrayList  discoveredDescriptions  =  new  ArrayList(toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  discoveredDescriptions  =  new  ArrayList(toPattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  discoveredDescriptions  =  new  ArrayList(toPattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
101	[BUG]  [BUGGY]  Iterator  <  String>  it  =  toPattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Iterator  <  String>  it  =  toPattern.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Iterator  <  String>  it  =  toPattern.iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
102	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats,  toPattern);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats,  toPattern);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
103	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  foundFormats.length);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
104	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(origFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(origFormats);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(origFormats);	  ArrayList    foundFormats    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
105	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
106	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  -  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(foundFormats.length()  -  1);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
107	[BUG]  [BUGGY]  int  fmtCount  =  foundFormats.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  foundFormats.length()  +  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  foundFormats.length()  +  1;	  int    fmtCount    =    foundFormats.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
108	[BUG]  [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
109	[BUG]  [BUGGY]  if(foundFormats  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundFormats  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundFormats  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
110	[BUG]  [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundFormats  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundFormats  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundDescriptions  ==  null)  {  ArrayList  foundFormats  =  new  ArrayList();  toPattern  =  new  ArrayList();  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
111	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(4);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(4);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(4);	  ArrayList    foundFormats    =    new    ArrayList(5);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
112	[BUG]  [BUGGY]  char[]  pattern  =  it.toCharArray(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  it.toCharArray(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  it.toCharArray(fmtCount);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
113	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern  +  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern  +  1);	  ArrayList    foundFormats    =    new    ArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
114	[BUG]  [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length()  -  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  Pattern.compile(pattern.length()  -  1);	  int    fmtCount    =    pattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
115	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.origFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Iterator  <  String>  it  =  this.origFormats.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Iterator  <  String>  it  =  this.origFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
116	[BUG]  [BUGGY]  char[]  c  =  Pattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  c  =  Pattern.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  c  =  Pattern.toCharArray();	  char[]    c    =    pattern.toCharArray()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
117	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(fmtCount);	  ArrayList    foundFormats    =    Lists.newArrayListWithCapacity(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
118	[BUG]  [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(4);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(4);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  foundDescriptions  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    foundDescriptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
119	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newLinkedList(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newLinkedList(toPattern);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newLinkedList(toPattern);	  ArrayList    foundFormats    =    Lists.newLinkedList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
120	[BUG]  [BUGGY]  Int  fmtCount  =  toPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Int  fmtCount  =  toPattern.length();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Int  fmtCount  =  toPattern.length();	  int    fmtCount    =    toPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
121	[BUG]  [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  0,  toPattern.length());  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
122	[BUG]  [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundDescriptions  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundDescriptions,  0,  toPattern.length());  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
123	[BUG]  [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList(6);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  ArrayList(6);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  foundDescriptions  =  new  ArrayList(6);	  ArrayList    <    String>    foundDescriptions    =    new    ArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
124	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(size()  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(size()  *  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(size()  *  1);	  ArrayList    foundDescriptions    =    new    ArrayList(size()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
125	[BUG]  [BUGGY]  List  <  String>  it  =  this.foundFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  <  String>  it  =  this.foundFormats.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  <  String>  it  =  this.foundFormats.iterator();	  List    <    String>    it    =    foundFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
126	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayList(1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayList(1);	  ArrayList    foundFormats    =    Lists.newArrayList(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
127	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(length());  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(length());	  ArrayList    foundFormats    =    new    ArrayList(size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
128	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(foundFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(foundFormats);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList();  toPattern.addAll(foundFormats);	  List    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
129	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.size());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(fromPattern.size());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.size()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
130	[BUG]  [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  HashSet();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  foundDescriptions  =  new  HashSet();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  <  String>  foundDescriptions  =  new  HashSet();	  Set    <    String>    foundDescriptions    =    new    HashSet();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
131	[BUG]  [BUGGY]  int  fmtCount  =  this.toPattern.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  this.toPattern.length()  +  1;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  this.toPattern.length()  +  1;	  int    fmtCount    =    this.toPattern.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
132	[BUG]  [BUGGY]  List  foundDescriptions  =  Lists.newLinkedList();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundDescriptions  =  Lists.newLinkedList();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundDescriptions  =  Lists.newLinkedList();	  List    foundDescriptions    =    Lists.newArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
133	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(8);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(8);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(8);	  ArrayList    foundDescriptions    =    new    ArrayList(6);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
134	[BUG]  [BUGGY]  foundFormats.addAll(originalFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(originalFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(originalFormats);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
135	[BUG]  [BUGGY]  foundFormats.addAll(OPERATION_SIGNATURES);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(OPERATION_SIGNATURES);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(OPERATION_SIGNATURES);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
136	[BUG]  [BUGGY]  String[]  pattern  =  it.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  it.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  it.toCharArray();	  String[]    pattern    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
137	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(templates);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(templates);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(templates);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
138	[BUG]  [BUGGY]  Int  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Int  fmtCount  =  pattern.length();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Int  fmtCount  =  pattern.length();	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
139	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(originalFormats.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(originalFormats.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(originalFormats.length());	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
140	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern  *  1);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern  *  1);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
141	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(originalFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(originalFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(originalFormats);	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
142	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  int  fmtCount  =  pattern.length()  +  2;  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	int  fmtCount  =  pattern.length()  +  2;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
143	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(formatDescription);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(formatDescription);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(formatDescription);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
144	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(printFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(printFormats);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(printFormats);	  ArrayList    foundDescriptions    =    Lists.newArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
145	[BUG]  [BUGGY]  Char[]  c  =  pattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Char[]  c  =  pattern.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Char[]  c  =  pattern.toCharArray();	  char[]    c    =    pattern.toCharArray()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
146	[BUG]  [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  1,  toPattern.length());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  1,  toPattern.length());  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(toPattern!=  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  else  {  System.arraycopy(pattern,  0,  foundFormats,  1,  toPattern.length());  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    else    {    System.arraycopy(pattern,    0,    foundFormats,    0,    toPattern.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
147	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  2);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  +  2);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
148	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  *  2);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern.length  *  2);	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
149	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  pattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  pattern.length());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(toPattern,  pattern.length());	  ArrayList    foundDescriptions    =    new    ArrayList(toPattern,    toPattern.length());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
150	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(fmtCount);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  new  ArrayList(fmtCount);	  ArrayList    foundFormats    =    new    ArrayList(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
151	[BUG]  [BUGGY]  Iterator  <  String>  it  =  pattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Iterator  <  String>  it  =  pattern.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Iterator  <  String>  it  =  pattern.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
152	[BUG]  [BUGGY]  Set  <  String>  foundDescriptions  =  new  HashSet();  toPattern  =  new  ArrayList();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  Set  <  String>  foundDescriptions  =  new  HashSet();  toPattern  =  new  ArrayList();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	Set  <  String>  foundDescriptions  =  new  HashSet();  toPattern  =  new  ArrayList();	  List    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
153	[BUG]  [BUGGY]  foundFormats.addAll(orgFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(orgFormats);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(orgFormats);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
154	[BUG]  [BUGGY]  foundFormats.addAll(OPERATIONS_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  foundFormats.addAll(OPERATIONS_PATTERN);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	foundFormats.addAll(OPERATIONS_PATTERN);	  foundFormats.addAll(foundFormats);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
155	[BUG]  [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(ptr);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(ptr);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundFormats  =  Lists.newArrayListWithCapacity(ptr);	  ArrayList    foundFormats    =    Lists.newArrayListWithCapacity(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
156	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(7);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(7);  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(7);	  ArrayList    foundDescriptions    =    new    ArrayList(6);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
157	[BUG]  [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  toPattern.toCharArray(fmtCount  -  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  toPattern.toCharArray(fmtCount  -  1);	  char[]    pattern    =    toPattern.toCharArray(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
158	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  -  1);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  Lists.newArrayList(fmtCount  -  1);	  ArrayList    foundDescriptions    =    Lists.newArrayList(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
159	[BUG]  [BUGGY]  String[]  pattern  =  toPattern.toUpperCase();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  toPattern.toUpperCase();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  toPattern.toUpperCase();	  String[]    pattern    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
160	[BUG]  [BUGGY]  String[]  pattern  =  this.toPattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  pattern  =  this.toPattern.toCharArray();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  pattern  =  this.toPattern.toCharArray();	  String[]    pattern    =    toPattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
161	[BUG]  [BUGGY]  String[]  c  =  pattern.toPattern();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  String[]  c  =  pattern.toPattern();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	String[]  c  =  pattern.toPattern();	  String[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
162	[BUG]  [BUGGY]  List  foundFormats  =  new  ArrayList(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  foundFormats  =  new  ArrayList(toPattern);  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  foundFormats  =  new  ArrayList(toPattern);	  ArrayList    foundFormats    =    new    ArrayList(toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
163	[BUG]  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList(origFormats.size());  [BUGGY]      StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	ArrayList  foundDescriptions  =  new  ArrayList(origFormats.size());	  ArrayList    foundDescriptions    =    new    ArrayList(foundFormats.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
164	[BUG]  [BUGGY]  if(foundDescriptions  ==  null  ||  toPattern  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  if(foundDescriptions  ==  null  ||  toPattern  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	if(foundDescriptions  ==  null  ||  toPattern  ==  null)  {  ArrayList  foundDescriptions  =  new  ArrayList();  toPattern  =  new  ArrayList();  }	  if(toPattern    ==    null)    {    ArrayList    foundDescriptions    =    new    ArrayList();    toPattern    =    new    ArrayList();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
165	[BUG]  [BUGGY]  List  <  String>  it  =  this.foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  List  <  String>  it  =  this.foundDescriptions.iterator();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	List  <  String>  it  =  this.foundDescriptions.iterator();	  List    <    String>    it    =    foundFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
166	[BUG]  [BUGGY]  char[]  pattern  =  iterator.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();      [BUGGY]  char[]  pattern  =  iterator.toString();  [BUGGY]      ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	149	149	1	replace	char[]  pattern  =  iterator.toString();	  char[]    pattern    =    it.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
