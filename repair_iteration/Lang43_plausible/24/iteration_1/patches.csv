bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
2	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(c);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
3	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
4	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  pattern);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.iterator();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet.iterator();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entrySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  this.formatDescription.entrySet().iterator();	      Iterator    <    Object>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.values().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  this.formatDescription.values().iterator();	      Iterator    <    Object>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Object>  it  =  this.formatDescription.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  this.formatDescription.keySet().iterator();	      Iterator    <    Object>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.format.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.format.values().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.format.values().iterator();	      Iterator    <    String>    it    =    this.format.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
12	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.format.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.format.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.format.entrySet().iterator();	      Iterator    <    String>    it    =    this.format.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
13	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.format.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.format.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.format.keySet().iterator();	      Iterator    <    String>    it    =    this.format.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
14	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(fmtCount);	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
15	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)getRegistry();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =(FormatRegistry)getRegistry();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)getRegistry();	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
16	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =  getRegistry(true);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(true);	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
17	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  pattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern  ==  null  ||  pattern!=  null)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  pattern!=  null)  {	  if(pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
18	[BUG]  [BUGGY]  if(toPattern!=  null  ||  pattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern!=  null  ||  pattern!=  null)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  ||  pattern!=  null)  {	  if(pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
19	[BUG]  [BUGGY]  Iterator  <  String>  it  =  toPattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  toPattern.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  toPattern.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
20	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  registry.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
21	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.pattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.pattern.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.pattern.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formatDescription.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.registry.values().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.values().iterator();	      Iterator    <    String>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
24	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.registry.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.keySet().iterator();	      Iterator    <    String>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
25	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.registry.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.entrySet().iterator();	      Iterator    <    String>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
26	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  1);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  1);	      Pattern    toPattern    =    Pattern.compile(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
27	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount);	      Pattern    toPattern    =    Pattern.compile(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
28	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0);	      Pattern    toPattern    =    Pattern.compile(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.keySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
30	[BUG]  [BUGGY]  List  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  List  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	List  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
31	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  register.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  register.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  register.entrySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
32	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.keySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
33	[BUG]  [BUGGY]  if(toPattern!=  null  ||  toPattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern!=  null  ||  toPattern.length()  ==  0)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  ||  toPattern.length()  ==  0)  {	  if(toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
34	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()  ==  0)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.length()  ==  0)  {	  if(toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
35	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
36	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  fmtCount);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  fmtCount);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
37	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  0);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  0);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
38	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formats.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.formats.values().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formats.values().iterator();	      Iterator    <    String>    it    =    this.formats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
40	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formats.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.formats.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formats.entrySet().iterator();	      Iterator    <    String>    it    =    this.formats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
41	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator());  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator());	      Iterator    <    String>    it    =    this.formats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
42	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  int  fmtCount  =  pattern.length();  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.length();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
43	[BUG]  [BUGGY]  Iterator  <  String>  it  =  origFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  origFormats.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  origFormats.iterator();	      Iterator    <    String>    it    =    this.origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.origFormats.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.origFormats.values().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.origFormats.values().iterator();	      Iterator    <    String>    it    =    this.origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
45	[BUG]  [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  foundDescriptions.iterator();	      Iterator    <    String>    it    =    this.origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
46	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =  getFormat();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat();	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
47	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =  getOwnFormat();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat();	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
48	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formats.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.formats.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formats.keySet().iterator();	      Iterator    <    String>    it    =    this.formats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
49	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  entries.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  entries.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  entries.iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
50	[BUG]  [BUGGY]  if(pattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(pattern  ==  null)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null)  {	  if(toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
51	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  DUMMY_PATTERN);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  DUMMY_PATTERN);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
52	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
53	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ptr);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
54	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
55	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  pattern);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
56	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.plots.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.plots.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.plots.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
57	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  registry.getIterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.getIterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getValue();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getValue();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
59	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.origFormats.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.origFormats.keySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.origFormats.keySet().iterator();	      Iterator    <    String>    it    =    this.origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
60	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.ordinals.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.ordinals.iterator();  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.ordinals.iterator();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
61	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.patterns.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.patterns.iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.patterns.iterator();	      Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
62	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( " "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( " "))  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.equals( " "))  {	  if(toPattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
63	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format);	      Pattern    toPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
64	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(pattern);	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
65	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.next();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)iterator.next();	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
66	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)it.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  FormatRegistry  registry  =(FormatRegistry)it.next();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)it.next();	      FormatRegistry    registry    =    getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
67	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.next();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.next();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
69	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.next();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.next();	      Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
70	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  -1);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  -1);	      Pattern    toPattern    =    Pattern.compile(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
71	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.register.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.register.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.register.entrySet().iterator();	      Iterator    <    Map.Entry    <    String,    Object>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
72	[BUG]  [BUGGY]  if(toPattern!=  null  &&  toPattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern!=  null  &&  toPattern.length()  >  0)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  &&  toPattern.length()  >  0)  {	  if(toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
73	[BUG]  [BUGGY]  if(toPattern!=  null  &&  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(toPattern!=  null  &&  pattern.length()  >  0)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  &&  pattern.length()  >  0)  {	  if(toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
74	[BUG]  [BUGGY]  if(pattern!=  null  &&  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(pattern!=  null  &&  pattern.length()  >  0)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  &&  pattern.length()  >  0)  {	  if(pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
75	[BUG]  [BUGGY]  if(pattern!=  null  &&  toPattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(pattern!=  null  &&  toPattern!=  null)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  &&  toPattern!=  null)  {	  if(pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
76	[BUG]  [BUGGY]  if(pattern!=  null  &&  toPattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  if(pattern!=  null  &&  toPattern  ==  null)  {  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  &&  toPattern  ==  null)  {	  if(pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
77	[BUG]  [BUGGY]  int  fmtCount  =  pattern.indexOf('n');  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  int  fmtCount  =  pattern.indexOf('n');  [BUGGY]    super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.indexOf('n');	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
78	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  char);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  char);  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  char);	      Pattern    toPattern    =    Pattern.compile(this,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
79	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.origFormats.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    public  final  void  applyPattern(String  pattern)  {    [BUGGY]  Iterator  <  String>  it  =  this.origFormats.entrySet().iterator();  [BUGGY]    if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.origFormats.entrySet().iterator();	      Iterator    <    String>    it    =    this.origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
