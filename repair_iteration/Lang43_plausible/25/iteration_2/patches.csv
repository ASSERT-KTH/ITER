bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.findFormats().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.findFormats().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.findFormats().iterator();	  Iterator    <    String>    it    =    this.registry.getFormats().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
2	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.foundDescriptions.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.foundDescriptions.iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsForPattern(pattern).iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsForPattern(pattern).iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findDescriptionsForPattern(pattern).iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
4	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern).iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern).iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern).iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.entities.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.entities.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.entities.iterator();	  Iterator    <    String>    it    =    this.registry.entities.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.entities.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.entities.values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.entities.values().iterator();	  Iterator    <    String>    it    =    this.registry.entities.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  it  =  register.entities.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  register.entities.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  register.entities.iterator();	  Iterator    <    String>    it    =    this.registry.entities.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getOwnIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getOwnIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getOwnIterator();	  Iterator    <    Object>    it    =    this.registry.getOwnIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
9	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(this.toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(this.toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIteratorForPattern(this.toPattern);	  Iterator    <    String>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
10	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIteratorForPattern(toPattern);	  Iterator    <    String>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);	  Iterator    <    String>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
12	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  /  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length()  /  2;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length()  /  2;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
13	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  -  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length()  -  2;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length()  -  2;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
14	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getDescriptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getDescriptions().iterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getDescriptions().iterator();	  Iterator    <    String>    it    =    this.registry.getDescriptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getDescriptions();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getDescriptions();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getDescriptions();	  Iterator    <    String>    it    =    this.registry.getDescriptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
16	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.findDescriptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.findDescriptions().iterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.findDescriptions().iterator();	  Iterator    <    String>    it    =    this.registry.getDescriptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
17	[BUG]  [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length());  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  Pattern.compile(pattern.length());	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
18	[BUG]  [BUGGY]  Integer  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Integer  fmtCount  =  pattern.length();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Integer  fmtCount  =  pattern.length();	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
19	[BUG]  [BUGGY]  super.applyPattern(pattern,  toPattern,  pos,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  toPattern,  pos,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  toPattern,  pos,  fmtCount);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
20	[BUG]  [BUGGY]  super.applyPattern(pattern,  toPattern,  start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  toPattern,  start);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  toPattern,  start);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
21	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(origFormats);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(origFormats);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(origFormats);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN,  pattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN,  pattern);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(DEFAULT_PATTERN);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
24	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(OPERATOR_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(OPERATOR_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(OPERATOR_QUOTE);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
25	[BUG]  [BUGGY]  super.applyPattern(c,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(c,  pattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(c,  pattern);	  super.applyPattern(pattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
26	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(this,  pattern);	  Iterator    <    String>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
27	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(this,  fmtCount);	  Iterator    <    String>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
28	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  pos);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(this,  pos);	  Iterator    <    String>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.values().iterator();	  Iterator    <    Object>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
30	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.entrySet().iterator();	  Iterator    <    Object>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
31	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN ",  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN ",  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN ",  pattern);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
32	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TOP_PATTERN ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TOP_PATTERN ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "TOP_PATTERN ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
33	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "to_PATTERN ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "to_PATTERN ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "to_PATTERN ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
34	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "/.toPattern ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "/.toPattern ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "/.toPattern ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   ".toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
35	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pattern);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  fmtCount);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
37	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  toPattern);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
38	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  +  1);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
39	[BUG]  [BUGGY]  Integer  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Integer  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Integer  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
40	[BUG]  [BUGGY]  char  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  char  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	char  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
41	[BUG]  [BUGGY]  super.applyPattern(pattern,  p);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  p);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  p);	  super.applyPattern(p,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
42	[BUG]  [BUGGY]  super.applyPattern(p,  pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(p,  pattern,  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(p,  pattern,  toPattern);	  super.applyPattern(p,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
43	[BUG]  [BUGGY]  super.applyPattern(pattern,  getMessage(),  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  getMessage(),  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  getMessage(),  toPattern);	  super.applyPattern(pattern,    getMessage());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
44	[BUG]  [BUGGY]  super.applyPattern(pattern,  getMessage(),  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  getMessage(),  null);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  getMessage(),  null);	  super.applyPattern(pattern,    getMessage());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
45	[BUG]  [BUGGY]  char  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  char  fmtCount  =  pattern.length();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	char  fmtCount  =  pattern.length();	  int    fmtCount    =    pattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
46	[BUG]  [BUGGY]  Pattern  toPattern  =  iterator.getFormat( "toPattern ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  iterator.getFormat( "toPattern ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  iterator.getFormat( "toPattern ");	  Pattern    toPattern    =    it.getFormat(   "toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
47	[BUG]  [BUGGY]  super.applyPattern(pattern,  start,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  start,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  start,  fmtCount);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
48	[BUG]  [BUGGY]  super.applyPattern(pattern,  c,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  c,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  c,  fmtCount);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
49	[BUG]  [BUGGY]  super.applyPattern(pattern,  fmtCount,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  fmtCount,  c);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  fmtCount,  c);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
50	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  pos,  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos,  1);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  register.getEntryIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  register.getEntryIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  register.getEntryIterator();	  Iterator    <    Object>    it    =    this.registry.getEntryIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
52	[BUG]  [BUGGY]  applyPattern(pattern,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  applyPattern(pattern,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	applyPattern(pattern,  pos);	  super.applyPattern(ptr,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
53	[BUG]  [BUGGY]  super.applyPattern(ptr,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(ptr,  pattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(ptr,  pattern);	  super.applyPattern(ptr,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
54	[BUG]  [BUGGY]  super.applyPattern(ptr,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(ptr,  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(ptr,  toPattern);	  super.applyPattern(ptr,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
55	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.toPattern);	  Iterator    <    Object>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.format);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.format);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(this.format);	  Iterator    <    Object>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
57	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getFormat().values().iterator();	  Iterator    <    String>    it    =    this.registry.getFormat().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
58	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getFormat().entrySet().iterator();	  Iterator    <    String>    it    =    this.registry.getFormat().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
59	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  new  String[]  {  pattern  }  );  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  new  String[]  {  pattern  }  );  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  new  String[]  {  pattern  }  );	  Pattern    toPattern    =(Pattern)registry.getFormat(   "ToPattern   ",    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
60	[BUG]  [BUGGY]  super.applyPattern(stripCustom,  new  Format(pos));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(stripCustom,  new  Format(pos));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(stripCustom,  new  Format(pos));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
61	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(pos  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(pos  +  1));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(pos  +  1));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
62	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(format),  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(format),  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(format),  toPattern);	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
63	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(pos),  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(pos),  ESCAPED_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(pos),  ESCAPED_QUOTE);	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
64	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.entrySet().iterator();	  Iterator    <    String>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
65	[BUG]  [BUGGY]  super.applyPattern(pattern,  start,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  start,  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  start,  toPattern);	  super.applyPattern(pattern,    pos,    toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getEntryIterator(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getEntryIterator(0);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getEntryIterator(0);	  Iterator    <    Object>    it    =    registry.getEntryIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
67	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(this,  pattern);	  Iterator    <    String>    it    =    this.registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
68	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  0);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(this,  0);	  Iterator    <    String>    it    =    this.registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
69	[BUG]  [BUGGY]  super.applyPattern(pattern,  0,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  0,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  0,  fmtCount);	  super.applyPattern(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
70	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  pattern);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "fromPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
71	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  null);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  null);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "fromPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
72	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  false);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  false);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "fromPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
73	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIterator(this,  pattern);	  Iterator    <    Object>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
74	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  false);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIterator(this,  false);	  Iterator    <    Object>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
75	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.values().iterator();	  Iterator    <    String>    it    =    this.registry.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
76	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getValues().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getValues().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getValues().iterator();	  Iterator    <    String>    it    =    this.registry.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
77	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  c);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  c);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
78	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN  +  1);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
79	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(SUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(SUMMY_PATTERN);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(SUMMY_PATTERN);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
80	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorIfNull(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorIfNull(pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorIfNull(pattern);	  Iterator    <    Object>    it    =    this.registry.getIteratorIfNull(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
81	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(c);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(c);	  Iterator    <    Object>    it    =    this.registry.getIteratorIfNull(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
82	[BUG]  [BUGGY]  super.applyPattern(c,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(c,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(c,  fmtCount);	  super.applyPattern(pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
83	[BUG]  [BUGGY]  super.applyPattern(pattern,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  fmtCount  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  fmtCount  +  1);	  super.applyPattern(pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.format);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.format);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.format);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(stripCustom);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(stripCustom);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(stripCustom);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
86	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(fmtCount);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
87	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(fmtCount);	  Iterator    <    String>    it    =    this.registry.getIterator(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
88	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(2);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(2);	  Iterator    <    String>    it    =    this.registry.getIterator(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
89	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.keySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.keySet().iterator();	  Iterator    <    String>    it    =    this.registry.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
90	[BUG]  [BUGGY]  super.applyPattern(pattern,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  index);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  index);	  super.applyPattern(pattern,    start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
91	[BUG]  [BUGGY]  super.applyPattern(pattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  i);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  i);	  super.applyPattern(pattern,    start);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
92	[BUG]  [BUGGY]  int  fmtCount  =  this.registry.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  this.registry.length()  -  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  this.registry.length()  -  1;	  int    fmtCount    =    this.registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
93	[BUG]  [BUGGY]  int  fmtCount  =  this.registry.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  this.registry.length()  +  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  this.registry.length()  +  1;	  int    fmtCount    =    this.registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
94	[BUG]  [BUGGY]  int  fmtCount  =  this.registry.length()  *  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  this.registry.length()  *  2;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  this.registry.length()  *  2;	  int    fmtCount    =    this.registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
95	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.values().iterator();	  Iterator    <    Object>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.entrySet().iterator();	  Iterator    <    Object>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
97	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.pattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.pattern.iterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.pattern.iterator();	  Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
98	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(fmtCount);	  Iterator    <    String>    it    =    registry.getIterator(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
99	[BUG]  [BUGGY]  Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  pattern);	  Pattern    toPattern    =    this.registry.getFormat(   "toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
100	[BUG]  [BUGGY]  Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  null);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  this.registry.getFormat( "toPattern ",  null);	  Pattern    toPattern    =    this.registry.getFormat(   "toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
101	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ",  new  String[]  {  pattern  }  );  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ",  new  String[]  {  pattern  }  );  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ",  new  String[]  {  pattern  }  );	  Pattern    toPattern    =(Pattern)registry.getFormat(   "toPattern   ",    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
102	[BUG]  [BUGGY]  int  fmtCount  =  registry.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  registry.length()  +  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  registry.length()  +  1;	  int    fmtCount    =    registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
103	[BUG]  [BUGGY]  int  fmtCount  =  registry.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  registry.length()  -  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  registry.length()  -  1;	  int    fmtCount    =    registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
104	[BUG]  [BUGGY]  super.applyPattern(pattern,  END_FE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  END_FE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  END_FE);	  super.applyPattern(pattern,    ESCAPED_QUOTE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
105	[BUG]  [BUGGY]  super.applyPattern(pattern,  START_FMT);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  START_FMT);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  START_FMT);	  super.applyPattern(pattern,    ESCAPED_QUOTE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
106	[BUG]  [BUGGY]  super.applyPattern(pattern,  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  DEFAULT_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  DEFAULT_QUOTE);	  super.applyPattern(pattern,    ESCAPED_QUOTE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
107	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  0);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  0);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
108	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  fmtCount  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  fmtCount  +  1);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
109	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  fmtCount,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  fmtCount,  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  fmtCount,  1);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
110	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  fmtCount,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  fmtCount,  0);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  fmtCount,  0);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
111	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.format);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.format);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this.format);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
112	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(stripCustom);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(stripCustom);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(stripCustom);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
113	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(fmtCount);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
114	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.origFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.origFormats.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.origFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
115	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(orig);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(orig);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(orig);	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
116	[BUG]  [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  registry.getFormat( "toPattern ",  pattern);	  Pattern    toPattern    =    registry.getFormat(   "toPattern   ",    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
117	[BUG]  [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  null,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  null,  false);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  registry.getFormat( "toPattern ",  null,  false);	  Pattern    toPattern    =    registry.getFormat(   "toPattern   ",    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
118	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getFormats().entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getFormats().entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getFormats().entrySet().iterator();	  Iterator    <    String>    it    =    registry.getFormats().values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
119	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormats().values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormats().values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getFormats().values().iterator();	  Iterator    <    String>    it    =    registry.getFormats().values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
120	[BUG]  [BUGGY]  super.applyPattern(pattern,  fmtCount,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  fmtCount,  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  fmtCount,  toPattern);	  super.applyPattern(pattern,    toPattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
121	[BUG]  [BUGGY]  super.applyPattern(pattern,  c,  toPattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  c,  toPattern,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  c,  toPattern,  fmtCount);	  super.applyPattern(pattern,    toPattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
122	[BUG]  [BUGGY]  super.applyPattern(pattern,  toPattern,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  toPattern,  fmtCount  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  toPattern,  fmtCount  +  1);	  super.applyPattern(pattern,    toPattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
123	[BUG]  [BUGGY]  Iterator  <  String>  it  =  origFormats.getFormats();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  origFormats.getFormats();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  origFormats.getFormats();	  Iterator    <    String>    it    =    registry.getFormats();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
124	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormats();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormats();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getFormats();	  Iterator    <    String>    it    =    registry.getFormats();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
125	[BUG]  [BUGGY]  super.applyPattern(ptr,  toPattern,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(ptr,  toPattern,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(ptr,  toPattern,  pos);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
126	[BUG]  [BUGGY]  super.applyPattern(pattern,  toPattern,  pos  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  toPattern,  pos  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  toPattern,  pos  +  1);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
127	[BUG]  [BUGGY]  Int  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Int  fmtCount  =  pattern.length();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Int  fmtCount  =  pattern.length();	  int    fmtCount    =    pattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
128	[BUG]  [BUGGY]  super.applyPattern(pattern,  DEMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  DEMY_PATTERN);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  DEMY_PATTERN);	  super.applyPattern(pattern,    ESCAPED_QUOTE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
129	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getEntities().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getEntities().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getEntities().iterator();	  Iterator    <    String>    it    =    this.registry.entities.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
130	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PATTERN);	  Iterator    <    Object>    it    =    this.registry.getIteratorIfNull(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
131	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PREFIX);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PREFIX);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorIfNull(DEFAULT_PREFIX);	  Iterator    <    Object>    it    =    this.registry.getIteratorIfNull(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
132	[BUG]  [BUGGY]  super.applyPattern(ptr,  new  Format(pos));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(ptr,  new  Format(pos));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(ptr,  new  Format(pos));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
133	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(p));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(p));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(p));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
134	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(format));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(format));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(format));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
135	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
136	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN,  pattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(DUMMY_PATTERN,  pattern);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
137	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
138	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this.toPattern);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
139	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.description);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this.description);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this.description);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
140	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(-1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(-1);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(-1);	  Iterator    <    String>    it    =    this.registry.getIterator(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
141	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);	  Iterator    <    String>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
142	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getFormat().keySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getFormat().keySet().iterator();	  Iterator    <    String>    it    =    this.registry.getFormat().entities().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
143	[BUG]  [BUGGY]  Pattern  toPattern  =  it.getFormat( "TO_PATTERN ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  it.getFormat( "TO_PATTERN ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  it.getFormat( "TO_PATTERN ");	  Pattern    toPattern    =    it.getFormat(   "toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
144	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getFormats().keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getFormats().keySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getFormats().keySet().iterator();	  Iterator    <    String>    it    =    registry.getFormats().values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
145	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  this);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ",  this);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "ToPattern   ",    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
146	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getDescriptions().values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getDescriptions().values().iterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getDescriptions().values().iterator();	  Iterator    <    String>    it    =    this.registry.getDescriptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
147	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  pos);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIterator(this,  pos);	  Iterator    <    Object>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
148	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIterator(this,  fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIterator(this,  fmtCount);	  Iterator    <    Object>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
149	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.entities.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.entities.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.entities.iterator();	  Iterator    <    Object>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
150	[BUG]  [BUGGY]  int  fmtCount  =  registry.getFormat(DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  registry.getFormat(DUMMY_PATTERN);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  registry.getFormat(DUMMY_PATTERN);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
151	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(ESCAPED_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(ESCAPED_QUOTE);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
152	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pos);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(this,  pos);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
153	[BUG]  [BUGGY]  super.applyPattern(pattern,  getMessage(),  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  getMessage(),  this);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  getMessage(),  this);	  super.applyPattern(pattern,    getMessage());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
154	[BUG]  [BUGGY]  super.applyPattern(pattern,  getMessage(),  it);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  getMessage(),  it);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  getMessage(),  it);	  super.applyPattern(pattern,    getMessage());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
155	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(this,  pos);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(this,  pos);	  Iterator    <    String>    it    =    this.registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
156	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "from  PATTERN ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "from  PATTERN ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "from  PATTERN ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   "fromPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
157	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  DUMMY_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "fromPattern ",  DUMMY_PATTERN);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "fromPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
158	[BUG]  [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  registry.getFormat( "toPattern ",  this);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  registry.getFormat( "toPattern ",  this);	  Pattern    toPattern    =    registry.getFormat(   "toPattern   ",    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
159	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.toPattern);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
160	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(DEFAULT_PATTERN);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
161	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.description);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.description);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(this.description);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
162	[BUG]  [BUGGY]  int  fmtCount  =  it.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  it.length();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  it.length();	  int    fmtCount    =    registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
163	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats( "n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats( "n ");  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats( "n ");	  Iterator    <    String>    it    =    registry.getFormats();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
164	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.keySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.keySet().iterator();	  Iterator    <    Object>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
165	[BUG]  [BUGGY]  super.applyPattern(pattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  1);	  super.applyPattern(pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
166	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  pos,  0);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos,  0);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
167	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  pos,  fmtCount  +  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos,  fmtCount  +  1);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
168	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  0,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  0,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  0,  fmtCount);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
169	[BUG]  [BUGGY]  super.applyPattern(stripCustom,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(stripCustom,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(stripCustom,  pos);	  super.applyPattern(ptr,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
170	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findDescriptionsIterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
171	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findDescriptionsIterator(pattern);	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
172	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  -  1);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(DUMMY_PATTERN,  fmtCount  -  1);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
173	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN  ESCAPED_QUOTE ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN  ESCAPED_QUOTE ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN  ESCAPED_QUOTE ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
174	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN "  +  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN "  +  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( "TO_PATTERN "  +  pattern);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
175	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat(DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat(DUMMY_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat(DUMMY_PATTERN);	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
176	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.emptyIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.emptyIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.emptyIterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
177	[BUG]  [BUGGY]  super.applyPattern(pattern,  fmtCount,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  fmtCount,  fmtCount);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  fmtCount,  fmtCount);	  super.applyPattern(pattern,    toPattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
178	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(i);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(i);	  Iterator    <    String>    it    =    registry.getIterator(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
179	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  *  2  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length()  *  2  +  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length()  *  2  +  1;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
180	[BUG]  [BUGGY]  super.applyPattern(p,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(p,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(p,  pos);	  super.applyPattern(p,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
181	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(DEFAULT_PATTERN);	  Iterator    <    Object>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
182	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getPatternIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getPatternIterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getPatternIterator();	  Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
183	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  pos,  ESCAPED_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos,  ESCAPED_QUOTE);	  super.applyPattern(pattern,    pos,    toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
184	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getEntryIterator(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getEntryIterator(0);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getEntryIterator(0);	  Iterator    <    Object>    it    =    this.registry.getEntryIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
185	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  0);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(this,  0);	  Iterator    <    String>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
186	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  charIndex);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this,  charIndex);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIterator(this,  charIndex);	  Iterator    <    String>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
187	[BUG]  [BUGGY]  int  fmtCount  =  pattern.lastIndexOf('.')-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.lastIndexOf('.')-  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.lastIndexOf('.')-  1;	  int    fmtCount    =    pattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
188	[BUG]  [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  Pattern.compile(pattern.length()  -  1);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  Pattern.compile(pattern.length()  -  1);	  int    fmtCount    =    pattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
189	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEMY_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(DEMY_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(DEMY_QUOTE);	  Iterator    <    String>    it    =    registry.findFormats(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
190	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  char[]  {  c  }  );  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  char[]  {  c  }  );  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  char[]  {  c  }  );	  super.applyPattern(pattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
191	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getIteratorForPattern(pattern,  toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getIteratorForPattern(pattern,  toPattern);	  Iterator    <    Object>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
192	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIterator(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIterator(this);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIterator(this);	  Iterator    <    Object>    it    =    registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
193	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.listIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.listIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.listIterator();	  Iterator    <    String>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
194	[BUG]  [BUGGY]  super.applyPattern(pattern,  start,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  start,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  start,  pos);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
195	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  pos);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  pos);	  super.applyPattern(pattern,    toPattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
196	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIteratorForPattern(pattern,  toPattern);	  Iterator    <    Object>    it    =    this.registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
197	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length()  +  2;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length()  +  2;	  int    fmtCount    =    pattern.length()    *    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
198	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  toPattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  toPattern);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
199	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  fmtCount);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern,  fmtCount);	  Iterator    <    String>    it    =    registry.getIteratorForPattern(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
200	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  pos,  c);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos,  c);	  super.applyPattern(pattern,    pos,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
201	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator(pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  this.registry.getIterator(pattern);	  Iterator    <    String>    it    =    this.registry.getIterator(this);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
202	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(FRACTIONAL_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(FRACTIONAL_QUOTE);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  pattern.length();  toPattern  =  registry.getFormat(FRACTIONAL_QUOTE);	  int    fmtCount    =    pattern.length();    toPattern    =    registry.getFormat(DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
203	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getAllIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getAllIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getAllIterator();	  Iterator    <    Object>    it    =    this.registry.getOwnIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
204	[BUG]  [BUGGY]  int  fmtCount  =  registry.size();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  int  fmtCount  =  registry.size();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	int  fmtCount  =  registry.size();	  int    fmtCount    =    registry.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
205	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(ptr));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(ptr));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(ptr));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
206	[BUG]  [BUGGY]  super.applyPattern(pattern,  new  Format(posCustom));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  new  Format(posCustom));  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  new  Format(posCustom));	  super.applyPattern(pattern,    new    Format(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
207	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(origFormats).iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.findFormats(origFormats).iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.findFormats(origFormats).iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
208	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  c);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  c);	  super.applyPattern(pattern,    null,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
209	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getEntryIterator(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getEntryIterator(this);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getEntryIterator(this);	  Iterator    <    Object>    it    =    this.registry.getEntryIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
210	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getPatterns().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getPatterns().iterator();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  String>  it  =  registry.getPatterns().iterator();	  Iterator    <    String>    it    =    pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
211	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIterator(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.getIterator(pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.getIterator(pattern);	  Iterator    <    Object>    it    =    this.registry.getIteratorIfNull(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
212	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.getEntryIterator(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.getEntryIterator(this);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  registry.getEntryIterator(this);	  Iterator    <    Object>    it    =    registry.getEntryIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
213	[BUG]  [BUGGY]  super.applyPattern(pattern,  null,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  super.applyPattern(pattern,  null,  toPattern);  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null,  toPattern);	  super.applyPattern(pattern,    pos,    toPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
214	[BUG]  [BUGGY]  Pattern  toPattern  =  it.getFormat( "toPattern ",  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =  it.getFormat( "toPattern ",  pattern);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =  it.getFormat( "toPattern ",  pattern);	  Pattern    toPattern    =    it.getFormat(   "toPattern   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
215	[BUG]  [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( ".TO_PATTERN ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Pattern  toPattern  =(Pattern)registry.getFormat( ".TO_PATTERN ");  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Pattern  toPattern  =(Pattern)registry.getFormat( ".TO_PATTERN ");	  Pattern    toPattern    =(Pattern)registry.getFormat(   "TO_PATTERN   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
216	[BUG]  [BUGGY]  char[]  c  =  pattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  char[]  c  =  pattern.toCharArray();  [BUGGY]      toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	char[]  c  =  pattern.toCharArray();	  super.applyPattern(ptr,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
217	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  this.registry.listIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {      [BUGGY]  Iterator  <  Object>  it  =  this.registry.listIterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	Iterator  <  Object>  it  =  this.registry.listIterator();	  Iterator    <    Object>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
