bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } [FE] AssertionError testMath274 [CONTEXT] public CholeskyDecompositionImpl(final RealMatrix matrix) throws NonSquareMatrixException, NotSymmetricMatrixException, NotPositiveDefiniteMatrixException { this(matrix, DEFAULT_RELATIVE_SYMMETRY_THRESHOLD, DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD); [BUGGY] } [BUGGY]  [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	76	76	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] public CholeskyDecompositionImpl(final RealMatrix matrix) throws NonSquareMatrixException, NotSymmetricMatrixException, NotPositiveDefiniteMatrixException { this(matrix, DEFAULT_RELATIVE_SYMMETRY_THRESHOLD, DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD); [BUGGY] [BUGGY] } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	76	76	2	add	
3	[BUG] [BUGGY] for (int i = 0; i < order; ++i) { [FE] AssertionError testMath274 [CONTEXT] final double maxDelta = relativeSymmetryThreshold * Math.max(Math.abs(lIJ), Math.abs(lJI)); if (Math.abs(lIJ - lJI) > maxDelta) { throw new NotSymmetricMatrixException(); } lJ[i] = 0; } }  [BUGGY] for (int i = 0; i < order; ++i) { [BUGGY]  final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	132	132	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] final double maxDelta = relativeSymmetryThreshold * Math.max(Math.abs(lIJ), Math.abs(lJI)); if (Math.abs(lIJ - lJI) > maxDelta) { throw new NotSymmetricMatrixException(); } lJ[i] = 0; } }  [BUGGY] [BUGGY] for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	132	132	2	add	
5	[BUG] [BUGGY] final double[] ltI = lTData[i]; [FE] AssertionError testMath274 [CONTEXT] if (Math.abs(lIJ - lJI) > maxDelta) { throw new NotSymmetricMatrixException(); } lJ[i] = 0; } }  for (int i = 0; i < order; ++i) { [BUGGY] final double[] ltI = lTData[i]; [BUGGY]   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	134	134	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] if (Math.abs(lIJ - lJI) > maxDelta) { throw new NotSymmetricMatrixException(); } lJ[i] = 0; } }  for (int i = 0; i < order; ++i) { [BUGGY] [BUGGY] final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	134	134	2	add	
7	[BUG] [BUGGY] ltI[i] = Math.sqrt(ltI[i]); [FE] AssertionError testMath274 [CONTEXT] } }  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   [BUGGY] ltI[i] = Math.sqrt(ltI[i]); [BUGGY] final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } }  [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	138	138	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] } }  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   [BUGGY] [BUGGY] ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } }  [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	138	138	2	add	
9	[BUG] [BUGGY] final double inverse = 1.0 / ltI[i]; [FE] AssertionError testMath274 [CONTEXT] }  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); [BUGGY] final double inverse = 1.0 / ltI[i]; [BUGGY]  for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	139	139	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] }  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); [BUGGY] [BUGGY] final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	139	139	2	add	
11	[BUG] [BUGGY] for (int q = order - 1; q > i; --q) { [FE] AssertionError testMath274 [CONTEXT]  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; [BUGGY] for (int q = order - 1; q > i; --q) { [BUGGY] ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	141	141	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT]  for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; [BUGGY] [BUGGY] for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	141	141	2	add	
13	[BUG] [BUGGY] ltI[q] *= inverse; [FE] AssertionError testMath274 [CONTEXT] for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { [BUGGY] ltI[q] *= inverse; [BUGGY] final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	142	142	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { [BUGGY] [BUGGY] ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	142	142	2	add	
15	[BUG] [BUGGY] final double[] ltQ = lTData[q]; [FE] AssertionError testMath274 [CONTEXT] final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; [BUGGY] final double[] ltQ = lTData[q]; [BUGGY] for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	143	143	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; [BUGGY] [BUGGY] final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	143	143	2	add	
17	[BUG] [BUGGY] for (int p = q; p < order; ++p) { [FE] AssertionError testMath274 [CONTEXT] final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; [BUGGY] for (int p = q; p < order; ++p) { [BUGGY] ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	144	144	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT] final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; [BUGGY] [BUGGY] for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	144	144	2	add	
19	[BUG] [BUGGY] ltQ[p] -= ltI[q] * ltI[p]; [FE] AssertionError testMath274 [CONTEXT]   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { [BUGGY] ltQ[p] -= ltI[q] * ltI[p]; [BUGGY] } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	145	145	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError testMath274 [CONTEXT]   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { [BUGGY] [BUGGY] ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	145	145	2	add	
