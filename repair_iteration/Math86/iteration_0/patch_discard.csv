compilation error,134,replace,[CE] bad operand types for binary operator '-',final double[] ltI = lTData[i]; ,final double[] ltI = lTData[i] - 1;
compilation error,134,replace,[CE] bad operand types for binary operator '+',final double[] ltI = lTData[i]; ,final double[] ltI = lTData[i] + 1;
compilation error,134,replace,[CE] cannot find symbol lJ,final double[] ltI = lTData[i]; ,final double[] ltI = lTData[i] / lJ;
compilation error,134,replace,[CE] cannot find symbol ltI,final double[] ltI = lTData[i]; , 
increase failing tests,139,add, [FE] AssertionError testMatricesValues,,  ltI[i] = Math.sqrt(ltI[i]);
compilation error,139,add,[CE] illegal start of expression,,  if(order > 1) { for(int i = 0; i < order; ++i) { ltI[i] = lTData[i]; ltI[i] = Math.sqrt(ltI[i]); }
compilation error,139,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  final double[][] order = Math.sqrt(ltI[i]);
compilation error,139,add,[CE] illegal start of expression,,  if(order > 1) { for(int i = 0; i < order; ++i) { ltI[i] * lTData[i] = Math.sqrt(ltI[i]); }
compilation error,139,add,[CE] illegal start of expression,,  if(order > 1) { for(int i = 0; i < order; ++i) { ltI[i] * ltData[i] = Math.sqrt(ltI[i]); }
increase failing tests,145,replace, [FE] AssertionError testMatricesValues,ltQ[p] -= ltI[q] * ltI[p]; ,ltQ[p] -= ltI[q] * ltQ[p];
compilation error,145,replace,[CE] cannot find symbol ltData,ltQ[p] -= ltI[q] * ltI[p]; ,ltQ[p] -= ltI[q] * ltData[p];
increase failing tests,145,replace, [FE] AssertionError testMatricesValues,ltQ[p] -= ltI[q] * ltI[p]; ,ltQ[p] -= ltI[q] * inverse;
increase failing tests,145,replace, [FE] AssertionError testMatricesValues,ltQ[p] -= ltI[q] * ltI[p]; , 
increase failing tests,142,replace, [FE] AssertionError testMatricesValues,ltI[q] *= inverse; ,ltI[q] *=(inverse > 0)? ltI[q] : inverse;
compilation error,142,replace,[CE] : expected,ltI[q] *= inverse; ,ltI[q] *=(inverse > 0)? ltI[q], inverse : inverse;
compilation error,142,replace,[CE] double cannot be dereferenced,ltI[q] *= inverse; ,ltI[q] *=(inverse > 0)? ltI[q].inverse : inverse;
increase failing tests,142,replace, [FE] AssertionError testMatricesValues,ltI[q] *= inverse; , 
compilation error,132,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  double order = Math.sqrt(relativeSymmetryThreshold);
compilation error,132,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  int order = Math.max(relativeSymmetryThreshold);
compilation error,132,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  int order = Math.order(lTData, maxDelta);
compilation error,132,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  double order = Math.max(relativeSymmetryThreshold);
compilation error,132,add,[CE] variable order is already defined in constructor CholeskyDecompositionImpl(RealMatrix,double,double),,  double order = Math.max(relativeSymmetryThreshold, Math.abs(lIJ));
increase failing tests,142,add, [FE] AssertionError testMatricesValues,,  ltI[q] = Math.sqrt(ltI[q]);
compilation error,142,add,[CE] method sqrt in class Math cannot be applied to given types;,,  ltI[q] = Math.sqrt(ltI[q], inverse);
increase failing tests,142,add, [FE] AssertionError testMatricesValues,,  ltI[q] = Math.sqrt(ltI[i]);
compilation error,132,replace,[CE] cannot find symbol absoluteSymmetryThreshold,for (int i = 0; i < order; ++i) { ,for(int i = 0; i < absoluteSymmetryThreshold; ++i) {
