bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
13	[BUG] [BUGGY] ltI[q] *= inverse; [FE] AssertionError [CONTEXT] for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { [BUGGY] ltI[q] *= inverse; [BUGGY] final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	142	142	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (int i = 0; i < order; ++i) { final double[] ltI = lTData[i];   ltI[i] = Math.sqrt(ltI[i]); final double inverse = 1.0 / ltI[i]; for (int q = order - 1; q > i; --q) { [BUGGY] [BUGGY] ltI[q] *= inverse; final double[] ltQ = lTData[q]; for (int p = q; p < order; ++p) { ltQ[p] -= ltI[q] * ltI[p]; } } } } [CLASS] CholeskyDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,double,double)  RealMatrix matrix final double relativeSymmetryThreshold final double absolutePositivityThreshold [VARIABLES] double[][] lTData boolean RealMatrix cachedL cachedLT matrix double[] lI lJ ltI ltQ double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD DEFAULT_RELATIVE_SYMMETRY_THRESHOLD absolutePositivityThreshold inverse lIJ lJI maxDelta relativeSymmetryThreshold int i j order p q  	projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java	0.5345224838248488	142	142	2	add	
