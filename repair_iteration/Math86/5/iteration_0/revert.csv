projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldouble[]ltI=lTData[i];ltI[i]=Math.sqrt(ltI[i]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldouble[][]ltI=lTData[i];ltI[i]=Math.sqrt(ltI[i]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139ltI[i]=Math.sqrt(ltI[i]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139ltI[j]=Math.sqrt(ltI[j]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139ltI[i]=Math.sqrt(ltI[i].doubleValue());
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0/ltI[i];
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0*ltI[i];
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0/ltI[i].doubleValue();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0/ltI[i]+1;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0/ltI[0];
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldouble[][]ltI=ltData[i];ltI[i]=Math.sqrt(ltI[i]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldouble[]ltI=ltData[i];ltI[i]=Math.sqrt(ltI[i]);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldoubleinverse=1.0/ltI[i].inverse;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java139finaldouble[][]ltI=ltI[i].symmetry();
