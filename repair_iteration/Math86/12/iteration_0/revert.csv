projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105intcachedL=matrix.getColumnDimension();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105intcachedL=matrix.getLowerCaseDimension();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105double[]cachedL=matrix.getDataRelativeSymmetryThreshold();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105double[]cachedL=matrix.getDataRelativeSymmetry();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105intcachedL=matrix.getLowerCase();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getData();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getData(order);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getDataImpl();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getDataRef();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105RealMatrix[]cachedL=matrix.getData();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105RealMatrix[]cachedLT=matrix.getDataRef();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105RealMatrix[]cachedLT=matrix.getData();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105intcachedL=matrix.getColumnDimension(order);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getDataLength();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105lTData=matrix.getDataItem(order);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105Matrixmatrix=matrix.getColumnDimension();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105double[]cachedL=matrix.getDataRef();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105double[]cachedL=matrix.getData();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java105double[]cachedL=matrix.getCachedLocals();
