projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107lTData=matrix.getColumnDimension();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107((RealMatrix)lTData).relativeSymmetryThreshold=absolutePositivityThreshold;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107lTData=matrix.getColumnDimension();cachedL=null;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107((RealMatrix)lTData).relativeSymmetryThreshold=true;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107((RealMatrix)lTData).relativeSymmetryThreshold=Math.max(order,lTData.length);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=null;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=lTData;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=newRealMatrix();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=newRealMatrix(lTData,lTData);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=newRealMatrix[lTData.length];
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107if(cachedL!=null){for(inti=0;i<order;++i){lTData[i][i]=lTData[i][i];}
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107if(cachedL!=null){for(inti=0;i<order;++i){lTData[i][i]=matrix.getData();}
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107if(cachedL!=null){for(intj=0;j<lTData.length;++j){cachedL[j]=Math.max(cachedL[j][j]);}
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107lTData=matrix.getData();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT=newRealMatrix(cachedL,lTData);
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107((RealMatrix)lTData).relativeSymmetryThreshold=relativeSymmetryThreshold;
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107double[][]lTData=matrix.getColumnDimension();
projects/Math86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java107cachedLT-=lTData;
