bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _inputBuffer[ptr++]  +  1;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  1;	  ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  intLen;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _inputBuffer[ptr++]  +  intLen;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  intLen;	  ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(_char)_inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_char)_inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[0];  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(char)_inputBuffer[0];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(char)_inputBuffer[0];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[startPtr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(char)_inputBuffer[startPtr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(char)_inputBuffer[startPtr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  int  ch  =  _parseInt(ch,  startPtr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  ptr);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch);  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch);	  ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE;	  ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  ch  =  _decodedData[ptr++];  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =  _decodedData[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[ptr++];	  ch    =    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }    [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]    if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
