bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  if(ch  ==  INT_NOT)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_NOT)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_NOT)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_DECEMBER)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_DECEMBER)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_DECEMBER)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  ==  INT_9)  {	  if(ch    <    =    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  1)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    >=    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNull(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseNull(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNull(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNull(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  <  INT_9)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  >=  INT_0  ||  ch  <  INT_9)  {  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  >=  INT_0  ||  ch  <  INT_9)  {	  if(ch    >    INT_9    ||    ch    <    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  <  INT_9)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  <  INT_9)  {  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  <  INT_9)  {	  if(ch    >    INT_9    ||    ch    <    INT_0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
45	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(true,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(true,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0)  {  return  _parseNumber2(true,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  2)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  2)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  2)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    >=    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  if(ch  ==  INT_POP)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_POP)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_POP)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {	  if(ch    <    =    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS  ||  ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PLUS)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  if(ch  >=  INT_0)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  >=  INT_0)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  >=  INT_0)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNull(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseNull(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    >=    1)    {    return    _parseNumber2(false,    startPtr);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseNumber2(ch,  startPtr,  ptr);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  INT_len)  {  if(ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_len)  {  if(ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_E  ||  ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_E  ||  ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_E  ||  ch  ==  INT_PERIOD)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
65	[BUG]  [BUGGY]  if(ch  ==  INT_len  ||  ch  ==  INT_L)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  ==  INT_len  ||  ch  ==  INT_L)  {  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_len  ||  ch  ==  INT_L)  {	  if(ch!=    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]      break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	  if(ch    ==    INT_PERIOD    ||    ch    ==    INT_E)    {    if(ptr    >=    inputLen)    {    return    _parseInt(ch,    startPtr,    ptr);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
