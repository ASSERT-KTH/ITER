bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PERIOD  ||  ch  ==  INT_E)  {  if(ptr  >=  inputLen)  {  return  _parseInt(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(ch  ==  INT_PERIOD)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  ==  INT_PERIOD)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  ==  INT_PERIOD)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(ch!=  INT_0  ||  ch  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch!=  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch!=  INT_0  ||  ch  ==  INT_9)  {	  if(ch    >=    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNull(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseNumber2(false,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  >=  1)  {  return  _parseNumber2(false,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  1)  {  return  _parseNumber2(false,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  ==  INT_9)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  =  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  ==  INT_9)  {	  if(ch    >=    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  >  INT_9  ||  ch  <  INT_0)  {	  if(ch    >=    INT_0    ||    ch    ==    INT_9)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }  [BUGGY]    break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	872	872	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0)  {  return  _parseInt(ch,  startPtr,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
