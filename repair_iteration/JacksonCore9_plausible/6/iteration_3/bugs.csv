bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _textBuffer.setValueAsString(null);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.setValueAsString(null);  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.setValueAsString(null);	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  _textBuffer.setValueAsString(true);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.setValueAsString(true);  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.setValueAsString(true);	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  _textBuffer.setValueAsString(false);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.setValueAsString(false);  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.setValueAsString(false);	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.START_STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_STRING)  {	  if(_currToken    ==    JsonToken.START_STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  if(_currToken  ==  null  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  null  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  null  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    &&    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    &&    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  if(_textBuffer  ==  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer  ==  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer  ==  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    &&    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
13	[BUG]  [BUGGY]  _tokenIncomplete  =  true;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _tokenIncomplete  =  true;  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_tokenIncomplete  =  true;	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
16	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.STRING)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
21	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.STRING  &&  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    &&    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  _tokenIncomplete  =  false;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _tokenIncomplete  =  false;  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_tokenIncomplete  =  false;	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_bufferRecyclable)  {  _tokenIncomplete  =  true;  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
30	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  _tokenIncomplete  =  false;  _finishString();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _tokenIncomplete  =  false;  _finishString();  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_tokenIncomplete  =  false;  _finishString();	  if(_tokenIncomplete)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
32	[BUG]  [BUGGY]  _finishString();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _finishString();  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_finishString();	  if(_tokenIncomplete)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
33	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  _textBuffer.finishString();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.finishString();  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.finishString();	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  _textBuffer.setValue(null);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.setValue(null);  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.setValue(null);	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(!_bufferRecyclable)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
42	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_tokenRecyclable)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
44	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
45	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken!=  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken!=  JsonToken.STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
48	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken!=    JsonToken.VALUE_STRING    &&    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
49	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.STRING)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.STRING)  {	  if(_currToken    ==    JsonToken.STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
50	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(_tokenIncomplete)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_textBuffer!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  if(_bufferRecyclable!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_bufferRecyclable!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_bufferRecyclable!=  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(getText());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  _textBuffer.setCurrentLength(getText());  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	_textBuffer.setCurrentLength(getText());	  _textBuffer.contentsAsString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_STRING    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
58	[BUG]  [BUGGY]  if(_finishString())  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getValueAsString()  throws  IOException  {      [BUGGY]  if(_finishString())  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [BUGGY]      if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }  return  super.getValueAsString(null);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getValueAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	246	246	2	replace	if(_finishString())  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }	  if(_bufferRecyclable)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
