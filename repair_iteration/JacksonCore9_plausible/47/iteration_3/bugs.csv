bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  1);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
2	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr  -  startPtr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr  -  startPtr);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
3	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  ptr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  ptr);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
4	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  2);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  2);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  1);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  1,  ptr);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  1,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  +  1,  ptr);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length()  -  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  int  len  =  _inputBuffer.length()  -  1;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	int  len  =  _inputBuffer.length()  -  1;	  int    len    =    _inputBuffer.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
8	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length()  +  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  int  len  =  _inputBuffer.length()  +  1;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	int  len  =  _inputBuffer.length()  +  1;	  int    len    =    _inputBuffer.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
9	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length()  -  startPtr;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  int  len  =  _inputBuffer.length()  -  startPtr;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	int  len  =  _inputBuffer.length()  -  startPtr;	  int    len    =    _inputBuffer.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  len,  ptr);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  len,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  len,  ptr);	  _textBuffer.resetWithShared(_inputBuffer,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  _textBuffer.reset(_inputBuffer,  startPtr,  len);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.reset(_inputBuffer,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.reset(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  bucket  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  bucket  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	bucket  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  ||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  ||(len  <  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||(len  <  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||(len  <  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch,  startPtr,  len);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  parent  ==  null  ||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  parent  ==  null  ||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	parent  ==  null  ||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  0);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  0);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  0);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  if(len  ==  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  ==  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  ==  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  ||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||(len  <  =  0  &&  _parsingContext.inRoot()))  {  _parseStartSpace(ch);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  ||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||  len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ch);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  ch  =  _parsingContext.inRoot()  +  len;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inRoot()  +  len;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inRoot()  +  len;	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  ch  =  _parsingContext.inRoot()  +  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inRoot()  +  1;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inRoot()  +  1;	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  ch  =  _parsingContext.inRootSpace();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inRootSpace();  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inRootSpace();	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
27	[BUG]  [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
29	[BUG]  [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  +  1);	  _textBuffer.resetWithLong(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
30	[BUG]  [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  ptr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLong(_inputBuffer,  startPtr,  ptr);	  _textBuffer.resetWithLong(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
31	[BUG]  [BUGGY]  _textBuffer.resetWithLong(ch,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLong(ch,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLong(ch,  startPtr,  len);	  _textBuffer.resetWithLong(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
32	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ptr);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ptr);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ptr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ptr);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ch);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len,  ch);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(ch,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(ch,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(ch,  startPtr,  len);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  bucket  <  0)  {  return  resetInt(false,  intLen);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  bucket  <  0)  {  return  resetInt(false,  intLen);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	bucket  <  0)  {  return  resetInt(false,  intLen);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  ||  len  <  0)  {  return  resetInt(false,  intLen);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||  len  <  0)  {  return  resetInt(false,  intLen);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||  len  <  0)  {  return  resetInt(false,  intLen);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  bucket  <  0)  {  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  bucket  <  0)  {  return  resetInt(false,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	bucket  <  0)  {  return  resetInt(false,  intLen);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  bucketPtr  <  0)  {  return  resetInt(false,  intLen);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  bucketPtr  <  0)  {  return  resetInt(false,  intLen);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	bucketPtr  <  0)  {  return  resetInt(false,  intLen);	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  +  1);	  _textBuffer.resetWithLength(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  ptr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLength(_inputBuffer,  startPtr,  ptr);	  _textBuffer.resetWithLength(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  startPtr);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  startPtr);	  _textBuffer.resetWithLength(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr,  len);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  ptr,  len);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-startPtr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-startPtr);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  ptr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  ptr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    startPtr);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
49	[BUG]  [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
50	[BUG]  [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length!=  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length!=  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length!=  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
51	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  len);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    endPtr    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
52	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  endPtr  -  startPtr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  endPtr  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  endPtr  -  startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    endPtr    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
53	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  +  len);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  +  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  +  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    endPtr    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
54	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
55	[BUG]  [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
56	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  0,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  0,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  0,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  ch  =  _parsingContext.getRootElement()  +  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.getRootElement()  +  1;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.getRootElement()  +  1;	  ch    =    _parsingContext.getRootElement();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  ch  =  _parsingContext.getRootElement()  +  len;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.getRootElement()  +  len;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.getRootElement()  +  len;	  ch    =    _parsingContext.getRootElement();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
59	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ptr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ptr);	  _textBuffer.resetWithSeparator(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
60	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len,  ptr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len,  ptr);	  _textBuffer.resetWithSeparator(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
61	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  +  1);	  _textBuffer.resetWithSeparator(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
62	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ch);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ch);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1,    ptr);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr-startPtr);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr-startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr-startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1,    ptr);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr,  ch);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr,  ch);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1,    ptr);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  len);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    ptr);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
66	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
67	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
68	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
69	[BUG]  [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Chars[]  buf  =  _reader.readChars(ch,  startPtr,  len);	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-1,  ch);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-1,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-1,  ch);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
71	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-2);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-2);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
72	[BUG]  [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	Character[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
73	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
74	[BUG]  [BUGGY]  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
75	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-startPtr  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-startPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-startPtr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-startPtr);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-offset);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-offset);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-offset);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-startPtr);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
77	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
78	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  startPtr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  2  -  startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
79	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  2);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  2);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
80	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  ptr  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  ptr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  ptr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    startPtr    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
81	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  startPtr  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  startPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  startPtr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    startPtr    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
82	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
83	[BUG]  [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
85	[BUG]  [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
86	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  buf.length;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  buf.length;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  buf.length;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    buf.length;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
87	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    len);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(true,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(true,  intLen);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
90	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen  +  1);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen  +  1);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  intLen  +  1);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  outputPtr  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  outputPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  outputPtr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  -  startPtr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len  -  startPtr);	  _textBuffer.resetWithSeparator(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
94	[BUG]  [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  -  startPtr);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLong(_inputBuffer,  startPtr,  len  -  startPtr);	  _textBuffer.resetWithLong(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
95	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len,  ptr-1);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
97	[BUG]  [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  2)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
98	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-startPtr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  len-startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-startPtr);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
99	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-outputPtr);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-outputPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ptr-outputPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-startPtr);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
100	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ch);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ch);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ch);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
101	[BUG]  [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
103	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  +  1);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
104	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  -  startPtr);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  -  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  len  -  startPtr);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
105	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  4);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  4);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  4);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
106	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  3);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  3);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  3);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
107	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  startPtr  *  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  startPtr  *  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  -  startPtr  *  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
108	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  startPtr  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  startPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  startPtr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    startPtr    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
109	[BUG]  [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
110	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  intLen);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
111	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch,  startPtr,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseEndSpace(ch,  startPtr,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
112	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  outputPtr);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  outputPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  outputPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    startPtr);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  startPtr);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    startPtr);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
114	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  startPtr  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  startPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  -  startPtr  +  1);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
115	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
116	[BUG]  [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >=  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
117	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  currToken;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  currToken;  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  currToken;  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    currToken;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
118	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
119	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
120	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
121	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
122	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
123	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1,  len);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1,    ptr);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
124	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr  -  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr  -  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  ptr  -  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1,    ptr);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
125	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  len);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    endPtr    -    startPtr);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
126	[BUG]  [BUGGY]  ch  =  _parsingContext.inRoot()  +  startPtr;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inRoot()  +  startPtr;  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inRoot()  +  startPtr;	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
127	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  len);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    startPtr);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
128	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  startPtr);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  startPtr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    startPtr);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
129	[BUG]  [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  len,  ptr);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  len,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithCapacity(_inputBuffer,  len,  ptr);	  _textBuffer.resetWithShared(_inputBuffer,    len,    ptr);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
130	[BUG]  [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(ptr  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  _parseFloat(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    _parseFloat(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
131	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr  -  startPtr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    startPtr    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
132	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  len);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  return  resetInt(false,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    return    resetInt(false,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
133	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  *  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
134	[BUG]  [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithLength(_inputBuffer,  startPtr,  len  -  1);	  _textBuffer.resetWithLength(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
135	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr,  len);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr,  len);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ptr-startPtr);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
136	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  2);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  /  2);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    *    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
137	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    0)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
138	[BUG]  [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ch);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithDecoded(_inputBuffer,  startPtr,  ch);	  _textBuffer.resetWithDecoded(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  ptr);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  ptr);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(_parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  ptr);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
140	[BUG]  [BUGGY]  ||  len  <  0  ||  _parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ||  len  <  0  ||  _parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	||  len  <  0  ||  _parsingContext.inRoot())  {  _parseStartSpace(ch,  startPtr,  len);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch,    startPtr,    len);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
141	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  ptr);  if(buf.length  ==  2)  {  return  resetInt(0,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(ch,    startPtr,    len);    if(buf.length    ==    2)    {    return    resetInt(0,    len);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
142	[BUG]  [BUGGY]  ch  =  _parsingContext.inArray();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inArray();  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inArray();	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
143	[BUG]  [BUGGY]  ch  =  _parsingContext.inLocal();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.inLocal();  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.inLocal();	  ch    =    _parsingContext.inRoot();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
144	[BUG]  [BUGGY]  if(len  <  =  0)  {  _parseStartSpace(ch);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  _parseStartSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  _parseStartSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
145	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(!_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  <  =  0)  {  if(!_parsingContext.inRoot())  {  _parseStartSpace(ch);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  <  =  0)  {  if(!_parsingContext.inRoot())  {  _parseStartSpace(ch);  }	  if(len    <    =    0)    {    if(_parsingContext.inRoot())    {    _parseStartSpace(ch);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
146	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(ch,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
147	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(buf,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(buf,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(buf,  startPtr,  len);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
148	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  new  Integer(buf,  0,  len);  }	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    ==    0)    {    return    new    Integer(buf,    0,    len);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
149	[BUG]  [BUGGY]  ch  =  _parsingContext.getRootPtr();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.getRootPtr();  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.getRootPtr();	  ch    =    _parsingContext.getRootElement();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
150	[BUG]  [BUGGY]  ch  =  _parsingContext.getRootPtrElement();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  ch  =  _parsingContext.getRootPtrElement();  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	ch  =  _parsingContext.getRootPtrElement();	  ch    =    _parsingContext.getRootElement();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
151	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  2);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len  *  2);	  _textBuffer.resetWithFloat(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
152	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ch);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ch);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  ch);	  _textBuffer.resetWithSeparator(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
153	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  1);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  -  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
154	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch,  ptr);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch,  ptr);  [BUGGY]      return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	889	889	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  ch,  ptr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    ch);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
