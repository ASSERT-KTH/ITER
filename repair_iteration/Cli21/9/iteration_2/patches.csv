bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(newAnonymous);	  Option    option    =(Option)newOptionMap.get(this.description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(this.description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(this.description);	  Option    option    =(Option)newOptionMap.get(this.description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this.description  -  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(this.description  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(this.description  -  1);	  Option    option    =(Option)newOptionMap.get(this.description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  2);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  2);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(name  +  2);	  Option    option    =(Option)newOptionMap.get(name    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.DEFAULT_PREFIX);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.DEFAULT_PREFIX);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.DEFAULT_PREFIX);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
8	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
9	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(description);	  Option    option    =(Option)newOptionMap.get(description);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newAnonymous.get(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newAnonymous.get(description);	  Option    option    =(Option)newOptionMap.get(description);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(0);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(0);	  Option    option    =(Option)newOptionMap.get(description);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(name  +  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(name  +  1);	  Option    option    =(Option)this.optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
13	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList(newOptionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  ArrayList(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList(newOptionMap);	  final    Set    newPrefixes    =    new    HashSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap.keySet());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap.keySet());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newOptionMap.keySet());	  final    Set    newPrefixes    =    new    HashSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  TreeSet();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  TreeSet();  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  <  Prefix>  newPrefixes  =  new  TreeSet();	  final    List    newPrefixes    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  newAnonymous,  description);	  final    Option    option    =    options.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
17	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description,  newAnonymous);	  final    Option    option    =    options.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
18	[BUG]  [BUGGY]  final  Option  option  =  newOptionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  newOptionMap.getOption(name,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  newOptionMap.getOption(name,  newAnonymous);	  final    Option    option    =    options.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
19	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.get();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.get();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.get();	  final    SortedMap    options    =    optionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  final  SortedMap  options  =  this.optionMap.get();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.optionMap.get();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.optionMap.get();	  final    SortedMap    options    =    optionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  final  SortedMap  options  =(SortedMap)optionMap.get();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =(SortedMap)optionMap.get();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =(SortedMap)optionMap.get();	  final    SortedMap    options    =    optionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
22	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this.options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this.options);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
24	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE  +  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE  +  1);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  final  SortedMap  options  =  options.getOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  options.getOptionMap();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  options.getOptionMap();	  final    SortedMap    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
26	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  minimum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  description,  minimum);	  final    Option    option    =    optionMap.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  description,  newAnonymous);	  final    Option    option    =    optionMap.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  description,  required);	  final    Option    option    =    optionMap.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  newAnonymous);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
30	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  this.options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE,  this.options);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
31	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description,  minimum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description,  required);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description,  maximum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(this.options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(this.options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(this.options);	  final    List    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
35	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);	  final    List    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
36	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
37	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC(),  this.options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC(),  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC(),  this.options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  newAnonymous);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  HashSet();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  HashSet();  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  <  Prefix>  newPrefixes  =  new  HashSet();	  final    ArrayList    newPrefixes    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
41	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newOptionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.toArray(newOptionMap);	  final    SortedMap    options    =    newOptionMap.toArray(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
42	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(this);	  final    SortedMap    options    =    newOptionMap.toArray(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
43	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous,  maximum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  maximum);	  newOptionMap.put(name,    newAnonymous,    required);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous,  minimum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  minimum);	  newOptionMap.put(name,    newAnonymous,    required);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous,  prefixes);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  prefixes);	  newOptionMap.put(name,    newAnonymous,    required);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  Option  options  =  optionMap.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  options  =  optionMap.getOption(name,  description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  optionMap.getOption(name,  description);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
47	[BUG]  [BUGGY]  Option  options  =  optionMap.getOption(description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  options  =  optionMap.getOption(description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  optionMap.getOption(description);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
48	[BUG]  [BUGGY]  Option  options  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  options  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  optionMap.getOption(name,  newAnonymous);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
49	[BUG]  [BUGGY]  Option  options  =  newOptionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  options  =  newOptionMap.getOption(name);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  newOptionMap.getOption(name);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
50	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.getAllOptions();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.getAllOptions();	  final    SortedMap    options    =    newOptionMap.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
51	[BUG]  [BUGGY]  final  SortedMap  options  =  this.optionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.optionMap.getAllOptions();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.optionMap.getAllOptions();	  final    SortedMap    options    =    newOptionMap.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
52	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
53	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
54	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous,  optionMap);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
56	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList(optionMap,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  ArrayList(optionMap,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList(optionMap,  newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(this.options,  newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
58	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(description);	  final    SortedMap    options    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
59	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.description);	  final    SortedMap    options    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
60	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.name);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.name);	  final    SortedMap    options    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
61	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap.get(description);	  final    SortedMap    newOptionMap    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
64	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(this.description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap.get(this.description);	  final    SortedMap    newOptionMap    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(name);	  final    SortedMap    newOptionMap    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
66	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.options.get(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(newOptionMap);	  Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
67	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.getOptionMap();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.getOptionMap();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.getOptionMap();	  final    SortedMap    options    =    newOptionMap.get(this.options);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
68	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.get(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.get(newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.get(newOptionMap);	  final    SortedMap    options    =    newOptionMap.get(this.options);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
69	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options,  this.prefixes);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options,  this.prefixes);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.options,  this.prefixes);	  final    SortedMap    options    =    newOptionMap.get(this.options);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
70	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.keySet();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.keySet();	  final    SortedMap    options    =    newOptionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
71	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptions(this.options);	  final    SortedMap    options    =    newOptionMap.getOptions(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
72	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptions(newAnonymous);	  final    SortedMap    options    =    newOptionMap.getOptions(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
73	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptions(this);	  final    SortedMap    options    =    newOptionMap.getOptions(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
74	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this.options,  newAnonymous);	  final    SortedMap    newOptionMap    =    newOptionMap(this.options);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
75	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.prefixes);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.prefixes);	  final    SortedMap    newOptionMap    =    newOptionMap(this.options);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
76	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.defaultAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this.options,  this.defaultAnonymous);	  final    SortedMap    newOptionMap    =    newOptionMap(this.options);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
77	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList(this.options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  ArrayList(this.options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList(this.options);	  final    Set    newPrefixes    =    new    HashSet(this.options);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
78	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.description,  name);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.description,  name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.description,  name);	  final    Option    option    =    options.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  final  Option  option  =  this.options.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  this.options.getOption(this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  this.options.getOption(this.description);	  final    Option    option    =    options.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  true);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  true);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  true);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
81	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options,  false);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options,  false);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(this.options,  false);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
82	[BUG]  [BUGGY]  newAnonymous.add(optionMap);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.add(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.add(optionMap);	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
83	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap.values());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.addAll(optionMap.values());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(optionMap.values());	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
84	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap,  options);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.addAll(optionMap,  options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(optionMap,  options);	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
85	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.getOptionMap();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.getOptionMap();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.getOptionMap();	  final    SortedMap    options    =    newOptionMap.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
86	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap(this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptionMap(this);	  final    SortedMap    options    =    newOptionMap.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
87	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap(this.options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptionMap(this.options);	  final    SortedMap    options    =    newOptionMap.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
88	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
89	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
90	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
91	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  this.maximum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.defaultName,  this.maximum);	  final    Option    option    =    options.getOption(this.defaultName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  this.minimum);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  this.minimum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.defaultName,  this.minimum);	  final    Option    option    =    options.getOption(this.defaultName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
93	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.defaultName,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.defaultName,  newAnonymous);	  final    Option    option    =    options.getOption(this.defaultName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
94	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(prefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(prefixes);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(prefixes);	  final    Set    newPrefixes    =    new    TreeSet(required);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
95	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(newAnonymous);	  final    Set    newPrefixes    =    new    TreeSet(required);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
96	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required,  maximum);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(required,  maximum);	  final    Set    newPrefixes    =    new    TreeSet(required);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
97	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(this);	  final    SortedMap    newOptionMap    =    newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
98	[BUG]  [BUGGY]  newAnonymous.addAll(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.addAll(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(newOptionMap);	  newAnonymous.add(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  newAnonymous.add(newOptionMap,  name);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.add(newOptionMap,  name);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.add(newOptionMap,  name);	  newAnonymous.add(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(newOptionMap,  this.options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(newOptionMap,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newAnonymous.toArray(newOptionMap,  this.options);	  final    SortedMap    options    =    newAnonymous.toArray(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
101	[BUG]  [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(optionMap);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newAnonymous.toArray(optionMap);	  final    SortedMap    options    =    newAnonymous.toArray(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
102	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(this.options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(this.options);	  final    SortedMap    newOptionMap    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
103	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(newPrefixes);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).setValue(newPrefixes);	  newOptionMap.put(name,    newAnonymous).setValue(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
104	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).setValue(description);	  newOptionMap.put(name,    newAnonymous).setValue(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
105	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(this.options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).setValue(this.options);	  newOptionMap.put(name,    newAnonymous).setValue(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
106	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).setValue(required);	  newOptionMap.put(name,    newAnonymous).setValue(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
107	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  this.options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  this.options);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.toArray(newAnonymous,  newOptionMap);	  final    SortedMap    options    =    optionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
110	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(newAnonymous);	  final    SortedMap    newOptionMap    =    newOptionMap(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
111	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
112	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(this);	  final    SortedMap    options    =    newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  required);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
114	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  minimum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  minimum);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
115	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  this);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
116	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous.keySet());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous.keySet());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous.keySet());	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
117	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous,  newOptionMap);	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
118	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  ArrayList(newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList(newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
119	[BUG]  [BUGGY]  Option  option  =  newOptionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  newOptionMap.getOption(name,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  newOptionMap.getOption(name,  newAnonymous);	  final    Option    option    =    optionMap.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getInstance());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getInstance());	  final    Set    newPrefixes    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
121	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getDefault());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeMap(ReverseStringComparator.getDefault());	  final    Set    newPrefixes    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
122	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  TreeMap();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  TreeMap();  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  TreeMap();	  final    Set    newPrefixes    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
123	[BUG]  [BUGGY]  newOptionMap.put(name,  description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  description,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  description,  newAnonymous);	  newOptionMap.put(name,    newAnonymous,    description);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  newOptionMap.put(name,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  description);	  newOptionMap.put(name,    newAnonymous,    description);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  newOptionMap.put(Name,  description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(Name,  description,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(Name,  description,  newAnonymous);	  newOptionMap.put(name,    newAnonymous,    description);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(newAnonymous,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(newAnonymous,  newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(newAnonymous,  newOptionMap);	  final    SortedMap    options    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
127	[BUG]  [BUGGY]  final  SortedMap  options  =  this.optionMap.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.optionMap.get(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.optionMap.get(newAnonymous);	  final    SortedMap    options    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
128	[BUG]  [BUGGY]  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  options.getOption(description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  options.getOption(description);	  Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  options.getOption(name,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  options.getOption(name,  newAnonymous);	  Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
130	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  options.getOption(name,  description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  options.getOption(name,  description);	  Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  options.getOption(this.description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.description);	  Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
132	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.toArray(newAnonymous,  options);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    options);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
133	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(options,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(options,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    options);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
134	[BUG]  [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  HashSet(optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  <  Prefix>  newPrefixes  =  new  HashSet(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  <  Prefix>  newPrefixes  =  new  HashSet(optionMap);	  final    List    newPrefixes    =    new    ArrayList(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
135	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options,  this.options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options,  this.options);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this.options);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
136	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.getAllOptions();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.getAllOptions();	  final    SortedMap    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
137	[BUG]  [BUGGY]  final  SortedMap  options  =(SortedMap)this.options.getOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =(SortedMap)this.options.getOptions();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =(SortedMap)this.options.getOptions();	  final    SortedMap    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
138	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(this.options,  newAnonymous);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    this.options);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(this.options);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    this.options);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
140	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.toArray(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.toArray(newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.toArray(newOptionMap);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    this.options);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
141	[BUG]  [BUGGY]  newOptionMap.put(Name,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(Name,  newAnonymous,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(Name,  newAnonymous,  description);	  newOptionMap.put(Name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
142	[BUG]  [BUGGY]  newOptionMap.put(Name,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(Name,  newAnonymous,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(Name,  newAnonymous,  required);	  newOptionMap.put(Name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
143	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(description  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(description  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(description  -  1);	  Option    option    =(Option)newOptionMap.get(name    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
144	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1  +  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(name  -  1  +  1);	  Option    option    =(Option)newOptionMap.get(name    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
145	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newPrefixes);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newPrefixes);	  final    Set    newPrefixes    =    new    HashSet(required);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
146	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required,  maximum);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(required,  maximum);	  final    Set    newPrefixes    =    new    HashSet(required);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
147	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required,  minimum);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(required,  minimum);	  final    Set    newPrefixes    =    new    HashSet(required);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
148	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(prefixes);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(prefixes);	  final    Set    newPrefixes    =    new    HashSet(required);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
149	[BUG]  [BUGGY]  newAnonymous.put(description,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.put(description,  newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.put(description,  newOptionMap);	  newAnonymous.put(name,    newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
150	[BUG]  [BUGGY]  newAnonymous.put(name,  newOptionMap?  null  :  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.put(name,  newOptionMap?  null  :  newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.put(name,  newOptionMap?  null  :  newOptionMap);	  newAnonymous.put(name,    newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
151	[BUG]  [BUGGY]  final  Option  option  =  newOptionMap.getOption(description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  newOptionMap.getOption(description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  newOptionMap.getOption(description);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
152	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this.name  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(this.name  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(this.name  -  1);	  Option    option    =(Option)newOptionMap.get(this.name);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
153	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newAnonymous);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
154	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this.options);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
155	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  TreeSet(optionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  TreeSet(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  TreeSet(optionMap);	  final    Set    newPrefixes    =    new    TreeSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
156	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(newOptionMap);	  final    Set    newPrefixes    =    new    TreeSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
157	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap.keySet());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap.keySet());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(optionMap.keySet());	  final    Set    newPrefixes    =    new    TreeSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
158	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  this.options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  this.options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
159	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  description);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
160	[BUG]  [BUGGY]  final  Option  option  =  this.optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  this.optionMap.getOption(this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  this.optionMap.getOption(this.description);	  final    Option    option    =    optionMap.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
161	[BUG]  [BUGGY]  final  Option  option  =  this.description.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  this.description.getOption(optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  this.description.getOption(optionMap);	  final    Option    option    =    optionMap.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
162	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(name);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
163	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous,  this.options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(newAnonymous,  this.options);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
164	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(this.options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(this.options);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
165	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.defaultAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.defaultAnonymous);	  final    SortedMap    options    =    newOptionMap.get(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
166	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(ReverseStringComparator.class);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(ReverseStringComparator.class);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(ReverseStringComparator.class);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(name);	  final    SortedMap    options    =    newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
168	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
169	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault(),  optionMap);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
170	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  options);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
171	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.SOURCE);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.SOURCE);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.SOURCE);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
172	[BUG]  [BUGGY]  newOptionMap.put(Anonymous.NAME,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(Anonymous.NAME,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(Anonymous.NAME,  newAnonymous);	  newOptionMap.put(Name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
173	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options  -  1);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.options  -  1);	  final    SortedMap    options    =    newOptionMap.get(this.options);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
175	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(name  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(name  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(name  -  1);	  Option    option    =(Option)this.optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
176	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(option);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(option);	  Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
177	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)optionMap.get(this);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)optionMap.get(this);	  Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
178	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)this.optionMap.get(this);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(this);	  Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  newAnonymous,  required);	  final    Option    option    =    options.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
180	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous,  prefixes);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  newAnonymous,  prefixes);	  final    Option    option    =    options.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
181	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  options);	  final    SortedMap    newOptionMap    =    newOptionMap(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
182	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(optionMap);	  final    SortedMap    options    =    newOptionMap.toArray(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(name  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)optionMap.get(name  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)optionMap.get(name  -  1);	  Option    option    =(Option)newOptionMap.get(name    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
184	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this.options,  options);	  final    SortedMap    newOptionMap    =    newOptionMap(this.options);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
185	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  ArrayList(optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  ArrayList(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  ArrayList(optionMap);	  final    List    newPrefixes    =    new    ArrayList(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
186	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(optionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeMap(optionMap);	  final    List    newPrefixes    =    new    ArrayList(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
187	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous,  options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous,  options);	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
189	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  Prefixes();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  Prefixes();  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  Prefixes();	  final    List    newPrefixes    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
190	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description,  maximum);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  description,  maximum);	  final    Option    option    =    optionMap.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
192	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeMap(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeMap(newOptionMap);	  final    Set    newPrefixes    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
193	[BUG]  [BUGGY]  newAnonymous.addAll(options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.addAll(options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(options);	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
194	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options,  options);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
195	[BUG]  [BUGGY]  final  SortedMap  options  =  options.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  options.get(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  options.get(newAnonymous);	  final    SortedMap    options    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
196	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(optionMap,  newAnonymous);	  final    Set    newPrefixes    =    new    TreeSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
197	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous,  options);	  final    SortedMap    newOptionMap    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
198	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous  -  1);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous  -  1);	  final    SortedMap    newOptionMap    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
199	[BUG]  [BUGGY]  final  SortedMap  options  =  options.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  options.getAllOptions();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  options.getAllOptions();	  final    SortedMap    options    =    newOptionMap.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
200	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.getOptionMap(this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.options.getOptionMap(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.getOptionMap(this);	  final    SortedMap    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
201	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  newAnonymous,  required);	  final    Option    option    =    optionMap.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
202	[BUG]  [BUGGY]  final  SortedMap  options  =  options.get();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  options.get();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  options.get();	  final    SortedMap    options    =    optionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
203	[BUG]  [BUGGY]  final  Option  option  =  this.options.getOption(optionMap);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  this.options.getOption(optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  this.options.getOption(optionMap);	  final    Option    option    =    optionMap.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
204	[BUG]  [BUGGY]  final  Option  option  =  this.optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  this.optionMap.getOption(option);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  this.optionMap.getOption(option);	  final    Option    option    =    optionMap.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
205	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.name);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
206	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.name,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.name,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.name,  description);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
207	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(defaultAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(defaultAnonymous);	  final    SortedMap    options    =    newOptionMap.get(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
208	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options,  required);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    options);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
209	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.values();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.values();	  final    SortedMap    options    =    newOptionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
210	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault());  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault());	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
211	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  true);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  true);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  true);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
213	[BUG]  [BUGGY]  Option  options  =  optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  options  =  optionMap.getOption(this.description);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  optionMap.getOption(this.description);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
214	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  optionMap.getOption(name,  newAnonymous);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
215	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(newPrefixes);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(newPrefixes);	  final    Set    newPrefixes    =    new    TreeSet(required);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
216	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  options);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  options);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
217	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(this.description,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.description,  newAnonymous);	  final    Option    option    =    options.getOption(this.description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
218	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(this);	  final    SortedMap    newOptionMap    =    newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
219	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.getOptions(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.getOptions(newOptionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.getOptions(newOptionMap);	  final    SortedMap    options    =    newOptionMap.getOptions(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
220	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(newOptionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(newOptionMap);	  final    List    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
221	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);	  final    List    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
222	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(optionMap);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(optionMap);	  final    SortedMap    options    =    newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
223	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous,  false);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.toArray(newAnonymous,  false);	  final    SortedMap    options    =    newOptionMap.toArray(newAnonymous,    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
224	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(optionMap,  newOptionMap);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
225	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefix);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefix);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefix);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
226	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap,  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap,  options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newOptionMap,  options);	  final    Set    newPrefixes    =    new    HashSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
227	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  options);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
228	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  option);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  option);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
229	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  preferred);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  preferred);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  preferred);	  newOptionMap.put(name,    newAnonymous).put(description,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
230	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous  -  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(newAnonymous  -  1);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
231	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous  +  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(newAnonymous  +  1);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
232	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(newAnonymous,  options);	  final    SortedMap    newOptionMap    =    options.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
233	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(ReverseStringComparator.this.options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(ReverseStringComparator.this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(ReverseStringComparator.this.options);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this.options);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
234	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  /  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =(Option)newOptionMap.get(name  /  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(name  /  1);	  Option    option    =(Option)newOptionMap.get(name    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
235	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.instance());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.instance());  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.instance());	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
236	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class,  description);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
237	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.class);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.class);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.class);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
238	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newOptionMap,  newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
239	[BUG]  [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  }  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	if(optionMap!=  null)  {  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  }	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
240	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this);	  final    SortedMap    newOptionMap    =    newOptionMap(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
241	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  this);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(optionMap,  this);	  final    SortedMap    newOptionMap    =    newOptionMap(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
242	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous,  this);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
243	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC());  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC());  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstanceUTC());	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
244	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  description);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
245	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE,  this);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
246	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.get(option);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(option);	  final    SortedMap    options    =    newOptionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
247	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this);	  final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance(),    this.options);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
248	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  newAnonymous,  description);	  final    Option    option    =    optionMap.getOption(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
249	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefixes);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  prefixes);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
250	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  options);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous,  options);	  final    Set    newPrefixes    =    new    HashSet(optionMap,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
251	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.getOptions(this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  optionMap.getOptions(this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.getOptions(this);	  final    SortedMap    options    =    newOptionMap.getOptions(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
252	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  optionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this,  optionMap);	  final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
253	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  this.description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous,  this.description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  this.description);	  newOptionMap.put(name,    newAnonymous,    description);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
254	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  description,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous,  description,  required);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  description,  required);	  newOptionMap.put(name,    newAnonymous,    description);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
255	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  this);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
256	[BUG]  [BUGGY]  final  SortedMap  options  =  this.optionMap.getOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  options  =  this.optionMap.getOptionMap();  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.optionMap.getOptionMap();	  final    SortedMap    options    =    this.optionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
257	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).addValue(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newOptionMap.put(name,  newAnonymous).addValue(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).addValue(newAnonymous);	  newOptionMap.put(name,    newAnonymous).setValue(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
258	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.addAll(optionMap,  newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(optionMap,  newOptionMap);	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
259	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  this.optionMap.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  SortedMap  newOptionMap  =  this.optionMap.get(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  this.optionMap.get(newAnonymous);	  final    SortedMap    newOptionMap    =    optionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
260	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  List  newPrefixes  =  new  HashSet(required);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(required);	  final    List    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
261	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description  +  1);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
262	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options,  newOptionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(this.options,  newOptionMap);	  final    Set    newPrefixes    =    new    HashSet(this.options);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
263	[BUG]  [BUGGY]  newAnonymous.put(name,  newOptionMap));  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  newAnonymous.put(name,  newOptionMap));  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.put(name,  newOptionMap));	  newAnonymous.put(name,    newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
264	[BUG]  [BUGGY]  optionMap  =(Option)newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  optionMap  =(Option)newOptionMap.get(this);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	optionMap  =(Option)newOptionMap.get(this);	  Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
265	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous.values());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous.values());  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous.values());	  final    Set    newPrefixes    =    new    HashSet(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
266	[BUG]  [BUGGY]  final  Set  <  String>  options  =  new  HashSet(optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  <  String>  options  =  new  HashSet(optionMap);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  <  String>  options  =  new  HashSet(optionMap);	  final    List    newPrefixes    =    new    ArrayList(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
267	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required,  newAnonymous);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(required,  newAnonymous);	  final    Set    newPrefixes    =    new    TreeSet(required);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
268	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());        [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]        for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  optionMap.getOption(name);	  Option    options    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
