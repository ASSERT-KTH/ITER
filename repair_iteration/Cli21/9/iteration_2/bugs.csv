bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(description);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  1);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(name  +  1);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this.name);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(this.name);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(this.name);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  options.getOption(description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(description);	      final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  options.getOption(name,  description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  description);	      final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  options.getOption(this.description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.description);	      final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.defaultName);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  options.getOption(this.defaultName);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(this.defaultName);	      final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);	      final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);	      final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault());  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault());	      final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  description);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(name,  newAnonymous);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(name,  newAnonymous,  description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  description);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(name,  newAnonymous,  required);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous,  required);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  newOptionMap.put(description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(description,  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(description,  newAnonymous);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.class);	      final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this);	      final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.INSTANCE);	      final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  TreeSet();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  List  newPrefixes  =  new  TreeSet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  TreeSet();	  final    Set    newPrefixes    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newAnonymous);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  HashSet(newOptionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(newOptionMap);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(optionMap,  newAnonymous);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  HashSet(this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(this.options);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.keySet();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.keySet();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.keySet();	      final    SortedMap    options    =    newOptionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.values();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.values();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.values();	      final    SortedMap    options    =    newOptionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  optionMap.get();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get();	      final    SortedMap    options    =    newOptionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  newAnonymous.add(newOptionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newAnonymous.add(newOptionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.add(newOptionMap);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newAnonymous.addAll(optionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.addAll(optionMap);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  this.options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  this.options);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  false);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  false);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(newOptionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newAnonymous.toArray(newOptionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newAnonymous.toArray(newOptionMap);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(name);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap.get(name);	      final    SortedMap    newOptionMap    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap.get(this);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap.get(this);	      final    SortedMap    newOptionMap    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  optionMap.get(newAnonymous);	      final    SortedMap    newOptionMap    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());	      final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  newAnonymous);	      final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  this.options);	      final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(name);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(name);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(name);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options);  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(this.options);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(this.options);	      final    SortedMap    newOptionMap    =    newOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  final  ArrayList  newPrefixes  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  ArrayList  newPrefixes  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  ArrayList  newPrefixes  =  new  ArrayList();	  final    Set    newPrefixes    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.getOptions();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  optionMap.getOptions();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.getOptions();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  final  SortedMap  options  =  this.options.getOptions();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  this.options.getOptions();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.options.getOptions();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.getAllOptions();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getAllOptions();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  final  SortedMap  options  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  options.getOptions();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  options.getOptions();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptions(optionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptions(optionMap);	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  List  newPrefixes  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList();	  final    Set    newPrefixes    =    new    LinkedHashSet();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(name  -  1);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
50	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this.description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(this.description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(this.description);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
51	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(optionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(optionMap);	  final    Set    newPrefixes    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(ReverseStringComparator.this.options);	      final    SortedMap    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  options.get(newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  options.get(newAnonymous);	      final    SortedMap    newOptionMap    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(option);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(option);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  optionMap.get(newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.get(newAnonymous);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  options);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  optionMap.toArray(newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  optionMap.toArray(newAnonymous);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  optionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  optionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newAnonymous,  optionMap);	      final    SortedMap    options    =    newOptionMap.toArray(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  options.getOption(name,  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(name,  newAnonymous);	      final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(optionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(optionMap);	      final    SortedMap    newOptionMap    =    newOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  newOptionMap.put(Name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(Name,  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(Name,  newAnonymous);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  newAnonymous.put(name,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newAnonymous.put(name,  newOptionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newAnonymous.put(name,  newOptionMap);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  ArrayList(optionMap);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  List  newPrefixes  =  new  ArrayList(optionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  ArrayList(optionMap);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  List  newPrefixes  =  new  HashSet(optionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  List  newPrefixes  =  new  HashSet(optionMap);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getInstance(),  options);	      final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault());  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  newOptionMap  =  newOptionMap(ReverseStringComparator.getDefault());	      final    SortedMap    newOptionMap    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newOptionMap);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.toArray(newOptionMap);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.toArray(newOptionMap);	      final    SortedMap    options    =    newOptionMap.get();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =  options.getOption(name);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)newOptionMap.get(this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)newOptionMap.get(this);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Option  option  =  optionMap.getOption(this.description);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Option  option  =  optionMap.getOption(this.description);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  TreeSet(required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeSet(required);	  final    Set    newPrefixes    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(name,  newAnonymous).put(description,  newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).put(description,  newAnonymous);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  newOptionMap.put(name,  newAnonymous).setValue(newAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	newOptionMap.put(name,  newAnonymous).setValue(newAnonymous);	      newOptionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  final  SortedMap  options  =  this.optionMap.getOptions();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  this.optionMap.getOptions();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  this.optionMap.getOptions();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.getOptionMap();  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.getOptionMap();	      final    SortedMap    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  option  =(Option)this.optionMap.get(name);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  option  =(Option)this.optionMap.get(name);	      Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  HashSet(required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  HashSet(required);	  final    Set    newPrefixes    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.INSTANCE);	      final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  Option  options  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  Option  options  =  optionMap.getOption(name);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	Option  options  =  optionMap.getOption(name);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap.get(defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  SortedMap  options  =  newOptionMap.get(defaultAnonymous);  [BUGGY]    final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  SortedMap  options  =  newOptionMap.get(defaultAnonymous);	      final    SortedMap    options    =    newOptionMap.get(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  TreeMap();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  TreeMap();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  TreeMap();	  final    Set    newPrefixes    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  final  Set  newPrefixes  =  new  LinkedList();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());      [BUGGY]  final  Set  newPrefixes  =  new  LinkedList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	final  Set  newPrefixes  =  new  LinkedList();	  final    Set    newPrefixes    =    new    LinkedHashSet();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
