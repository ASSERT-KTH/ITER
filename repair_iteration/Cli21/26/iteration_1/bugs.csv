bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  option  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  optionMap.get(commandLine);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  optionMap.get(commandLine);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
2	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  optionMap.getOption(commandLine);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  optionMap.getOption(commandLine);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
3	[BUG]  [BUGGY]    Option  option  =  options.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  options.getOption(commandLine);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  options.getOption(commandLine);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
4	[BUG]  [BUGGY]    final  Option  option  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    final  Option  option  =  optionMap.get(commandLine);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    final  Option  option  =  optionMap.get(commandLine);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
5	[BUG]  [BUGGY]    final  String  commandLine  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    final  String  commandLine  =  optionMap.get(commandLine);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    final  String  commandLine  =  optionMap.get(commandLine);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
6	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine);	final  Map  tailMap  =  optionMap.tailMap(arg);  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]  final  Map  tailMap  =  options.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap(arg);	final  Map  tailMap  =  optionMap.tailMap(arg);  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
8	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap();  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]  final  Map  tailMap  =  optionMap.tailMap();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.tailMap();	final  Map  tailMap  =  optionMap.tailMap(arg);  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
9	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg);  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.values().tailMap(arg);	final  Map  tailMap  =  optionMap.tailMap(arg);  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
10	[BUG]  [BUGGY]    Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  optionMap.get(arg);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
11	[BUG]  [BUGGY]    Option  option  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  optionMap.values().iterator();  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  optionMap.values().iterator();		non-compiled	[CE]  illegal  start  of  expression	52	None	add
12	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionsMap.tailMap(arg);	final  Map  tailMap  =  optionMap.tailMap(arg);  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
13	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }    [BUGGY]    Option  option  =  optionMap.getOption(arg);  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	    Option  option  =  optionMap.getOption(arg);		non-compiled	[CE]  illegal  start  of  expression	52	None	add
