bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap(commandLine);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.tailMap();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap();	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine,  arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap(commandLine,  arg);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(commandLine,  arg);	      Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(commandLine,  description);	      Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  Option  option  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.keySet().iterator();  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.keySet().iterator();	      Option    option    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.values().iterator();  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  options.values().iterator();	      Option    option    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  option  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  option  =  optionMap.values().iterator();  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	option  =  optionMap.values().iterator();	      Option    option    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(commandLine  -  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.get(commandLine  -  1);	      Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(commandLine,  arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.get(commandLine,  arg);	      Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.get(commandLine,  arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Option  option  =  optionMap.get(commandLine,  arg);	      final    Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.get(commandLine  -  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Option  option  =  optionMap.get(commandLine  -  1);	      final    Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.get(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Option  option  =  optionMap.get(arg);	      final    Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  final  String  commandLine  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  String  commandLine  =  optionMap.get(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  String  commandLine  =  optionMap.get(arg);	      final    String    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  final  String  commandLine  =  optionMap.get(commandline);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  String  commandLine  =  optionMap.get(commandline);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  String  commandLine  =  optionMap.get(commandline);	      final    String    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  final  String  commandLine  =  optionMap.get(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  String  commandLine  =  optionMap.get(commandLine  -  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  String  commandLine  =  optionMap.get(commandLine  -  1);	      final    String    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg)+  1;  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(arg)+  1;  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.get(arg)+  1;	      Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionsMap.tailMap(commandLine);	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionsMap.tailMap();	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.values().tailMap(commandLine);	  final    Map    tailMap    =    optionMap.values().tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(commandLine,  arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.values().tailMap(commandLine,  arg);	  final    Map    tailMap    =    optionMap.values().tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  final  Map  tailMap  =  options.values().tailMap(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.values().tailMap(arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.values().tailMap(arg);	  final    Map    tailMap    =    optionMap.values().tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.values().tailMap(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionsMap.values().tailMap(arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionsMap.values().tailMap(arg);	  final    Map    tailMap    =    optionMap.values().tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  options.getOption(commandLine,  arg);	      Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  options.getOption(arg);	      Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandLine,  description);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  options.getOption(commandLine,  description);	      Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Option  option  =  optionMap.getOption(arg);	      Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.values();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.values();	  final    Map    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.keySet();	  final    Map    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);	  final    Map    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);	  final    Map    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  newAnonymous);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  newAnonymous);	  final    Map    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(commandLine  +  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.get(commandLine  +  1);	      Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandLine,  null);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  options.getOption(commandLine,  null);	      Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(arg,  description);	      Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(arg  +  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.get(arg  +  1);	      Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionsMap.get(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionsMap.get(arg);	      Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  null);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(commandLine,  null);	      Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(optionMap);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.tailMap(optionMap);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap(optionMap);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  Option  option  =  optionsMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionsMap.values().iterator();  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionsMap.values().iterator();	      Option    option    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  WriteableCommandLine  commandLine  =  optionMap.get(commandLine);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  WriteableCommandLine  commandLine  =  optionMap.get(commandLine);	      final    String    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.get(commandLine  +  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Option  option  =  optionMap.get(commandLine  +  1);	      final    Option    option    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg)+  1;  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(arg)+  1;  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(arg)+  1;	      Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  options.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  options.tailMap(arg,  description);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine  -  1);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	Option  option  =  optionMap.getOption(commandLine  -  1);	      Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  WriteableCommandLine  commandLine  =  optionMap.get(arg);  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  WriteableCommandLine  commandLine  =  optionMap.get(arg);	      final    String    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  return  true;  }      [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	final  Map  tailMap  =  optionMap.values().tailMap(arg,  description);	  final    Map    tailMap    =    optionMap.values().tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
