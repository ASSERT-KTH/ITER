bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(previous  +  1);	  Argument    argument    =(Argument)arguments.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg  -  1);	  Argument    argument    =(Argument)arguments.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg  +  1);	  Argument    argument    =(Argument)arguments.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)this.optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)this.optionMap.get(arg  -  1);	  Option    option    =(Option)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg).toLowerCase(Locale.ENGLISH);	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
6	[BUG]  [BUGGY]  Argument  argument  =(Option)arguments.get(arg).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)arguments.get(arg).toLowerCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)arguments.get(arg).toLowerCase();	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
7	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toLowerCase(false);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toLowerCase(false);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg).toLowerCase(false);	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
8	[BUG]  [BUGGY]  if(arguments!=  null  &&  argumentMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments!=  null  &&  argumentMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments!=  null  &&  argumentMap.containsKey(arg))  {	  if(arg!=    null    &&    argumentMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
9	[BUG]  [BUGGY]  if(arguments!=  null  &&  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments!=  null  &&  optionMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments!=  null  &&  optionMap.containsKey(arg))  {	  if(arg!=    null    &&    argumentMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  if(arg!=  null  &&  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arg!=  null  &&  optionMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arg!=  null  &&  optionMap.containsKey(arg))  {	  if(arg!=    null    &&    argumentMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)arguments.clone();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.clone();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.clone();	  Option    option    =(Option)arg.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
12	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)options.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)options.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)options.get(previous);	  final    Argument    argument    =(Argument)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
13	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(previous  +  1);	  Argument    argument    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
14	[BUG]  [BUGGY]  Argument  argument  =(Option)arguments.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)arguments.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)arguments.get(arg  +  1);	  Argument    argument    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
15	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg)/  1;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg)/  1;  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg)/  1;	  Argument    argument    =    options.get(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
16	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg)+  2;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg)+  2;  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg)+  2;	  Argument    argument    =    options.get(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
17	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg)-  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg)-  1;  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg)-  1;	  Argument    argument    =    options.get(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
18	[BUG]  [BUGGY]  if(previous!=  null  ||  arg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg.length()  ==  0)  {	  if(previous    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
19	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg.length()  ==  0)  {	  if(previous    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
20	[BUG]  [BUGGY]  if(optionMap!=  null  ||  arguments.previous)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(optionMap!=  null  ||  arguments.previous)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(optionMap!=  null  ||  arguments.previous)  {	  if(optionMap!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
21	[BUG]  [BUGGY]  if(optionMap!=  null  ||  arguments.previous()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(optionMap!=  null  ||  arguments.previous()  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(optionMap!=  null  ||  arguments.previous()  ==  null)  {	  if(optionMap!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
22	[BUG]  [BUGGY]  if(optionMap  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(optionMap  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(optionMap  ==  null)  {	  if(optionMap!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(previous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(previous);	  Option    option    =(Option)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)this.optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)this.optionMap.get(previous);	  Option    option    =(Option)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  if(optionMap.hasNext())  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(optionMap.hasNext())  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(optionMap.hasNext())  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
26	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments.hasNext()  ||  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments.hasNext()  ||  arguments.previous()!=  null)  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
27	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  arguments.previous()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments.hasNext()  ||  arguments.previous()  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments.hasNext()  ||  arguments.previous()  ==  null)  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
28	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  arguments.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  arguments.get(previous);	  Argument    argument    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  Argument  argument  =  options.get(0);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(0);	  Argument    argument    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  Argument  argument  =(Option)arguments.get(previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)arguments.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)arguments.get(previous);	  Argument    argument    =(Option)arguments.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  Argument  argument  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  optionMap.get(previous);	  Argument    argument    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =  optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =  optionMap.get(previous);	  Argument    argument    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
33	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();	  Argument    argument    =(Argument)arguments.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
34	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg).toLowerCase(Locale.ENGLISH);	  Argument    argument    =(Argument)arguments.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
35	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toUpperCase();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toUpperCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg).toUpperCase();	  Argument    argument    =(Argument)arguments.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
36	[BUG]  [BUGGY]  Option  argument  =(Option)arguments.get(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)arguments.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)arguments.get(arg);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
37	[BUG]  [BUGGY]  Option  argument  =(Option)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)optionMap.get(previous);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
38	[BUG]  [BUGGY]  Option  argument  =(Option)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)this.optionMap.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)this.optionMap.get(arg);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
39	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments!=  null  &&  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments!=  null  &&  arguments.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
40	[BUG]  [BUGGY]  if(previous!=  null  &&  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  arguments.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
41	[BUG]  [BUGGY]  if(arg!=  null  ||  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arg!=  null  ||  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arg!=  null  ||  arguments.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
42	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.next();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.optionMap.next();	  final    Argument    argument    =(Argument)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)options.get(previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)options.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)options.get(previous);	  Option    option    =(Option)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)optionMap.get(previous);	  final    Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  Argument  argument  =(Option)this.optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)this.optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)this.optionMap.get(arg  -  1);	  Argument    argument    =(Option)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
46	[BUG]  [BUGGY]  Argument  argument  =(Option)this.optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)this.optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)this.optionMap.get(previous);	  Argument    argument    =(Option)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  if(arg!=  null  ||  arg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arg!=  null  ||  arg.length()  >  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arg!=  null  ||  arg.length()  >  0)  {	  if(arg!=    null    &&    arg.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
48	[BUG]  [BUGGY]  if(arguments!=  null  &&  arg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments!=  null  &&  arg.length()  >  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments!=  null  &&  arg.length()  >  0)  {	  if(arg!=    null    &&    arg.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
49	[BUG]  [BUGGY]  if(previous!=  null  &&  arg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  arg.length()  >  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  arg.length()  >  0)  {	  if(arg!=    null    &&    arg.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
50	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  description);	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
51	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.toLowerCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg.toLowerCase());	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
52	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toUpperCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.toUpperCase());	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
53	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1,  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length  -  1,  description);	  Argument    argument    =(Argument)arguments.get(arg.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length  -  1  +  1);	  Argument    argument    =(Argument)arguments.get(arg.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg.length  -  1);	  Argument    argument    =(Argument)arguments.get(arg.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length());	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
57	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length()  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length()  +  1);	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length()  *  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length()  *  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length()  *  1);	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
59	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(previous);	  Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg  -  1);	  Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  if(!foundMemberOption  &&  previous!=  null)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  previous!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  previous!=  null)  {	  if(!foundMemberOption    &&    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
62	[BUG]  [BUGGY]  if(previous!=  null  &&!foundMemberOption  &&  previous!=  arg)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&!foundMemberOption  &&  previous!=  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&!foundMemberOption  &&  previous!=  arg)  {	  if(!foundMemberOption    &&    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
63	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(previous  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(previous  -  1);	  Option    option    =(Option)arguments.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(arg  -  1,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(arg  -  1,  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(arg  -  1,  description);	  Option    option    =(Option)arguments.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg.equals(previous))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg.equals(previous))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg.equals(previous))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  if(previous!=  null  ||  arg.equals(previous))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg.equals(previous))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg.equals(previous))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  if(previous  ==  null  &&  previous.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  &&  previous.equals(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  &&  previous.equals(arg))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  if(previous!=  null  &&  previous.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  previous.equals(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  previous.equals(arg))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
69	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(0);	  Argument    argument    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
70	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(previous  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(previous  -  1);	  Argument    argument    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  Argument  argument  =(Option)arguments.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)arguments.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)arguments.get(arg  -  1);	  Argument    argument    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(partial  -  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(partial  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(partial  -  1);	  Argument    argument    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  Argument  argument  =  options.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(previous  +  1);	  Argument    argument    =    options.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg  -  1);	  Argument    argument    =    options.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg  /  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg  /  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg  /  1);	  Argument    argument    =    options.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg,  description);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
77	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(previous,  arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(previous,  arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(previous,  arg);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
78	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(partial,  arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(partial,  arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(partial,  arg);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
79	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(argument,  previous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(argument,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(argument,  previous);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
80	[BUG]  [BUGGY]  if(previous  ==  null  &&  previous.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  &&  previous.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  &&  previous.length()  ==  0)  {	  if(previous    ==    null    ||    previous.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
81	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)args.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)args.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)args.get(previous);	  final    Argument    argument    =(Argument)args.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
82	[BUG]  [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)this.optionMap.get(arg  -  1);	  Argument    argument    =(Argument)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)this.optionMap.get(arg  +  1);	  Argument    argument    =(Argument)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.optionMap.get(previous);	  final    Argument    argument    =(Argument)arguments.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
85	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.options.get(previous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.options.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.options.get(previous);	  final    Argument    argument    =(Argument)arguments.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg.toLowerCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)arguments.get(arg.toLowerCase());	  final    Argument    argument    =(Argument)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  Argument  argument  =  options.get(previous,  arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(previous,  arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(previous,  arg);	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
88	[BUG]  [BUGGY]  Argument  argument  =  options.get(previous,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(previous,  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(previous,  description);	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg,  previous);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg,  previous);	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg,  arg.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg,  arg.toLowerCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg,  arg.toLowerCase());	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  Option  option  =(Option)argMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)argMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)argMap.get(previous);	  Option    option    =(Option)argMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
92	[BUG]  [BUGGY]  option  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  option  =(Option)optionMap.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	option  =(Option)optionMap.get(arg);	  Option    option    =(Option)argMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg!=  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg!=  null)  {	  if(previous!=    null    ||    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
94	[BUG]  [BUGGY]  if(previous!=  null  ||  arg!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg!=  null)  {	  if(previous!=    null    ||    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  if(previous!=  null  &&  previous!=  arg)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  previous!=  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  previous!=  arg)  {	  if(previous!=    null    ||    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  if(previous  ==  null  ||  previous!=  arg)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  previous!=  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  previous!=  arg)  {	  if(previous!=    null    ||    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
97	[BUG]  [BUGGY]  Argument  argument  =(Option)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)this.optionMap.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)this.optionMap.get(0);	  Argument    argument    =(Option)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
98	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(previous  +  1);	  Option    option    =(Option)arguments.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(2);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(2);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(2);	  Option    option    =(Option)arguments.get(1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
100	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(previous  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(previous  -  1);	  Option    option    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
101	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(arguments.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(arguments.size()  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(arguments.size()  -  1);	  Option    option    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
102	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.optionMap.get(arg  -  1);	  final    Argument    argument    =(Argument)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
103	[BUG]  [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)this.optionMap.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)this.optionMap.get(previous);	  Argument    argument    =(Argument)arguments.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
104	[BUG]  [BUGGY]  if(!foundMemberOption  &&  previous  ==  arguments.previous)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  previous  ==  arguments.previous)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  previous  ==  arguments.previous)  {	  if(!foundMemberOption    &&    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
105	[BUG]  [BUGGY]  if(!foundMemberOption  &&  previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  previous  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  previous  ==  null)  {	  if(!foundMemberOption    &&    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg  ==  null)  {	  if(previous!=    null    ||    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  if(previous!=  null  ||  arg  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg  ==  null)  {	  if(previous!=    null    ||    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
108	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg  ==  previous)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg  ==  previous)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg  ==  previous)  {	  if(previous!=    null    ||    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
109	[BUG]  [BUGGY]  if(previous!=  null  ||  arg  ==  previous)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg  ==  previous)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg  ==  previous)  {	  if(previous!=    null    ||    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
110	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(previous  +  1);	  Option    option    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
111	[BUG]  [BUGGY]  Argument  argument  =(Argument)options.get(previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)options.get(previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)options.get(previous);	  Argument    argument    =(Argument)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
112	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toUpperCase();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).toUpperCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg).toUpperCase();	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
113	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).valueToLowerCase();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).valueToLowerCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg).valueToLowerCase();	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
114	[BUG]  [BUGGY]  if(previous!=  null  ||  argumentMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  argumentMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  argumentMap.containsKey(arg))  {	  if(previous    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
115	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)optionMap.get(arg  +  1);	  final    Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
116	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)optionMap.get(arg  -  1);	  final    Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
117	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg,  previous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)optionMap.get(arg,  previous);	  final    Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
118	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)options.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)options.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)options.get(arg  +  1);	  final    Argument    argument    =(Argument)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
119	[BUG]  [BUGGY]  Argument  argument  =(Option)this.optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)this.optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)this.optionMap.get(arg  +  1);	  Argument    argument    =(Option)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  if(previous!=  null  &&  optionMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  optionMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  optionMap.containsKey(arg))  {	  if(arg!=    null    &&    argumentMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
121	[BUG]  [BUGGY]  if(previous!=  null  &&  argumentMap.containsKey(arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  argumentMap.containsKey(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  argumentMap.containsKey(arg))  {	  if(arg!=    null    &&    argumentMap.containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(0);	  Option    option    =(Option)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
123	[BUG]  [BUGGY]  if(previous!=  null  &&!foundMemberOption  &&  previous  ==  arg)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&!foundMemberOption  &&  previous  ==  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&!foundMemberOption  &&  previous  ==  arg)  {	  if(!foundMemberOption    &&    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
124	[BUG]  [BUGGY]  if(previous!=  null  &&  arg.equals(previous))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  arg.equals(previous))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  arg.equals(previous))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
125	[BUG]  [BUGGY]  if(previous!=  null  &&!previous.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&!previous.equals(arg))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&!previous.equals(arg))  {	  if(previous    ==    null    ||    previous.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
126	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length()  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg.length()  -  1);	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
127	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg.length());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg.length());	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
128	[BUG]  [BUGGY]  if(previous!=  null  ||  arg.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  ||  arg.equals( " "))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  ||  arg.equals( " "))  {	  if(previous!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  Argument  argument  =(Option)options.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)options.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)options.get(arg);	  Argument    argument    =(Option)arguments.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
130	[BUG]  [BUGGY]  Option  argument  =(Option)optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)optionMap.get(arg  +  1);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
131	[BUG]  [BUGGY]  Option  argument  =(Option)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)optionMap.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)optionMap.get(arg  -  1);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
132	[BUG]  [BUGGY]  Option  argument  =(Option)optionMap.get(arg,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =(Option)optionMap.get(arg,  description);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =(Option)optionMap.get(arg,  description);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
133	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg  /  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg  /  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg  /  1);	  Argument    argument    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg  -  1  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg  -  1  +  1);	  Argument    argument    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toLowerCase(label);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg).toLowerCase(label);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg).toLowerCase(label);	  Argument    argument    =(Argument)arguments.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
136	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg,  previous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)optionMap.get(arg,  previous);	  Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
137	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  arg.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments.hasNext()  ||  arg.equals( " "))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments.hasNext()  ||  arg.equals( " "))  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
138	[BUG]  [BUGGY]  if(!foundMemberOption  &&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  arguments.hasNext())  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  arguments.hasNext())  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
139	[BUG]  [BUGGY]  Option  option  =(Option)options.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)options.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)options.get(arg  +  1);	  Option    option    =(Option)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
140	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)this.optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)this.optionMap.get(arg  +  1);	  Option    option    =(Option)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
141	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg  /  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg  /  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg  /  1);	  Argument    argument    =(Argument)arguments.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
142	[BUG]  [BUGGY]  if(previous  ==  null  &&  arg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  &&  arg.length()  >  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  &&  arg.length()  >  0)  {	  if(arg!=    null    &&    arg.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
143	[BUG]  [BUGGY]  final  Option  option  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Option  option  =(Option)optionMap.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Option  option  =(Option)optionMap.get(arg);	  Option    option    =(Option)argMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
144	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  previous);	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
145	[BUG]  [BUGGY]  Argument  argument  =(Argument)options.get(arg.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)options.get(arg.toLowerCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)options.get(arg.toLowerCase());	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
146	[BUG]  [BUGGY]  Argument  argument  =(Argument)options.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)options.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)options.get(arg  +  1);	  Argument    argument    =(Argument)options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
147	[BUG]  [BUGGY]  Option  option  =(Option)options.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)options.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)options.get(arg  -  1);	  Option    option    =(Option)arguments.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
148	[BUG]  [BUGGY]  Option  option  =(Option)args.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)args.get(previous  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)args.get(previous  -  1);	  Option    option    =(Option)arguments.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
149	[BUG]  [BUGGY]  if(previous!=  null  &&  previous.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  previous.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  previous.length()  ==  0)  {	  if(previous    ==    null    ||    previous.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
150	[BUG]  [BUGGY]  if(previous  ==  null  ||  argument.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  argument.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  argument.length()  ==  0)  {	  if(previous    ==    null    ||    previous.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
151	[BUG]  [BUGGY]  if(previous  ==  null  &&  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  &&  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  &&  arguments.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
152	[BUG]  [BUGGY]  if(previous!=  null  &&  options.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  options.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  options.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
153	[BUG]  [BUGGY]  if(previous!=  null  &&  argumentMap.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  argumentMap.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  argumentMap.previous()!=  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
154	[BUG]  [BUGGY]  Option  previous  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  previous  =  options.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  previous  =  options.get(arg);	  Argument    argument    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
155	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(arg  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(arg  -  1  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(arg  -  1  +  1);	  Option    option    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
156	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  argument  =  optionMap.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  argument  =  optionMap.get(arg);	  Argument    argument    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
157	[BUG]  [BUGGY]  Argument  argument  =(Argument)args.get(arg.length  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)args.get(arg.length  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)args.get(arg.length  -  1);	  Argument    argument    =(Argument)arguments.get(arg.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
158	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg.length()  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)arguments.get(arg.length()  -  1);	  final    Argument    argument    =(Argument)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
159	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)arguments.get(arg  -  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)arguments.get(arg  -  1);	  final    Argument    argument    =(Argument)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
160	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg,  name);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg,  name);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg,  name);	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
161	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg,  description  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg,  description  +  1);	  Argument    argument    =    options.get(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
162	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(arg  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.optionMap.get(arg  +  1);	  final    Argument    argument    =(Argument)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
163	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg)+  1L;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg)+  1L;  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg)+  1L;	  Argument    argument    =    options.get(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
164	[BUG]  [BUGGY]  if(previous!=  null  &&  previous  ==  arg)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  previous  ==  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  previous  ==  arg)  {	  if(previous!=    null    ||    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
165	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  name);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg,  name);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
166	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  null);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  null);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg,  null);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
167	[BUG]  [BUGGY]  if(previous  ==  null  ||  arg.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous  ==  null  ||  arg.equals( " "))  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous  ==  null  ||  arg.equals( " "))  {	  if(previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
168	[BUG]  [BUGGY]  if(arg!=  null  &&  arguments.previous()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arg!=  null  &&  arguments.previous()  ==  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arg!=  null  &&  arguments.previous()  ==  null)  {	  if(arg!=    null    &&    arguments.previous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
169	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  arg.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  arg.toLowerCase());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.toLowerCase(),  arg.toLowerCase());	  Argument    argument    =(Argument)arguments.get(arg.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
170	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(arg  /  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(arg  /  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(arg  /  1);	  Option    option    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
171	[BUG]  [BUGGY]  Argument  argument  =  optionMap.get(arg,  previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  optionMap.get(arg,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  optionMap.get(arg,  previous);	  Argument    argument    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
172	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)this.optionMap.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)this.optionMap.get(0);	  final    Argument    argument    =(Argument)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
173	[BUG]  [BUGGY]  if(previous!=  null  &&  arg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(previous!=  null  &&  arg.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(previous!=  null  &&  arg.length()  ==  0)  {	  if(previous    ==    null    ||    previous.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
174	[BUG]  [BUGGY]  final  Option  argument  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Option  argument  =(Option)optionMap.get(arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Option  argument  =(Option)optionMap.get(arg);	  Option    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
175	[BUG]  [BUGGY]  Argument  argument  =(Argument)args.get(arg.length());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)args.get(arg.length());  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)args.get(arg.length());	  Argument    argument    =(Argument)arguments.get(arg.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
176	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)arguments.get(2);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)arguments.get(2);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)arguments.get(2);	  final    Argument    argument    =(Argument)arguments.get(1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
177	[BUG]  [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  final  Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	final  Argument  argument  =(Argument)optionMap.get(arg).toLowerCase();	  final    Argument    argument    =(Argument)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
178	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg,  arg);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg,  arg);	  Argument    argument    =(Option)optionMap.get(arg,    previous);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
179	[BUG]  [BUGGY]  Option  option  =(Option)arguments.get(arg).clone();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)arguments.get(arg).clone();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)arguments.get(arg).clone();	  Option    option    =(Option)arg.clone();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
180	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)this.optionMap.get(0);	  Option    option    =(Option)arguments.get(0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
181	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(arg  -  2);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Option  option  =(Option)optionMap.get(arg  -  2);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Option  option  =(Option)optionMap.get(arg  -  2);	  Option    option    =(Option)optionMap.get(arg    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
182	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).append( ", ");  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg).append( ", ");  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Option)optionMap.get(arg).append( ", ");	  Argument    argument    =(Option)optionMap.get(arg).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
183	[BUG]  [BUGGY]  Argument  argument  =  options.get(arg,  previous  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =  options.get(arg,  previous  +  1);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =  options.get(arg,  previous  +  1);	  Argument    argument    =    options.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
184	[BUG]  [BUGGY]  if(!foundMemberOption  &&  previous!=  arg.trim())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  previous!=  arg.trim())  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  previous!=  arg.trim())  {	  if(!foundMemberOption    &&    previous!=    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
185	[BUG]  [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1,  previous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)arguments.get(arg.length  -  1,  previous);  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)arguments.get(arg.length  -  1,  previous);	  Argument    argument    =(Argument)arguments.get(arg.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
186	[BUG]  [BUGGY]  Argument  argument  =(Argument)this.optionMap.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  Argument  argument  =(Argument)this.optionMap.next();  [BUGGY]      if  (arg  ==  previous)  {  arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	Argument  argument  =(Argument)this.optionMap.next();	  Argument    argument    =(Argument)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
187	[BUG]  [BUGGY]  if(optionMap!=  null  ||  arguments.previous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(optionMap!=  null  ||  arguments.previous()!=  null)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(optionMap!=  null  ||  arguments.previous()!=  null)  {	  if(optionMap!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  if(!foundMemberOption  &&  previous  ==  arg.trim())  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  previous  ==  arg.trim())  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  previous  ==  arg.trim())  {	  if(!foundMemberOption    &&    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
189	[BUG]  [BUGGY]  if(!foundMemberOption  &&  argument  ==  arg)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(!foundMemberOption  &&  argument  ==  arg)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(!foundMemberOption  &&  argument  ==  arg)  {	  if(!foundMemberOption    &&    previous    ==    arg)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
190	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  arg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      throws  OptionException  {  String  previous  =  null;  while  (arguments.hasNext())  {  final  String  arg  =  (String)  arguments.next();        [BUGGY]  if(arguments.hasNext()  ||  arg.length()  ==  0)  {  [BUGGY]        arguments.previous();  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	if(arguments.hasNext()  ||  arg.length()  ==  0)  {	  if(arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
