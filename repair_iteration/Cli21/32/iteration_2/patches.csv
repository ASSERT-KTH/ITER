bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.keys().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =  option.keys().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =  option.keys().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  EnsureLikeOption(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  EnsureLikeOption(commandLine,  arg))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	EnsureLikeOption(commandLine,  arg))  {  return  true;  }	  ensureLikeOption(arg,    commandLine))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
3	[BUG]  [BUGGY]  ensureLikeOption(arg,  description))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ensureLikeOption(arg,  description))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ensureLikeOption(arg,  description))  {  return  true;  }	  ensureLikeOption(arg,    commandLine))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  ensureLikeOption(option,  commandLine))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ensureLikeOption(option,  commandLine))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ensureLikeOption(option,  commandLine))  {  return  true;  }	  ensureLikeOption(arg,    commandLine))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg)+  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg)+  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg)+  1);	  return(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
6	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)/  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)/  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)/  1);	  return(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
7	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)+  2);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)+  2);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg)+  2);	  return(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
8	[BUG]  [BUGGY]  Option  anonymous  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  anonymous  =  option.canProcess(commandLine,  arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  anonymous  =  option.canProcess(commandLine,  arg);	  if(hasOption(option.canProcess(commandLine,    arg)))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  Option  option  =  option.findOption(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.findOption(arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.findOption(arg);	  if(hasOption(option.canProcess(commandLine,    arg)))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg,  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.canProcess(commandLine,  arg,  description);	  Option    option    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.canProcess(commandLine,  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.canProcess(commandLine,  description);	  Option    option    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg  +  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.canProcess(commandLine,  arg  +  1);	  Option    option    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  arg)+  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  arg)+  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  arg)+  1);	  return(option.canProcess(commandLine)||    option.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
14	[BUG]  [BUGGY]  return(option.canProcess(commandLine)||  option.canProcess(commandLine,  arg)/  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)||  option.canProcess(commandLine,  arg)/  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)||  option.canProcess(commandLine,  arg)/  1);	  return(option.canProcess(commandLine)||    option.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
15	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  Set    <    Option>    newAnonymous    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	  Set    <    Option>    newAnonymous    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
19	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.getOption(name);	  Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)option.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =(Option)option.getValue();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =(Option)option.getValue();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  Option  option  =  option.withDescription(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.withDescription(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.withDescription(commandLine);	  Option    option    =    option.withDescription(arg);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.withDescription(description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.withDescription(description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.withDescription(description);	  Option    option    =    option.withDescription(arg);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
24	[BUG]  [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  name));  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  name));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  name));	  return(option.canProcess(commandLine)||    option.canProcess(commandLine,    name));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
25	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  commandLine  =  option.canProcess(commandLine,  arg);	  Option    commandLine    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  commandLine  =  option.canProcess(commandLine,  description);	  Option    commandLine    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  commandLine  =  option.canProcess(arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  commandLine  =  option.canProcess(arg);	  Option    commandLine    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  List  <  Option>  anonymous  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =  tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =  tailMap.values().iterator();	  List    <    Option>    anonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
29	[BUG]  [BUGGY]  List  <  Option>  anonymous  =  newAnonymous.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =  newAnonymous.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =  newAnonymous.values().iterator();	  List    <    Option>    anonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
30	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)tailMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)tailMap.get(arg);	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.get(arg);	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)this.optionMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =(List  <  Option>)this.optionMap.get(arg);	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
33	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)tailMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =(List  <  Option>)tailMap.get(arg);	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
34	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.getValue();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =(Option)optionMap.getValue();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =(Option)optionMap.getValue();	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
37	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =  option.keySet().iterator();	  List    <    Option>    newAnonymous    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();	  List    <    Option>    newAnonymous    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
39	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(commandLine,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(commandLine,  description);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.createOption(arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.createOption(arg,  description);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  Option  option  =  option.createOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(name,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(name,  description);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.getOption(commandLine,  description);	  Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Option  anonymous  =  option.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  anonymous  =  option.canProcess(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  anonymous  =  option.canProcess(commandLine);	  if(hasOption(option.canProcess(commandLine)))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
45	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
46	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.getOption(commandLine,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.getOption(commandLine,  description);	  Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.getOption(commandLine,  arg);	  Option    option    =    options.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
49	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
50	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
51	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
52	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg)+  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg)+  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg)+  1);	  return(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
53	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)/  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)/  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)/  1);	  return(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
54	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =(List  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.createOption(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.createOption(commandLine);	  Option    option    =    option.createOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  description)&&  option.canProcess(commandLine,  arg));  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  description)&&  option.canProcess(commandLine,  arg));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  description)&&  option.canProcess(commandLine,  arg));	  return(option.canProcess(commandLine,    arg)&&    option.canProcess(commandLine,    arg));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
58	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
59	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
60	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.getOption(arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.getOption(arg,  description);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandline);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.getOption(commandline);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.getOption(commandline);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setContextClassLoader(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setContextClassLoader(commandLine);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(option,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setContextClassLoader(option,  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setContextClassLoader(option,  description);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this.commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setContextClassLoader(this.commandLine);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  List  <  Option>  anonymous  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =  option.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =  option.values().iterator();	  List    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
67	[BUG]  [BUGGY]  List  <  Option>  anonym  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =  options.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =  options.values().iterator();	  List    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
68	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.createOption(commandLine,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.createOption(commandLine,  arg);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.createOption(arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.createOption(arg,  description);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.createOption(arg);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.createOption(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.createOption(arg);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
71	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(commandLine,  arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(commandLine,  arg,  description);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  description));  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  description));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)&&  option.canProcess(commandLine,  description));	  return(option.canProcess(commandLine)||    option.canProcess(commandLine,    description));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  Option  option  =  option.canProcess(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.canProcess(arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.canProcess(arg);	  Option    option    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
75	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
76	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
78	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
79	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
80	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.canProcess(commandLine,  arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.canProcess(commandLine,  arg);	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
81	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.getCommandLine(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.getCommandLine(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.getCommandLine(commandLine);	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
82	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  options.getCommandLine();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  options.getCommandLine();  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  options.getCommandLine();	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
83	[BUG]  [BUGGY]  Option  option  =  option.getOption( "command ",  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption( "command ",  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption( "command ",  description);	  Option    option    =    option.getOption(   "command   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
84	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption( "command ");  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.getOption( "command ");  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.getOption( "command ");	  Option    option    =    option.getOption(   "command   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
85	[BUG]  [BUGGY]  Option  option  =  option.getOption( "command ",  arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption( "command ",  arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption( "command ",  arg);	  Option    option    =    option.getOption(   "command   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
86	[BUG]  [BUGGY]  Option  option  =  option.createOption(name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(name);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(name);	  Option    option    =    option.createOption(description);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)tailMap.values().iterator();	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
88	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)this.optionMap.values().iterator();	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
89	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
90	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
91	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.getOption(commandLine,  arg);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(arg,  description);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  Option  option  =  option.getOption(description,  commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(description,  commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(description,  commandLine);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(commandLine,  arg,  description);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(commandLine,  arg  +  1);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(commandLine,  arg  +  1);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  return(option.canProcess(commandLine)&&  options.canProcess(commandLine,  arg));  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)&&  options.canProcess(commandLine,  arg));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)&&  options.canProcess(commandLine,  arg));	  return(option.canProcess(commandLine)&&    option.canProcess(commandLine,    arg));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg)+  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg)+  1);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg)+  1);	  return(option.canProcess(commandLine)||    options.canProcess(commandLine,    arg));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg),  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg),  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg),  description);	  return(option.canProcess(commandLine)||    options.canProcess(commandLine,    arg));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
100	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();	  List    <    Option>    newAnonymous    =    tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
101	[BUG]  [BUGGY]  ensureLikeOption(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ensureLikeOption(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ensureLikeOption(commandLine,  arg))  {  return  false;  }	  ensureLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
102	[BUG]  [BUGGY]  ensureLikeOption(option,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ensureLikeOption(option,  arg))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ensureLikeOption(option,  arg))  {  return  true;  }	  ensureLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
103	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)optionMap.get(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)optionMap.get(commandLine);	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
104	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
105	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg  +  1);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg  +  1);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
106	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  name)&&  options.canProcess(commandLine,  arg));  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  name)&&  options.canProcess(commandLine,  arg));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  name)&&  options.canProcess(commandLine,  arg));	  return(option.canProcess(commandLine,    arg)&&    options.canProcess(commandLine,    arg));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
107	[BUG]  [BUGGY]  Option  option  =  option.getOption( "prototype ");  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption( "prototype ");  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption( "prototype ");	  if(hasOption(option.canProcess(commandLine,    arg)))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
108	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.next();	  Set    <    Option>    newAnonymous    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.canProcess(commandLine,  name);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.canProcess(commandLine,  name);	  Option    option    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  Option  option  =  option.withDescription(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.withDescription(arg,  description);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.withDescription(arg,  description);	  Option    option    =    option.withDescription(arg);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
111	[BUG]  [BUGGY]  return(option.canProcess(name)||  option.canProcess(commandLine,  name));  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(name)||  option.canProcess(commandLine,  name));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(name)||  option.canProcess(commandLine,  name));	  return(option.canProcess(commandLine)||    option.canProcess(commandLine,    name));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
112	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
113	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.createOption(description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.createOption(description);	  Option    option    =    option.createOption(description);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
114	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
115	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.getMutableCommandLine();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.getMutableCommandLine();  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.getMutableCommandLine();	  if(hasOption(option.canProcess(commandLine,    arg)))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
116	[BUG]  [BUGGY]  Thread.currentThread().setAnonymousCommandLine(option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setAnonymousCommandLine(option);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setAnonymousCommandLine(option);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  Thread.currentThread().setOptionClassLoader(option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setOptionClassLoader(option);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setOptionClassLoader(option);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
119	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)tailMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =(List  <  Option>)tailMap.values().iterator();	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
120	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)optionMap.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonym  =(List  <  Option>)optionMap.values().iterator();	  List    <    Option>    anonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
121	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.getArgument();  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.getArgument();	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
122	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.getCommandLine(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.getCommandLine(arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.getCommandLine(arg);	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
123	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =(Option)optionMap.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =(Option)optionMap.next();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  options.get(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  options.get(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  options.get(commandLine);	  if(canProcessLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
125	[BUG]  [BUGGY]  Option  option  =  option.createOption(description,  arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(description,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(description,  arg);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
126	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.createOption(commandLine,  name);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.createOption(commandLine,  name);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  ensureLikeOption(commandLine,  false))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  ensureLikeOption(commandLine,  false))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	ensureLikeOption(commandLine,  false))  {  return  true;  }	  ensureLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
128	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
129	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(commandLine,  null);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
130	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption(commandLine,  name);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
131	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  option.getOption();  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  option.getOption();	  if(option.canProcess(commandLine))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
132	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  option  =(Option)option.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	option  =(Option)option.next();	  option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
133	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)option.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
134	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.get(commandLine);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.get(commandLine);	  Option    option    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  Parchet.checkArgument(hasOption(option.canProcess(commandLine)));  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Parchet.checkArgument(hasOption(option.canProcess(commandLine)));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Parchet.checkArgument(hasOption(option.canProcess(commandLine)));	  if(hasOption(option.canProcess(commandLine)))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
136	[BUG]  [BUGGY]  List  <  Option>  anonymous  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =  options.keySet().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =  options.keySet().iterator();	  List    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
137	[BUG]  [BUGGY]  Option  option  =(Option)iter.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =(Option)iter.getAnonymousValue();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =(Option)iter.getAnonymousValue();	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
138	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.getArgumentLine();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.getArgumentLine();  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.getArgumentLine();	  MutableCommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
139	[BUG]  [BUGGY]  parent.addArg(option.canProcess(commandLine,  arg));  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  parent.addArg(option.canProcess(commandLine,  arg));  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	parent.addArg(option.canProcess(commandLine,  arg));	  if(hasOption(option.canProcess(commandLine,    arg)))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
140	[BUG]  [BUGGY]  parent  ==  canProcessLikeOption(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  parent  ==  canProcessLikeOption(commandLine,  arg))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	parent  ==  canProcessLikeOption(commandLine,  arg))  {  return  true;  }	  if(canProcessLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
141	[BUG]  [BUGGY]  parent  ==  canProcessLikeOption(arg,  commandLine))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  parent  ==  canProcessLikeOption(arg,  commandLine))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	parent  ==  canProcessLikeOption(arg,  commandLine))  {  return  true;  }	  if(canProcessLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
142	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  option.canProcessLikeOption(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  MutableCommandLine  commandLine  =  option.canProcessLikeOption(arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	MutableCommandLine  commandLine  =  option.canProcessLikeOption(arg);	  if(canProcessLikeOption(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
143	[BUG]  [BUGGY]  EnsureLikeOption(arg,  description))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  EnsureLikeOption(arg,  description))  {  return  true;  }  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	EnsureLikeOption(arg,  description))  {  return  true;  }	  ensureLikeOption(arg,    commandLine))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.createOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  options.createOption(commandLine,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  options.createOption(commandLine,  arg);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
145	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAnonymousCommandLine(option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAnonymousCommandLine(option);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().getContextClassLoader().setAnonymousCommandLine(option);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
146	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(option)&&  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Thread.currentThread().setContextClassLoader(option)&&  option.canProcess(commandLine,  arg);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Thread.currentThread().setContextClassLoader(option)&&  option.canProcess(commandLine,  arg);	  Thread.currentThread().setContextClassLoader(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
147	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)+  2);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)+  2);  [BUGGY]      }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	return(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg)+  2);	  return(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg)+    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
150	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	Option  option  =  optionMap.getOption(arg,  description);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
